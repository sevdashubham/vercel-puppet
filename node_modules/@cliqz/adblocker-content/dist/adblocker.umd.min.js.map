{"version":3,"file":"adblocker.umd.min.js","sources":["../adblocker.ts"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport type { AST } from '@cliqz/adblocker-extended-selectors';\n\nconst SCRIPT_ID = 'cliqz-adblocker-script';\nconst IGNORED_TAGS = new Set(['br', 'head', 'link', 'meta', 'script', 'style', 's']);\n\nexport type Lifecycle = 'start' | 'dom-update';\n\nexport interface IBackgroundCallback {\n  classes: string[];\n  hrefs: string[];\n  ids: string[];\n  lifecycle: Lifecycle;\n}\n\nexport interface IMessageFromBackground {\n  active: boolean;\n  scripts: string[];\n  styles: string;\n  extended: {\n    ast: AST;\n    remove: boolean;\n    attribute?: string | undefined;\n  }[];\n}\n\nfunction isElement(node: Node): node is Element {\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#node_type_constants\n  return node.nodeType === 1; // Node.ELEMENT_NODE;\n}\n\nfunction getElementsFromMutations(mutations: MutationRecord[]): Element[] {\n  // Accumulate all nodes which were updated in `nodes`\n  const elements: Element[] = [];\n\n  for (const mutation of mutations) {\n    if (mutation.type === 'attributes') {\n      if (isElement(mutation.target)) {\n        elements.push(mutation.target);\n      }\n    } else if (mutation.type === 'childList') {\n      for (const addedNode of mutation.addedNodes) {\n        if (isElement(addedNode) && addedNode.id !== SCRIPT_ID) {\n          elements.push(addedNode);\n        }\n      }\n    }\n  }\n\n  return elements;\n}\n\n/**\n * WARNING: this function should be self-contained and not rely on any global\n * symbol. That constraint needs to be fulfilled because this function can\n * potentially be injected in content-script (e.g.: see PuppeteerBlocker for\n * more details).\n */\nexport function extractFeaturesFromDOM(\n  roots: Element[],\n): {\n  classes: string[];\n  hrefs: string[];\n  ids: string[];\n} {\n  // NOTE: This cannot be global as puppeteer needs to be able to serialize this function.\n  const ignoredTags = new Set(['br', 'head', 'link', 'meta', 'script', 'style', 's']);\n  const classes: Set<string> = new Set();\n  const hrefs: Set<string> = new Set();\n  const ids: Set<string> = new Set();\n\n  for (const root of roots) {\n    for (const element of [root, ...root.querySelectorAll('[id],[class],[href]')]) {\n      if (ignoredTags.has(element.nodeName.toLowerCase())) {\n        continue;\n      }\n\n      // Update ids\n      const id = element.id;\n      if (id) {\n        ids.add(id);\n      }\n\n      // Update classes\n      const classList = element.classList;\n      if (classList) {\n        for (const cls of classList) {\n          classes.add(cls);\n        }\n      }\n\n      // Update href\n      const href = element.getAttribute('href');\n      if (typeof href === 'string') {\n        hrefs.add(href);\n      }\n    }\n  }\n\n  return {\n    classes: Array.from(classes),\n    hrefs: Array.from(hrefs),\n    ids: Array.from(ids),\n  };\n}\n\nexport interface FeaturesUpdate {\n  type: 'features';\n  ids: string[];\n  classes: string[];\n  hrefs: string[];\n}\n\nexport interface ElementsUpdate {\n  type: 'elements';\n  elements: Element[];\n}\n\nexport type DOMUpdate = FeaturesUpdate | ElementsUpdate;\n\nexport class DOMMonitor {\n  private knownIds: Set<string> = new Set();\n  private knownHrefs: Set<string> = new Set();\n  private knownClasses: Set<string> = new Set();\n\n  private observer: MutationObserver | null = null;\n\n  constructor(private readonly cb: (update: DOMUpdate) => void) {}\n\n  public queryAll(window: Pick<Window, 'document'>): void {\n    this.cb({ type: 'elements', elements: [window.document.documentElement] });\n    this.handleUpdatedNodes([window.document.documentElement]);\n  }\n\n  public start(\n    window: Pick<Window, 'document'> & { MutationObserver?: typeof MutationObserver },\n  ): void {\n    if (this.observer === null && window.MutationObserver !== undefined) {\n      this.observer = new window.MutationObserver((mutations: MutationRecord[]) => {\n        this.handleUpdatedNodes(getElementsFromMutations(mutations));\n      });\n\n      this.observer.observe(window.document.documentElement, {\n        // Monitor some attributes\n        attributes: true,\n        attributeFilter: ['class', 'id', 'href'],\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  public stop(): void {\n    if (this.observer !== null) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  }\n\n  public handleNewFeatures({\n    hrefs,\n    ids,\n    classes,\n  }: {\n    hrefs: string[];\n    ids: string[];\n    classes: string[];\n  }): boolean {\n    const newIds: string[] = [];\n    const newClasses: string[] = [];\n    const newHrefs: string[] = [];\n\n    // Update ids\n    for (const id of ids) {\n      if (this.knownIds.has(id) === false) {\n        newIds.push(id);\n        this.knownIds.add(id);\n      }\n    }\n\n    for (const cls of classes) {\n      if (this.knownClasses.has(cls) === false) {\n        newClasses.push(cls);\n        this.knownClasses.add(cls);\n      }\n    }\n\n    for (const href of hrefs) {\n      if (this.knownHrefs.has(href) === false) {\n        newHrefs.push(href);\n        this.knownHrefs.add(href);\n      }\n    }\n\n    if (newIds.length !== 0 || newClasses.length !== 0 || newHrefs.length !== 0) {\n      this.cb({\n        type: 'features',\n        classes: newClasses,\n        hrefs: newHrefs,\n        ids: newIds,\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleUpdatedNodes(elements: Element[]): boolean {\n    if (elements.length !== 0) {\n      this.cb({\n        type: 'elements',\n        elements: elements.filter((e) => IGNORED_TAGS.has(e.nodeName.toLowerCase()) === false),\n      });\n      return this.handleNewFeatures(extractFeaturesFromDOM(elements));\n    }\n\n    return false;\n  }\n}\n\n/**\n * Wrap a self-executing script into a block of custom logic to remove the\n * script tag once execution is terminated. This can be useful to not leave\n * traces in the DOM after injections.\n */\nexport function autoRemoveScript(script: string): string {\n  // Minified using 'terser'\n  return `try{${script}}catch(c){}!function(){var c=document.currentScript,e=c&&c.parentNode;e&&e.removeChild(c)}();`;\n  // Original:\n  //\n  //    try {\n  //      ${script}\n  //    } catch (ex) { }\n  //\n  //    (function() {\n  //      var currentScript = document.currentScript;\n  //      var parent = currentScript && currentScript.parentNode;\n  //\n  //      if (parent) {\n  //        parent.removeChild(currentScript);\n  //      }\n  //    })();\n}\n\nexport function injectScript(s: string, doc: Document): void {\n  const script = doc.createElement('script');\n  script.type = 'text/javascript';\n  script.id = SCRIPT_ID;\n  script.async = false;\n  script.appendChild(doc.createTextNode(autoRemoveScript(s)));\n\n  // Insert node\n  const parent = doc.head || doc.documentElement;\n  if (parent !== null) {\n    parent.appendChild(script);\n  }\n}\n"],"names":["SCRIPT_ID","IGNORED_TAGS","Set","isElement","node","nodeType","extractFeaturesFromDOM","roots","ignoredTags","classes","hrefs","ids","root","element","querySelectorAll","has","nodeName","toLowerCase","id","add","classList","cls","href","getAttribute","Array","from","autoRemoveScript","script","[object Object]","cb","this","window","type","elements","document","documentElement","handleUpdatedNodes","observer","undefined","MutationObserver","mutations","mutation","target","push","addedNode","addedNodes","getElementsFromMutations","observe","attributes","attributeFilter","childList","subtree","disconnect","newIds","newClasses","newHrefs","knownIds","knownClasses","knownHrefs","length","filter","e","handleNewFeatures","s","doc","createElement","async","appendChild","createTextNode","parent","head"],"mappings":"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"}