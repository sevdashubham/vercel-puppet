{"version":3,"file":"adblocker.umd.min.js","sources":["../../../node_modules/@remusao/trie/index.ts","../../../node_modules/@remusao/smaz-compress/index.ts","../../../node_modules/@remusao/smaz-decompress/index.ts","../../../node_modules/@remusao/smaz/index.ts","../src/codebooks/cosmetic-selector.ts","../src/codebooks/network-csp.ts","../src/codebooks/network-filter.ts","../src/codebooks/network-hostname.ts","../src/codebooks/network-redirect.ts","../src/codebooks/raw-network.ts","../src/codebooks/raw-cosmetic.ts","../src/compression.ts","../src/crc32.ts","../src/punycode.ts","../src/data-view.ts","../src/queue-microtask.ts","../src/config.ts","../src/events.ts","../src/fetch.ts","../src/filters/dsl.ts","../../adblocker-extended-selectors/src/parse.ts","../../adblocker-extended-selectors/src/types.ts","../../adblocker-extended-selectors/src/extended.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/documents.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/fonts.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/images.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/medias.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/scripts.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/stylesheets.ts","../../../node_modules/tldts-core/src/extract-hostname.ts","../../../node_modules/tldts-core/src/is-valid.ts","../../../node_modules/tldts-core/src/options.ts","../../../node_modules/tldts-core/src/factory.ts","../../../node_modules/tldts-core/src/is-ip.ts","../../../node_modules/tldts-core/src/domain.ts","../../../node_modules/tldts-core/src/subdomain.ts","../../../node_modules/tldts-core/src/domain-without-suffix.ts","../../../node_modules/tldts-experimental/src/data/hashes.ts","../../../node_modules/tldts-experimental/src/packed-hashes.ts","../../../node_modules/tldts-core/src/lookup/fast-path.ts","../../../node_modules/tldts-experimental/index.ts","../src/tokens-buffer.ts","../src/utils.ts","../src/request.ts","../../../node_modules/@remusao/guess-url-type/index.ts","../../../node_modules/@remusao/guess-url-type/src/extname.ts","../src/engine/domains.ts","../src/html-filtering.ts","../src/filters/cosmetic.ts","../src/filters/network.ts","../src/lists.ts","../../../node_modules/@remusao/small/src/flv.ts","../../../node_modules/@remusao/small/src/gif.ts","../../../node_modules/@remusao/small/src/html.ts","../../../node_modules/@remusao/small/src/ico.ts","../../../node_modules/@remusao/small/src/jpeg.ts","../../../node_modules/@remusao/small/src/javascript.ts","../../../node_modules/@remusao/small/src/json.ts","../../../node_modules/@remusao/small/src/mp3.ts","../../../node_modules/@remusao/small/src/mp4.ts","../../../node_modules/@remusao/small/src/pdf.ts","../../../node_modules/@remusao/small/src/png.ts","../../../node_modules/@remusao/small/src/svg.ts","../../../node_modules/@remusao/small/src/txt.ts","../../../node_modules/@remusao/small/src/wav.ts","../../../node_modules/@remusao/small/src/webm.ts","../../../node_modules/@remusao/small/src/webp.ts","../../../node_modules/@remusao/small/src/wmv.ts","../../../node_modules/@remusao/small/index.ts","../src/resources.ts","../src/compact-set.ts","../src/engine/optimizer.ts","../src/engine/reverse-index.ts","../src/engine/bucket/filters.ts","../src/engine/bucket/cosmetic.ts","../src/engine/bucket/network.ts","../src/engine/engine.ts","../src/encoding.ts"],"sourcesContent":[null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"acis, document.querySelectorAll, popMagic\",\n  \"acis, addEventListener, google_ad_client\",\n  \"acis, String.fromCharCode, /btoa|break/\",\n  \"aopr, app_vars.force_disable_adblock\",\n  \"paid.outbrain.com/network/redir?\\\"]\",\n  \"acis, disableSelection, reEnable\",\n  \"acis, document.getElementById, \",\n  \"acis, document.createElement, \",\n  \"aopr, document.dispatchEvent\",\n  \"acis, String.fromCharCode, \",\n  \"Date.prototype.toUTCString\",\n  \"acis, Math, break;case $.\",\n  \"nosiif, visibility, 1000\",\n  \"document.onselectstart\",\n  \"acis, Math, zfgloaded\",\n  \"set, blurred, false\",\n  \"[id*=\\\"ScriptRoot\\\"]\",\n  \"[target=\\\"_blank\\\"]\",\n  \"[href^=\\\"https://\",\n  \"a[href^=\\\"http://\",\n  \"disableSelection\",\n  \"[href^=\\\"http://\",\n  \":nth-of-type(\",\n  \"advertisement\",\n  \"div[class^=\\\"\",\n  \"XMLHttpReque\",\n  \"contextmenu\",\n  \"LieDetector\",\n  \"otification\",\n  \", noopFunc\",\n  \":has-text(\",\n  \"AaDetector\",\n  \"aopw, _pop\",\n  \"background\",\n  \"[href^=\\\"/\",\n  \"container\",\n  \"Container\",\n  \"decodeURI\",\n  \"div[id^=\\\"\",\n  \"div[style\",\n  \"placehold\",\n  \"rectangle\",\n  \"[href*=\\\"\",\n  \"[width=\\\"\",\n  \"disclaim\",\n  \"https://\",\n  \"nano-sib\",\n  \"nextFunc\",\n  \"nostif, \",\n  \"nowebrtc\",\n  \"skyscrap\",\n  \".com/\\\"]\",\n  \"'shift'\",\n  \"#ctl00_\",\n  \"300x250\",\n  \"article\",\n  \"consent\",\n  \"content\",\n  \"message\",\n  \"Message\",\n  \"privacy\",\n  \"sidebar\",\n  \"sponsor\",\n  \"wrapper\",\n  \", true\",\n  \"[class\",\n  \"[data-\",\n  \"728x90\",\n  \"accept\",\n  \"Accept\",\n  \"acis, \",\n  \"aeld, \",\n  \"aopr, \",\n  \"aopw, \",\n  \"banner\",\n  \"bottom\",\n  \"Bottom\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"notice\",\n  \"nowoif\",\n  \"policy\",\n  \"Policy\",\n  \"script\",\n  \"widget\",\n  \":has(\",\n  \":not(\",\n  \"block\",\n  \"Block\",\n  \"board\",\n  \"click\",\n  \"docum\",\n  \"ExoLo\",\n  \"frame\",\n  \"popup\",\n  \"promo\",\n  \"right\",\n  \"sense\",\n  \"set, \",\n  \"Wrapp\",\n  \".com\",\n  \"body\",\n  \"dfp-\",\n  \"down\",\n  \"foot\",\n  \"gdpr\",\n  \"hold\",\n  \"home\",\n  \"ight\",\n  \"Info\",\n  \"page\",\n  \"show\",\n  \"text\",\n  \"tion\",\n  \"view\",\n  \"wrap\",\n  \"www.\",\n  \" > \",\n  \"250\",\n  \"box\",\n  \"Box\",\n  \"div\",\n  \"ent\",\n  \"ide\",\n  \"lay\",\n  \"mod\",\n  \"out\",\n  \"px;\",\n  \"sby\",\n  \"top\",\n  \"__\",\n  \", \",\n  \".t\",\n  \"\\\"]\",\n  \"=\\\"\",\n  \"00\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"Ad\",\n  \"ag\",\n  \"al\",\n  \"an\",\n  \"ar\",\n  \"at\",\n  \"co\",\n  \"de\",\n  \"e-\",\n  \"ed\",\n  \"el\",\n  \"en\",\n  \"er\",\n  \"fi\",\n  \"fo\",\n  \"g-\",\n  \"he\",\n  \"ic\",\n  \"id\",\n  \"il\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"la\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"ma\",\n  \"mp\",\n  \"on\",\n  \"oo\",\n  \"op\",\n  \"or\",\n  \"ov\",\n  \"po\",\n  \"ra\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"se\",\n  \"st\",\n  \"t_\",\n  \"t-\",\n  \"ti\",\n  \"un\",\n  \" \",\n  \"_\",\n  \"-\",\n  \";\",\n  \":\",\n  \".\",\n  \")\",\n  \"[\",\n  \"]\",\n  \"*\",\n  \"/\",\n  \"#\",\n  \"^\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"B\",\n  \"c\",\n  \"C\",\n  \"d\",\n  \"D\",\n  \"e\",\n  \"E\",\n  \"f\",\n  \"F\",\n  \"g\",\n  \"G\",\n  \"h\",\n  \"H\",\n  \"i\",\n  \"I\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"L\",\n  \"m\",\n  \"M\",\n  \"n\",\n  \"N\",\n  \"o\",\n  \"O\",\n  \"p\",\n  \"P\",\n  \"q\",\n  \"r\",\n  \"R\",\n  \"s\",\n  \"S\",\n  \"t\",\n  \"T\",\n  \"u\",\n  \"U\",\n  \"v\",\n  \"w\",\n  \"W\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"sandbox allow-forms allow-same-origin allow-scripts allow-modals allow-orientation-lock allow-pointer-lock allow-presentation allow-top-navigation\",\n  \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n  \"script-src 'self' 'unsafe-inline' 'unsafe-eval' data: \",\n  \".com *.cloudflare.com *.gstatic.com *.google\",\n  \"script-src 'self' * 'unsafe-inline'\",\n  \" *.recaptcha.net *.solvemedia.com\",\n  \"script-src 'self' 'unsafe-inline'\",\n  \"script-src 'self' * blob: data:\",\n  \" 'unsafe-eval' 'unsafe-inline'\",\n  \".com *.googletagmanager.com *.\",\n  \"script-src * 'unsafe-inline'\",\n  \" *.google.com *.gstatic.com\",\n  \" *.gstatic.com *.google.com\",\n  \".com *.google-analytics.com\",\n  \"-src 'self' *.google.com\",\n  \".googletagmanager.com\",\n  \"*.googleapis.com *.\",\n  \"disqus.com *.disqus\",\n  \"connect-src 'self'\",\n  \".google-analytics\",\n  \"child-src 'none';\",\n  \"googletagservices\",\n  \"worker-src 'none'\",\n  \"bootstrapcdn.com\",\n  \"'unsafe-inline'\",\n  \"cloudflare.com\",\n  \"disquscdn.com\",\n  \"recaptcha.net\",\n  \" *.facebook\",\n  \"=' 'sha256-\",\n  \"script-src \",\n  \"style-src \",\n  \" *.google\",\n  \"*.gstatic\",\n  \"child-src\",\n  \"frame-src\",\n  \" data: *\",\n  \"facebook\",\n  \"hcaptcha\",\n  \"https://\",\n  \".com *.\",\n  \"connect\",\n  \"twitter\",\n  \" blob:\",\n  \" data:\",\n  \"'self'\",\n  \"disqus\",\n  \"google\",\n  \"-src \",\n  \"media\",\n  \".com\",\n  \".net\",\n  \"stat\",\n  \" *.\",\n  \"age\",\n  \"blo\",\n  \"cdn\",\n  \"tag\",\n  \" '\",\n  \" *\",\n  \"; \",\n  \"ad\",\n  \"an\",\n  \"ar\",\n  \"at\",\n  \"be\",\n  \"ch\",\n  \"de\",\n  \"df\",\n  \"er\",\n  \"ev\",\n  \"il\",\n  \"is\",\n  \"la\",\n  \"lo\",\n  \"me\",\n  \"ns\",\n  \"qu\",\n  \"re\",\n  \"so\",\n  \"wp\",\n  \"ww\",\n  \" \",\n  \"-\",\n  \";\",\n  \":\",\n  \".\",\n  \"'\",\n  \"*\",\n  \"/\",\n  \"+\",\n  \"=\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"B\",\n  \"c\",\n  \"C\",\n  \"d\",\n  \"D\",\n  \"e\",\n  \"E\",\n  \"f\",\n  \"F\",\n  \"g\",\n  \"G\",\n  \"h\",\n  \"H\",\n  \"i\",\n  \"I\",\n  \"j\",\n  \"J\",\n  \"k\",\n  \"K\",\n  \"l\",\n  \"L\",\n  \"m\",\n  \"M\",\n  \"n\",\n  \"N\",\n  \"o\",\n  \"O\",\n  \"p\",\n  \"P\",\n  \"q\",\n  \"Q\",\n  \"r\",\n  \"R\",\n  \"s\",\n  \"S\",\n  \"t\",\n  \"T\",\n  \"u\",\n  \"U\",\n  \"v\",\n  \"V\",\n  \"w\",\n  \"W\",\n  \"x\",\n  \"X\",\n  \"y\",\n  \"Y\",\n  \"z\",\n  \"Z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"/wrappermessagingwithoutdetection\",\n  \"/pagead/js/adsbygoogle.js\",\n  \"/^https?:\\\\/\\\\/(.+?\\\\.)?\",\n  \"/js/sdkloader/ima3.js\",\n  \"/wp-content/plugins/\",\n  \"/wp-content/uploads/\",\n  \"/cdn-cgi/pe/bag2?\",\n  \"/detroitchicago/\",\n  \"/www-static/js/\",\n  \"/(https?:\\\\/\\\\/)\",\n  \"/^https?:\\\\/\\\\/\",\n  \"satellitelib-\",\n  \"\\\\/[a-zA-Z]{\",\n  \"\\\\..{100,}/\",\n  \"impression\",\n  \"affiliate\",\n  \"analytics\",\n  \"/images/\",\n  \"campaign\",\n  \"template\",\n  \"tisement\",\n  \"tracking\",\n  \",18}\\\\//\",\n  \"160x600\",\n  \"300x250\",\n  \"collect\",\n  \"consent\",\n  \"content\",\n  \"counter\",\n  \"iff/251\",\n  \"sponsor\",\n  \"visitor\",\n  \".aspx?\",\n  \"/asset\",\n  \"/embed\",\n  \"120x60\",\n  \"468x60\",\n  \"728x90\",\n  \"banner\",\n  \"cookie\",\n  \"google\",\n  \"metric\",\n  \"rivacy\",\n  \"script\",\n  \"source\",\n  \"widget\",\n  \".cgi?\",\n  \".html\",\n  \"/api/\",\n  \"/img/\",\n  \"/stat\",\n  \"/uplo\",\n  \"0-9]{\",\n  \"block\",\n  \"click\",\n  \"clude\",\n  \"event\",\n  \"frame\",\n  \"image\",\n  \"manag\",\n  \"media\",\n  \"pixel\",\n  \"track\",\n  \"type=\",\n  \"video\",\n  \".gif\",\n  \".jpg\",\n  \".php\",\n  \".png\",\n  \".swf\",\n  \"/new\",\n  \"/web\",\n  \"gi-b\",\n  \"hird\",\n  \"html\",\n  \"http\",\n  \"ight\",\n  \"nfig\",\n  \"page\",\n  \"play\",\n  \"show\",\n  \"stat\",\n  \"tion\",\n  \"view\",\n  \".js\",\n  \"/ad\",\n  \"^*/\",\n  \"=*&\",\n  \"468\",\n  \"728\",\n  \"aff\",\n  \"ava\",\n  \"box\",\n  \"dpr\",\n  \"ext\",\n  \"jax\",\n  \"log\",\n  \"lug\",\n  \"new\",\n  \"sdk\",\n  \"tag\",\n  \"web\",\n  \"-p\",\n  \".m\",\n  \"*/\",\n  \"*^\",\n  \"/_\",\n  \"/?\",\n  \"/*\",\n  \"/d\",\n  \"/e\",\n  \"/f\",\n  \"/g\",\n  \"/h\",\n  \"/j\",\n  \"/n\",\n  \"/p\",\n  \"/r\",\n  \"/u\",\n  \"/w\",\n  \"^*\",\n  \"0_\",\n  \"2.\",\n  \"a-\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"be\",\n  \"bo\",\n  \"ch\",\n  \"ck\",\n  \"co\",\n  \"ct\",\n  \"de\",\n  \"du\",\n  \"e_\",\n  \"e-\",\n  \"e.\",\n  \"e/\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"fo\",\n  \"g/\",\n  \"ga\",\n  \"he\",\n  \"ic\",\n  \"id\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"js\",\n  \"la\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"ma\",\n  \"mm\",\n  \"mo\",\n  \"mp\",\n  \"nt\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"p-\",\n  \"p?\",\n  \"qu\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"s?\",\n  \"s.\",\n  \"s/\",\n  \"se\",\n  \"si\",\n  \"sp\",\n  \"st\",\n  \"t_\",\n  \"t/\",\n  \"tm\",\n  \"tn\",\n  \"tr\",\n  \"ub\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"_\",\n  \"-\",\n  \":\",\n  \"?\",\n  \".\",\n  \"*\",\n  \"/\",\n  \"\\\\\",\n  \"&\",\n  \"^\",\n  \"=\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"quantcast.mgr.consensu.org\",\n  \"securepubads.g.doubleclick\",\n  \"keele-nnw-leis-mc-leis\",\n  \"googlesyndication\",\n  \"imasdk.googleapis\",\n  \"googletagmanager\",\n  \"cloudfront.net\",\n  \"ns.emailvision\",\n  \"doubleclick\",\n  \".net.daraz\",\n  \"plausible.\",\n  \"analytics\",\n  \"tracking.\",\n  \"metrics.\",\n  \"a02342.\",\n  \"traffic\",\n  \".co.uk\",\n  \"affili\",\n  \"google\",\n  \"market\",\n  \"phncdn\",\n  \"stats.\",\n  \".club\",\n  \"click\",\n  \"count\",\n  \"media\",\n  \"track\",\n  \".com\",\n  \".net\",\n  \".xyz\",\n  \"ight\",\n  \"news\",\n  \"www.\",\n  \".de\",\n  \".eu\",\n  \".io\",\n  \".jp\",\n  \".ru\",\n  \"cdn\",\n  \"pro\",\n  \"web\",\n  \".b\",\n  \".f\",\n  \".h\",\n  \".m\",\n  \".p\",\n  \".s\",\n  \".t\",\n  \"10\",\n  \"24\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"af\",\n  \"ag\",\n  \"ah\",\n  \"ak\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"au\",\n  \"av\",\n  \"aw\",\n  \"ay\",\n  \"az\",\n  \"be\",\n  \"bl\",\n  \"bo\",\n  \"br\",\n  \"bu\",\n  \"ca\",\n  \"ce\",\n  \"ch\",\n  \"ci\",\n  \"ck\",\n  \"cl\",\n  \"cr\",\n  \"ct\",\n  \"cu\",\n  \"da\",\n  \"de\",\n  \"di\",\n  \"dn\",\n  \"do\",\n  \"dr\",\n  \"ds\",\n  \"du\",\n  \"e-\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"ef\",\n  \"eg\",\n  \"ek\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"ep\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ev\",\n  \"ew\",\n  \"ex\",\n  \"ey\",\n  \"fa\",\n  \"fe\",\n  \"ff\",\n  \"fl\",\n  \"fo\",\n  \"fr\",\n  \"ge\",\n  \"gh\",\n  \"gl\",\n  \"go\",\n  \"gr\",\n  \"gu\",\n  \"he\",\n  \"ho\",\n  \"ia\",\n  \"ib\",\n  \"ic\",\n  \"id\",\n  \"ie\",\n  \"if\",\n  \"ig\",\n  \"ik\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"io\",\n  \"ip\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"ix\",\n  \"iz\",\n  \"ks\",\n  \"ld\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"lu\",\n  \"ly\",\n  \"ma\",\n  \"me\",\n  \"mo\",\n  \"mp\",\n  \"my\",\n  \"nd\",\n  \"no\",\n  \"ob\",\n  \"od\",\n  \"ok\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"oo\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ou\",\n  \"ov\",\n  \"ow\",\n  \"ph\",\n  \"pl\",\n  \"po\",\n  \"pr\",\n  \"qu\",\n  \"re\",\n  \"ro\",\n  \"s-\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"si\",\n  \"sk\",\n  \"sn\",\n  \"so\",\n  \"sp\",\n  \"sr\",\n  \"ss\",\n  \"st\",\n  \"su\",\n  \"sw\",\n  \"sy\",\n  \"t-\",\n  \"ta\",\n  \"te\",\n  \"th\",\n  \"ti\",\n  \"tn\",\n  \"to\",\n  \"tp\",\n  \"tr\",\n  \"ts\",\n  \"tu\",\n  \"tv\",\n  \"tw\",\n  \"ty\",\n  \"ub\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"vi\",\n  \"we\",\n  \"-\",\n  \".\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"google-analytics.com/analytics.js\",\n  \"googlesyndication_adsbygoogle.js\",\n  \"googletagmanager.com/gtm.js\",\n  \"googletagservices_gpt.js\",\n  \"fuckadblock.js-3.2.0\",\n  \"1x1-transparent.gif\",\n  \"noop-0.1s.mp3\",\n  \"noopmp3-0.1s\",\n  \"hd-main.js\",\n  \"noopmp4-1s\",\n  \"32x32.png\",\n  \"googletag\",\n  \"noopframe\",\n  \"noop.txt\",\n  \"nooptext\",\n  \"1x1.gif\",\n  \"2x2.png\",\n  \"noop.js\",\n  \"google\",\n  \"noopjs\",\n  \".com/\",\n  \":10\",\n  \".js\",\n  \"ads\",\n  \"ana\",\n  \"bea\",\n  \"ger\",\n  \"tag\",\n  \"tic\",\n  \"/a\",\n  \"ar\",\n  \"at\",\n  \"ch\",\n  \"em\",\n  \"et\",\n  \"in\",\n  \"ng\",\n  \"no\",\n  \"on\",\n  \"op\",\n  \"pt\",\n  \"ra\",\n  \"tm\",\n  \"_\",\n  \"-\",\n  \":\",\n  \".\",\n  \"*\",\n  \"/\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"fastly.net|fastlylb.net|jquery\",\n  \",redirect-rule=noopjs,domain=\",\n  \"*$xhr,redirect-rule=nooptext,\",\n  \"$media,redirect=noopmp3-0.1s,\",\n  \"$script,redirect=noopjs\",\n  \"*$script,3p,denyallow=\",\n  \"pornhubthbh7ap3u.onion\",\n  \"/js/sdkloader/ima3.js\",\n  \"/wp-content/plugins/\",\n  \"/wp-content/uploads/\",\n  \".com^$third-party\",\n  \"/cdn-cgi/pe/bag2?\",\n  \".cloudfront.net^\",\n  \",redirect-rule=\",\n  \"$script,domain=\",\n  \",redirect=noop\",\n  \"|downdetector.\",\n  \"xmlhttprequest\",\n  \"/^https?:\\\\/\\\\/\",\n  \"$third-party\",\n  \"doubleclick\",\n  \"subdocument\",\n  \"syndication\",\n  \"third-party\",\n  \".net.daraz\",\n  \"cloudflare\",\n  \"affiliate\",\n  \"analytics\",\n  \"emailvisi\",\n  \"facebook\",\n  \"metrics.\",\n  \"tracking\",\n  \"^$docum\",\n  \"^$ghide\",\n  \"$script\",\n  \"300x250\",\n  \"a02342.\",\n  \"captcha\",\n  \"domain=\",\n  \"imasdk.\",\n  \".club^\",\n  \".co.uk\",\n  \"banner\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"script\",\n  \"-src \",\n  \".xyz^\",\n  \"$xhr,\",\n  \"count\",\n  \"frame\",\n  \"image\",\n  \"media\",\n  \"pixel\",\n  \"track\",\n  \"video\",\n  \".com\",\n  \".gif\",\n  \".io^\",\n  \".net\",\n  \".php\",\n  \".png\",\n  \".ru^\",\n  \"^$3p\",\n  \"html\",\n  \"ight\",\n  \"news\",\n  \"page\",\n  \"play\",\n  \"stat\",\n  \"tube\",\n  \"view\",\n  \",1p\",\n  \".de\",\n  \".jp\",\n  \".js\",\n  \"^*/\",\n  \"cdn\",\n  \"ent\",\n  \"pro\",\n  \"web\",\n  \"www\",\n  \".*\",\n  \".b\",\n  \".c\",\n  \".m\",\n  \".n\",\n  \".s\",\n  \".t\",\n  \"@@\",\n  \"/*\",\n  \"/j\",\n  \"||\",\n  \"|~\",\n  \"00\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"af\",\n  \"ag\",\n  \"ak\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"au\",\n  \"av\",\n  \"aw\",\n  \"ay\",\n  \"az\",\n  \"be\",\n  \"bo\",\n  \"ce\",\n  \"ch\",\n  \"ck\",\n  \"ct\",\n  \"de\",\n  \"di\",\n  \"do\",\n  \"e-\",\n  \"e^\",\n  \"eb\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"ep\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ev\",\n  \"ex\",\n  \"fi\",\n  \"fo\",\n  \"fr\",\n  \"g/\",\n  \"ge\",\n  \"go\",\n  \"gr\",\n  \"he\",\n  \"ho\",\n  \"ib\",\n  \"ic\",\n  \"id\",\n  \"ig\",\n  \"ik\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"ip\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"ix\",\n  \"iz\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"ly\",\n  \"mo\",\n  \"no\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ph\",\n  \"pl\",\n  \"po\",\n  \"pr\",\n  \"qu\",\n  \"re\",\n  \"ro\",\n  \"ru\",\n  \"s_\",\n  \"s-\",\n  \"s/\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"so\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"th\",\n  \"to\",\n  \"tr\",\n  \"ub\",\n  \"ud\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"yo\",\n  \"_\",\n  \"-\",\n  \",\",\n  \"?\",\n  \".\",\n  \"*\",\n  \"/\",\n  \"&\",\n  \"^\",\n  \"=\",\n  \"|\",\n  \"~\",\n  \"$\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"acis, decodeURI, decodeURIComp\",\n  \"acis, disableSelection, reEnab\",\n  \"acis, document.createElement, \",\n  \"acis, document.getElementById,\",\n  \"acis, document.querySelectorAl\",\n  \"app_vars.force_disable_adblock\",\n  \"acis, String.fromCharCode, \",\n  \"+js(acis, Math, zfgloaded)\",\n  \", document.oncontextmenu)\",\n  \"nosiif, visibility, 1000)\",\n  \"+js(set, blurred, false)\",\n  \"acis, addEventListener, \",\n  \":not(body):not(html)\",\n  \"ra, oncontextmenu\",\n  \"[href^=\\\"https://\",\n  \"##a[href^=\\\"http\",\n  \"BlockDetected)\",\n  \"/btoa|break/)\",\n  \"+js(nowebrtc)\",\n  \"advertisement\",\n  \"##+js(aopr, \",\n  \"div[class^=\\\"\",\n  \"l, popMagic)\",\n  \", noopFunc)\",\n  \",airfrance.\",\n  \"otification\",\n  \":has-text(\",\n  \".com##+js(\",\n  \"+js(aeld, \",\n  \"+js(aopw, \",\n  \"background\",\n  \".blogspot\",\n  \"+js(set, \",\n  \"container\",\n  \"div[style\",\n  \"[href*=\\\"\",\n  \"disclaim\",\n  \"nostif, \",\n  \", true)\",\n  \"://www.\",\n  \"300x250\",\n  \"consent\",\n  \"content\",\n  \"message\",\n  \"nowoif)\",\n  \"privacy\",\n  \"sidebar\",\n  \"sponsor\",\n  \".co.uk\",\n  \"[data-\",\n  \"728x90\",\n  \"accept\",\n  \"aopr, \",\n  \"banner\",\n  \"bottom\",\n  \"Bottom\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"movies\",\n  \"policy\",\n  \"stream\",\n  \"widget\",\n  \":has(\",\n  \"block\",\n  \"docum\",\n  \"wrapp\",\n  \".com\",\n  \".net\",\n  \".xyz\",\n  \"#@#.\",\n  \"+js(\",\n  \"down\",\n  \"foot\",\n  \"gdpr\",\n  \"ight\",\n  \"news\",\n  \"tube\",\n  \" > \",\n  \"://\",\n  \"age\",\n  \"box\",\n  \"Box\",\n  \"ent\",\n  \"img\",\n  \"px;\",\n  \"web\",\n  \"xxx\",\n  \"__\",\n  \"-t\",\n  \", \",\n  \",p\",\n  \",t\",\n  \",w\",\n  \".*\",\n  \".n\",\n  \".p\",\n  \".t\",\n  \"\\\"]\",\n  \"##\",\n  \"=\\\"\",\n  \"00\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"Ad\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"at\",\n  \"bi\",\n  \"bo\",\n  \"ca\",\n  \"ce\",\n  \"ch\",\n  \"ck\",\n  \"co\",\n  \"ct\",\n  \"d-\",\n  \"da\",\n  \"de\",\n  \"di\",\n  \"do\",\n  \"ed\",\n  \"el\",\n  \"en\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ew\",\n  \"fi\",\n  \"fo\",\n  \"ft\",\n  \"g-\",\n  \"ga\",\n  \"go\",\n  \"he\",\n  \"ho\",\n  \"id\",\n  \"il\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"la\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"ma\",\n  \"me\",\n  \"mi\",\n  \"mo\",\n  \"mp\",\n  \"na\",\n  \"no\",\n  \"ol\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ov\",\n  \"po\",\n  \"ra\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"si\",\n  \"sk\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"t-\",\n  \"ta\",\n  \"te\",\n  \"th\",\n  \"ti\",\n  \"ub\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"vi\",\n  \"xt\",\n  \"y-\",\n  \" \",\n  \"_\",\n  \"-\",\n  \",\",\n  \":\",\n  \".\",\n  \")\",\n  \"[\",\n  \"/\",\n  \"#\",\n  \"^\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"B\",\n  \"c\",\n  \"C\",\n  \"d\",\n  \"D\",\n  \"e\",\n  \"E\",\n  \"f\",\n  \"F\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"I\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"L\",\n  \"m\",\n  \"M\",\n  \"n\",\n  \"o\",\n  \"O\",\n  \"p\",\n  \"P\",\n  \"q\",\n  \"r\",\n  \"R\",\n  \"s\",\n  \"S\",\n  \"t\",\n  \"T\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"W\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { Smaz } from '@remusao/smaz';\n\nimport cosmeticSelectorCodebook from './codebooks/cosmetic-selector';\nimport networkCSPCodebook from './codebooks/network-csp';\nimport networkFilterCodebook from './codebooks/network-filter';\nimport networkHostnameCodebook from './codebooks/network-hostname';\nimport networkRedirectCodebook from './codebooks/network-redirect';\nimport networkRawCodebook from './codebooks/raw-network';\nimport cosmeticRawCodebook from './codebooks/raw-cosmetic';\n\nexport default class Compression {\n  public readonly cosmeticSelector: Smaz = new Smaz(cosmeticSelectorCodebook);\n  public readonly networkCSP: Smaz = new Smaz(networkCSPCodebook);\n  public readonly networkRedirect: Smaz = new Smaz(networkRedirectCodebook);\n  public readonly networkHostname: Smaz = new Smaz(networkHostnameCodebook);\n  public readonly networkFilter: Smaz = new Smaz(networkFilterCodebook);\n  public readonly networkRaw: Smaz = new Smaz(networkRawCodebook);\n  public readonly cosmeticRaw: Smaz = new Smaz(cosmeticRawCodebook);\n}\n","/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* From: https://github.com/SheetJS/js-crc32/ */\n\nconst T: Int32Array = (() => {\n  let c: number = 0;\n  const table: Int32Array = new Int32Array(256);\n\n  for (let n: number = 0; n !== 256; n += 1) {\n    c = n;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    table[n] = c;\n  }\n\n  return table;\n})();\n\nexport default function crc32(buf: Uint8Array, start: number, end: number): number {\n  let C: number = 0 ^ -1;\n  const L: number = end - 7;\n  let i: number = start;\n  while (i < L) {\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n  }\n\n  while (i < L + 7) {\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n  }\n\n  return (C ^ -1) >>> 0;\n}\n","/*!\n * Copyright Mathias Bynens <https://mathiasbynens.be/>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\ntype errorNames = 'overflow' | 'invalid-input' | 'not-basic';\nconst errors: {\n  [name: string]: string;\n} = {\n  'invalid-input': 'Invalid input',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'overflow': 'Overflow: input needs wider integers to process',\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type: errorNames): void {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(str: string): number[] {\n  const output = [];\n  let counter = 0;\n  const length = str.length;\n  while (counter < length) {\n    const value = str.charCodeAt(counter++);\n    if (value >= 0xd800 && value <= 0xdbff && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      const extra = str.charCodeAt(counter++);\n      if ((extra & 0xfc00) === 0xdc00) {\n        // Low surrogate.\n        output.push(((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint: number): number {\n  if (codePoint - 0x30 < 0x0a) {\n    return codePoint - 0x16;\n  }\n  if (codePoint - 0x41 < 0x1a) {\n    return codePoint - 0x41;\n  }\n  if (codePoint - 0x61 < 0x1a) {\n    return codePoint - 0x61;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit: number, flag: number): number {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26 ? 1 : 0) - ((flag !== 0 ? 1 : 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta: number, numPoints: number, firstTime: boolean): number {\n  let k = 0;\n  delta = firstTime ? Math.floor(delta / damp) : delta >> 1;\n  delta += Math.floor(delta / numPoints);\n  for (; /* no initialization */ delta > (baseMinusTMin * tMax) >> 1; k += base) {\n    delta = Math.floor(delta / baseMinusTMin);\n  }\n  return Math.floor(k + ((baseMinusTMin + 1) * delta) / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input: string): string {\n  // Don't use UCS-2.\n  const output = [];\n  const inputLength = input.length;\n  let i = 0;\n  let n = initialN;\n  let bias = initialBias;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  let basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (let j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (let index = basic > 0 ? basic + 1 : 0; index < inputLength /* no final expression */; ) {\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    const oldi = i;\n    for (let w = 1, k = base /* no condition */; ; k += base) {\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      const digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > Math.floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n      if (digit < t) {\n        break;\n      }\n\n      const baseMinusT = base - t;\n      if (w > Math.floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n    }\n\n    const out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi === 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (Math.floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += Math.floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output.\n    output.splice(i++, 0, n);\n  }\n\n  return String.fromCodePoint.apply(null, output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(str: string): string {\n  const output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  const input = ucs2decode(str);\n\n  // Cache the length.\n  const inputLength = input.length;\n\n  // Initialize the state.\n  let n = initialN;\n  let delta = 0;\n  let bias = initialBias;\n\n  // Handle the basic code points.\n  for (let i = 0; i < input.length; i += 1) {\n    const currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(String.fromCharCode(currentValue));\n    }\n  }\n\n  const basicLength = output.length;\n  let handledCPCount = basicLength;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    let m = maxInt;\n    for (let i = 0; i < input.length; i += 1) {\n      const currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow.\n    const handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > Math.floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (let i = 0; i < input.length; i += 1) {\n      const currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n      if (currentValue === n) {\n        // Represent delta as a generalized variable-length integer.\n        let q = delta;\n        for (let k = base /* no condition */; ; k += base) {\n          const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n          if (q < t) {\n            break;\n          }\n          const qMinusT = q - t;\n          const baseMinusT = base - t;\n          output.push(String.fromCharCode(digitToBasic(t + (qMinusT % baseMinusT), 0)));\n          q = Math.floor(qMinusT / baseMinusT);\n        }\n\n        output.push(String.fromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input: string): string {\n  const labels = input.replace(regexSeparators, '\\x2E').split('.');\n  const encoded: string[] = [];\n  for (let i = 0; i < labels.length; i += 1) {\n    encoded.push(\n      labels[i].startsWith('xn--') ? decode(labels[i].slice(4).toLowerCase()) : labels[i],\n    );\n  }\n  return encoded.join('.');\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input: string): string {\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  const labels = input.replace(regexSeparators, '\\x2E').split('.');\n  const encoded: string[] = [];\n  for (let i = 0; i < labels.length; i += 1) {\n    encoded.push(regexNonASCII.test(labels[i]) ? 'xn--' + encode(labels[i]) : labels[i]);\n  }\n  return encoded.join('.');\n}\n\n/**\n * A string representing the current Punycode.js version number.\n * @memberOf punycode\n * @type String\n */\nexport const version = '2.1.0';\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Compression from './compression';\nimport crc32 from './crc32';\nimport { decode, encode } from './punycode';\n\ninterface IDataViewOptions {\n  enableCompression: boolean;\n}\n\nexport const EMPTY_UINT8_ARRAY = new Uint8Array(0);\nexport const EMPTY_UINT32_ARRAY = new Uint32Array(0);\n\n// Check if current architecture is little endian\nconst LITTLE_ENDIAN: boolean = new Int8Array(new Int16Array([1]).buffer)[0] === 1;\n\n// Store compression in a lazy, global singleton\nlet getCompressionSingleton: () => Compression = () => {\n  const COMPRESSION = new Compression();\n  getCompressionSingleton = () => COMPRESSION;\n  return COMPRESSION;\n};\n\nfunction align4(pos: number): number {\n  // From: https://stackoverflow.com/a/2022194\n  return (pos + 3) & ~0x03;\n}\n\n/**\n * Return size of of a serialized byte value.\n */\nexport function sizeOfByte(): number {\n  return 1;\n}\n\n/**\n * Return size of of a serialized boolean value.\n */\nexport function sizeOfBool(): number {\n  return 1;\n}\n\n/**\n * Return number of bytes needed to serialize `length`.\n */\nexport function sizeOfLength(length: number): number {\n  return length <= 127 ? 1 : 5;\n}\n\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytes(array: Uint8Array, align: boolean): number {\n  return sizeOfBytesWithLength(array.length, align);\n}\n\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytesWithLength(length: number, align: boolean): number {\n  // Alignment is a tricky thing because it depends on the current offset in\n  // the buffer at the time of serialization; which we cannot anticipate\n  // before actually starting serialization. This means that we need to\n  // potentially over-estimate the size (at most by 3 bytes) to make sure the\n  // final size is at least equal or a bit bigger than necessary.\n  return (align ? 3 : 0) + length + sizeOfLength(length);\n}\n\n/**\n * Return number of bytes needed to serialize `str` ASCII string.\n */\nexport function sizeOfASCII(str: string): number {\n  return str.length + sizeOfLength(str.length);\n}\n\n/**\n * Return number of bytes needed to serialize `str` UTF8 string.\n */\nexport function sizeOfUTF8(str: string): number {\n  const encodedLength = encode(str).length;\n  return encodedLength + sizeOfLength(encodedLength);\n}\n\n/**\n * Return number of bytes needed to serialize `array`.\n */\nexport function sizeOfUint32Array(array: Uint32Array): number {\n  return array.byteLength + sizeOfLength(array.length);\n}\n\nexport function sizeOfNetworkRedirect(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkRedirect.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkHostname(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkHostname.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkCSP(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkCSP.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkFilter(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkFilter.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfCosmeticSelector(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().cosmeticSelector.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfRawNetwork(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkRaw.getCompressedSize(encode(str)),\n        false, // align\n      )\n    : sizeOfUTF8(str);\n}\n\nexport function sizeOfRawCosmetic(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().cosmeticRaw.getCompressedSize(encode(str)),\n        false, // align\n      )\n    : sizeOfUTF8(str);\n}\n\n/**\n * This abstraction allows to serialize efficiently low-level values of types:\n * string, uint8, uint16, uint32, etc. while hiding the complexity of managing\n * the current offset and growing. It should always be instantiated with a\n * big-enough length because this will not allow for resizing. To allow\n * deciding the required total size, function estimating the size needed to\n * store different primitive values are exposes as static methods.\n *\n * This class is also more efficient than the built-in `DataView`.\n *\n * The way this is used in practice is that you write pairs of function to\n * serialize and deserialize a given structure/class (with code being pretty\n * symetrical). In the serializer you `pushX` values, and in the deserializer\n * you use `getX` functions to get back the values.\n */\nexport class StaticDataView {\n  /**\n   * Create an empty (i.e.: size = 0) StaticDataView.\n   */\n  public static empty(options: IDataViewOptions): StaticDataView {\n    return StaticDataView.fromUint8Array(EMPTY_UINT8_ARRAY, options);\n  }\n\n  /**\n   * Instantiate a StaticDataView instance from `array` of type Uint8Array.\n   */\n  public static fromUint8Array(array: Uint8Array, options: IDataViewOptions): StaticDataView {\n    return new StaticDataView(array, options);\n  }\n\n  /**\n   * Instantiate a StaticDataView with given `capacity` number of bytes.\n   */\n  public static allocate(capacity: number, options: IDataViewOptions): StaticDataView {\n    return new StaticDataView(new Uint8Array(capacity), options);\n  }\n\n  public pos: number;\n  public buffer: Uint8Array;\n  public compression: Compression | undefined;\n\n  constructor(buffer: Uint8Array, { enableCompression }: IDataViewOptions) {\n    if (LITTLE_ENDIAN === false) {\n      // This check makes sure that we will not load the adblocker on a\n      // big-endian system. This would not work since byte ordering is important\n      // at the moment (mainly for performance reasons).\n      throw new Error('Adblocker currently does not support Big-endian systems');\n    }\n\n    if (enableCompression === true) {\n      this.enableCompression();\n    }\n\n    this.buffer = buffer;\n    this.pos = 0;\n  }\n\n  public enableCompression(): void {\n    this.compression = getCompressionSingleton();\n  }\n\n  public checksum(): number {\n    return crc32(this.buffer, 0, this.pos);\n  }\n\n  public dataAvailable(): boolean {\n    return this.pos < this.buffer.byteLength;\n  }\n\n  public setPos(pos: number): void {\n    this.pos = pos;\n  }\n\n  public getPos(): number {\n    return this.pos;\n  }\n\n  public seekZero(): void {\n    this.pos = 0;\n  }\n\n  public slice(): Uint8Array {\n    this.checkSize();\n    return this.buffer.slice(0, this.pos);\n  }\n\n  public subarray(): Uint8Array {\n    if (this.pos === this.buffer.byteLength) {\n      return this.buffer;\n    }\n\n    this.checkSize();\n    return this.buffer.subarray(0, this.pos);\n  }\n\n  /**\n   * Make sure that `this.pos` is aligned on a multiple of 4.\n   */\n  public align4(): void {\n    this.pos = align4(this.pos);\n  }\n\n  public set(buffer: Uint8Array): void {\n    this.buffer = new Uint8Array(buffer);\n    this.seekZero();\n  }\n\n  public pushBool(bool: boolean): void {\n    this.pushByte(Number(bool));\n  }\n\n  public getBool(): boolean {\n    return Boolean(this.getByte());\n  }\n\n  public setByte(pos: number, byte: number): void {\n    this.buffer[pos] = byte;\n  }\n\n  public pushByte(octet: number): void {\n    this.pushUint8(octet);\n  }\n\n  public getByte(): number {\n    return this.getUint8();\n  }\n\n  public pushBytes(bytes: Uint8Array, align: boolean = false): void {\n    this.pushLength(bytes.length);\n\n    if (align === true) {\n      this.align4();\n    }\n\n    this.buffer.set(bytes, this.pos);\n    this.pos += bytes.byteLength;\n  }\n\n  public getBytes(align: boolean = false): Uint8Array {\n    const numberOfBytes = this.getLength();\n\n    if (align === true) {\n      this.align4();\n    }\n\n    const bytes = this.buffer.subarray(this.pos, this.pos + numberOfBytes);\n    this.pos += numberOfBytes;\n\n    return bytes;\n  }\n\n  /**\n   * Allows row access to the internal buffer through a Uint32Array acting like\n   * a view. This is used for super fast writing/reading of large chunks of\n   * Uint32 numbers in the byte array.\n   */\n  public getUint32ArrayView(desiredSize: number): Uint32Array {\n    // Round this.pos to next multiple of 4 for alignement\n    this.align4();\n\n    // Short-cut when empty array\n    if (desiredSize === 0) {\n      return EMPTY_UINT32_ARRAY;\n    }\n\n    // Create non-empty view\n    const view = new Uint32Array(\n      this.buffer.buffer,\n      this.pos + this.buffer.byteOffset,\n      desiredSize,\n    );\n    this.pos += desiredSize * 4;\n    return view;\n  }\n\n  public pushUint8(uint8: number): void {\n    this.buffer[this.pos++] = uint8;\n  }\n\n  public getUint8(): number {\n    return this.buffer[this.pos++];\n  }\n\n  public pushUint16(uint16: number): void {\n    this.buffer[this.pos++] = uint16 >>> 8;\n    this.buffer[this.pos++] = uint16;\n  }\n\n  public getUint16(): number {\n    return ((this.buffer[this.pos++] << 8) | this.buffer[this.pos++]) >>> 0;\n  }\n\n  public pushUint32(uint32: number): void {\n    this.buffer[this.pos++] = uint32 >>> 24;\n    this.buffer[this.pos++] = uint32 >>> 16;\n    this.buffer[this.pos++] = uint32 >>> 8;\n    this.buffer[this.pos++] = uint32;\n  }\n\n  public getUint32(): number {\n    return (\n      (((this.buffer[this.pos++] << 24) >>> 0) +\n        ((this.buffer[this.pos++] << 16) |\n          (this.buffer[this.pos++] << 8) |\n          this.buffer[this.pos++])) >>>\n      0\n    );\n  }\n\n  public pushUint32Array(arr: Uint32Array): void {\n    this.pushLength(arr.length);\n    // TODO - use `set` to push the full buffer at once?\n    for (const n of arr) {\n      this.pushUint32(n);\n    }\n  }\n\n  public getUint32Array(): Uint32Array {\n    const length = this.getLength();\n    const arr = new Uint32Array(length);\n    // TODO - use `subarray`?\n    for (let i = 0; i < length; i += 1) {\n      arr[i] = this.getUint32();\n    }\n    return arr;\n  }\n\n  public pushUTF8(raw: string): void {\n    const str = encode(raw);\n    this.pushLength(str.length);\n\n    for (let i = 0; i < str.length; i += 1) {\n      this.buffer[this.pos++] = str.charCodeAt(i);\n    }\n  }\n\n  public getUTF8(): string {\n    const byteLength = this.getLength();\n    this.pos += byteLength;\n    return decode(\n      String.fromCharCode.apply(\n        null,\n        // @ts-ignore\n        this.buffer.subarray(this.pos - byteLength, this.pos),\n      ),\n    );\n  }\n\n  public pushASCII(str: string): void {\n    this.pushLength(str.length);\n\n    for (let i = 0; i < str.length; i += 1) {\n      this.buffer[this.pos++] = str.charCodeAt(i);\n    }\n  }\n\n  public getASCII(): string {\n    const byteLength = this.getLength();\n    this.pos += byteLength;\n\n    // @ts-ignore\n    return String.fromCharCode.apply(null, this.buffer.subarray(this.pos - byteLength, this.pos));\n  }\n\n  public pushNetworkRedirect(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkRedirect.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkRedirect(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkRedirect.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkHostname(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkHostname.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkHostname(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkHostname.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkCSP(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkCSP.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkCSP(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkCSP.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkFilter(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkFilter.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkFilter(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkFilter.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushCosmeticSelector(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.cosmeticSelector.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getCosmeticSelector(): string {\n    if (this.compression !== undefined) {\n      return this.compression.cosmeticSelector.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushRawCosmetic(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.cosmeticRaw.compress(encode(str)));\n    } else {\n      this.pushUTF8(str);\n    }\n  }\n\n  public getRawCosmetic(): string {\n    if (this.compression !== undefined) {\n      return decode(this.compression.cosmeticRaw.decompress(this.getBytes()));\n    }\n    return this.getUTF8();\n  }\n\n  public pushRawNetwork(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkRaw.compress(encode(str)));\n    } else {\n      this.pushUTF8(str);\n    }\n  }\n\n  public getRawNetwork(): string {\n    if (this.compression !== undefined) {\n      return decode(this.compression.networkRaw.decompress(this.getBytes()));\n    }\n    return this.getUTF8();\n  }\n\n  private checkSize() {\n    if (this.pos !== 0 && this.pos > this.buffer.byteLength) {\n      throw new Error(\n        `StaticDataView too small: ${this.buffer.byteLength}, but required ${this.pos} bytes`,\n      );\n    }\n  }\n\n  // Serialiez `length` with variable encoding to save space\n  private pushLength(length: number): void {\n    if (length <= 127) {\n      this.pushUint8(length);\n    } else {\n      this.pushUint8(128);\n      this.pushUint32(length);\n    }\n  }\n\n  private getLength(): number {\n    const lengthShort = this.getUint8();\n    return lengthShort === 128 ? this.getUint32() : lengthShort;\n  }\n}\n","/**\n * The MIT License (MIT)\n *\n * Copyright (c) Feross Aboukhadijeh\n *\n * Originally from: https://github.com/feross/queue-microtask\n */\n\nlet promise: Promise<void> | undefined;\n\ntype Callback = () => void;\n\nexport const queueMicrotask: (cb: Callback) => void =\n  typeof window !== 'undefined' && typeof window.queueMicrotask === 'function'\n    ? (cb: Callback) => window.queueMicrotask(cb)\n    : // reuse resolved promise, and allocate it lazily\n      (cb: Callback) =>\n        (promise || (promise = Promise.resolve())).then(cb).catch((err) =>\n          setTimeout(() => {\n            throw err;\n          }, 0),\n        );\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { StaticDataView, sizeOfBool } from './data-view';\n\nexport default class Config {\n  public static deserialize(buffer: StaticDataView): Config {\n    return new Config({\n      debug: buffer.getBool(),\n      enableCompression: buffer.getBool(),\n      enableHtmlFiltering: buffer.getBool(),\n      enableInMemoryCache: buffer.getBool(),\n      enableMutationObserver: buffer.getBool(),\n      enableOptimizations: buffer.getBool(),\n      guessRequestTypeFromUrl: buffer.getBool(),\n      integrityCheck: buffer.getBool(),\n      loadCSPFilters: buffer.getBool(),\n      loadCosmeticFilters: buffer.getBool(),\n      loadExceptionFilters: buffer.getBool(),\n      loadExtendedSelectors: buffer.getBool(),\n      loadGenericCosmeticsFilters: buffer.getBool(),\n      loadNetworkFilters: buffer.getBool(),\n    });\n  }\n\n  public readonly debug: boolean;\n  public readonly enableCompression: boolean;\n  public readonly enableHtmlFiltering: boolean;\n  public readonly enableInMemoryCache: boolean;\n  public readonly enableMutationObserver: boolean;\n  public readonly enableOptimizations: boolean;\n  public readonly guessRequestTypeFromUrl: boolean;\n  public readonly integrityCheck: boolean;\n  public readonly loadCSPFilters: boolean;\n  public readonly loadCosmeticFilters: boolean;\n  public readonly loadExceptionFilters: boolean;\n  public readonly loadExtendedSelectors: boolean;\n  public readonly loadGenericCosmeticsFilters: boolean;\n  public readonly loadNetworkFilters: boolean;\n\n  constructor({\n    debug = false,\n    enableCompression = false,\n    enableHtmlFiltering = false,\n    enableInMemoryCache = true,\n    enableMutationObserver = true,\n    enableOptimizations = true,\n    guessRequestTypeFromUrl = false,\n    integrityCheck = true,\n    loadCSPFilters = true,\n    loadCosmeticFilters = true,\n    loadExceptionFilters = true,\n    loadExtendedSelectors = false,\n    loadGenericCosmeticsFilters = true,\n    loadNetworkFilters = true,\n  }: Partial<Config> = {}) {\n    this.debug = debug;\n    this.enableCompression = enableCompression;\n    this.enableHtmlFiltering = enableHtmlFiltering;\n    this.enableInMemoryCache = enableInMemoryCache;\n    this.enableMutationObserver = enableMutationObserver;\n    this.enableOptimizations = enableOptimizations;\n    this.guessRequestTypeFromUrl = guessRequestTypeFromUrl;\n    this.integrityCheck = integrityCheck;\n    this.loadCSPFilters = loadCSPFilters;\n    this.loadCosmeticFilters = loadCosmeticFilters;\n    this.loadExceptionFilters = loadExceptionFilters;\n    this.loadExtendedSelectors = loadExtendedSelectors;\n    this.loadGenericCosmeticsFilters = loadGenericCosmeticsFilters;\n    this.loadNetworkFilters = loadNetworkFilters;\n  }\n\n  public getSerializedSize(): number {\n    // NOTE: this should always be the number of attributes and needs to be\n    // updated when `Config` changes.\n    return 14 * sizeOfBool();\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushBool(this.debug);\n    buffer.pushBool(this.enableCompression);\n    buffer.pushBool(this.enableHtmlFiltering);\n    buffer.pushBool(this.enableInMemoryCache);\n    buffer.pushBool(this.enableMutationObserver);\n    buffer.pushBool(this.enableOptimizations);\n    buffer.pushBool(this.guessRequestTypeFromUrl);\n    buffer.pushBool(this.integrityCheck);\n    buffer.pushBool(this.loadCSPFilters);\n    buffer.pushBool(this.loadCosmeticFilters);\n    buffer.pushBool(this.loadExceptionFilters);\n    buffer.pushBool(this.loadExtendedSelectors);\n    buffer.pushBool(this.loadGenericCosmeticsFilters);\n    buffer.pushBool(this.loadNetworkFilters);\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { queueMicrotask } from './queue-microtask';\n\n/**\n * Type of an event listener (i.e.: callback). It accepts arbitrary arguments\n * and is not expected to return any result.\n */\ntype EventListener = (...args: any[]) => void;\n\n/**\n * Type of event listeners for all events. It maps event names (from a set of\n * type-level string literals) to list of event listeners.\n */\ntype EventListeners<EventNames> = Map<EventNames, EventListener[]>;\n\n/**\n * Add `callback` listener for `event` in `listeners` Map.\n */\nfunction registerCallback<EventNames>(\n  event: EventNames,\n  callback: EventListener,\n  listeners: EventListeners<EventNames>,\n): void {\n  let listenersForEvent = listeners.get(event);\n\n  if (listenersForEvent === undefined) {\n    listenersForEvent = [];\n    listeners.set(event, listenersForEvent);\n  }\n\n  listenersForEvent.push(callback);\n}\n\n/**\n * Remove `callback` listener for `event` from `listeners` Map.\n */\nfunction unregisterCallback<EventNames>(\n  event: EventNames,\n  callback: EventListener,\n  listeners: EventListeners<EventNames>,\n): void {\n  const listenersForEvent = listeners.get(event);\n  if (listenersForEvent !== undefined) {\n    const indexOfCallback = listenersForEvent.indexOf(callback);\n    if (indexOfCallback !== -1) {\n      listenersForEvent.splice(indexOfCallback, 1);\n    }\n  }\n}\n\n/**\n * Call all registered listeners for `event` with `args` as arguments. Return\n * `true` if at least one callback was registered and `false` otherwise.\n */\nfunction triggerCallback<EventNames>(\n  event: EventNames,\n  args: any[],\n  listeners: EventListeners<EventNames>,\n): boolean {\n  // Fast-path for cases where no listener is registered\n  if (listeners.size === 0) {\n    return false;\n  }\n\n  const listenersForEvent = listeners.get(event);\n  if (listenersForEvent !== undefined) {\n    queueMicrotask(() => {\n      for (const listener of listenersForEvent) {\n        listener(...args);\n      }\n    });\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Simple and efficient `EventEmitter` abstraction (following conventions from\n * Node.js) allowing partially typed event emitting. The set of event names is\n * specified as a type parameter while instantiating the event emitter.\n */\nexport class EventEmitter<EventNames> {\n  private onceListeners: EventListeners<EventNames> = new Map();\n  private onListeners: EventListeners<EventNames> = new Map();\n\n  /**\n   * Register an event listener for `event`.\n   */\n  public on(event: EventNames, callback: EventListener): void {\n    registerCallback(event, callback, this.onListeners);\n  }\n\n  /**\n   * Register an event listener for `event`; but only listen to first instance\n   * of this event. The listener is automatically deleted afterwards.\n   */\n  public once(event: EventNames, callback: EventListener): void {\n    registerCallback(event, callback, this.onceListeners);\n  }\n\n  /**\n   * Remove `callback` from list of listeners for `event`.\n   */\n  public unsubscribe(event: EventNames, callback: EventListener): void {\n    unregisterCallback(event, callback, this.onListeners);\n    unregisterCallback(event, callback, this.onceListeners);\n  }\n\n  /**\n   * Emit an event. Call all registered listeners to this event.\n   */\n  public emit(event: EventNames, ...args: any[]): void {\n    triggerCallback(event, args, this.onListeners);\n    if (triggerCallback(event, args, this.onceListeners) === true) {\n      this.onceListeners.delete(event);\n    }\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\ninterface FetchResponse {\n  text: () => Promise<string>;\n  arrayBuffer: () => Promise<ArrayBuffer>;\n  json: () => Promise<any>;\n}\n\nexport type Fetch = (url: string) => Promise<FetchResponse>;\n\n/**\n * Built-in fetch helpers can be used to initialize the adblocker from\n * pre-built presets or raw lists (fetched from multiple sources). In case of\n * failure (e.g. timeout), the whole process of initialization fails. Timeouts\n * are not so uncommon, and retrying to fetch usually succeeds.\n */\nexport function fetchWithRetry(fetch: Fetch, url: string): Promise<FetchResponse> {\n  let retry = 3;\n\n  // Wrap `fetch` into a lightweight retry function which makes sure that if\n  // fetching fails, it can be retried up to three times. Failure can happen if\n  // the remote server times-out, but retrying fetching of the same URL will\n  // usually succeed.\n  const fetchWrapper = (): Promise<FetchResponse> => {\n    return fetch(url).catch((ex) => {\n      if (retry > 0) {\n        retry -= 1;\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            fetchWrapper().then(resolve).catch(reject);\n          }, 500);\n        });\n      }\n\n      throw ex;\n    });\n  };\n\n  return fetchWrapper();\n}\n\nfunction fetchResource(fetch: Fetch, url: string): Promise<string> {\n  return fetchWithRetry(fetch, url).then((response) => response.text());\n}\n\nconst PREFIX =\n  'https://raw.githubusercontent.com/cliqz-oss/adblocker/master/packages/adblocker/assets';\n\nexport const adsLists = [\n  `${PREFIX}/easylist/easylist.txt`,\n  `${PREFIX}/easylist/easylistgermany.txt`,\n  `${PREFIX}/peter-lowe/serverlist.txt`,\n  `${PREFIX}/ublock-origin/annoyances.txt`,\n  `${PREFIX}/ublock-origin/badware.txt`,\n  `${PREFIX}/ublock-origin/filters.txt`,\n  `${PREFIX}/ublock-origin/filters-2020.txt`,\n  `${PREFIX}/ublock-origin/resource-abuse.txt`,\n  `${PREFIX}/ublock-origin/unbreak.txt`,\n];\n\nexport const adsAndTrackingLists = [\n  ...adsLists,\n  `${PREFIX}/easylist/easyprivacy.txt`,\n  `${PREFIX}/ublock-origin/privacy.txt`,\n];\n\nexport const fullLists = [...adsAndTrackingLists, `${PREFIX}/easylist/easylist-cookie.txt`];\n\n/**\n * Fetch latest version of enabledByDefault blocking lists.\n */\nexport function fetchLists(fetch: Fetch, urls: string[]): Promise<string[]> {\n  return Promise.all(urls.map((url) => fetchResource(fetch, url)));\n}\n\n/**\n * Fetch latest version of uBlock Origin's resources, used to inject scripts in\n * the page or redirect request to data URLs.\n */\nexport function fetchResources(fetch: Fetch): Promise<string> {\n  return fetchResource(fetch, `${PREFIX}/ublock-origin/resources.txt`);\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nclass HidingBuilder {}\n\ntype RequestType = 'image' | 'script' | 'font' | 'frame' | 'media' | 'font' | 'css';\n\nclass NetworkBuilder {\n  private options: Set<RequestType> = new Set();\n\n  private prefix: string | undefined = undefined;\n  private infix: string | undefined = undefined;\n  private suffix: string | undefined = undefined;\n\n  private redirect: string | undefined = undefined;\n\n  private blockRequestsWithType(t: RequestType): NetworkBuilder {\n    if (this.options.has(t)) {\n      throw new Error(`Already blocking type ${t}`);\n    }\n\n    this.options.add(t);\n    return this;\n  }\n\n  public images(): NetworkBuilder {\n    return this.blockRequestsWithType('image');\n  }\n\n  public scripts(): NetworkBuilder {\n    return this.blockRequestsWithType('script');\n  }\n\n  public frames(): NetworkBuilder {\n    return this.blockRequestsWithType('frame');\n  }\n\n  public fonts(): NetworkBuilder {\n    return this.blockRequestsWithType('font');\n  }\n\n  public medias(): NetworkBuilder {\n    return this.blockRequestsWithType('media');\n  }\n\n  public styles(): NetworkBuilder {\n    return this.blockRequestsWithType('css');\n  }\n\n  public redirectTo(redirect: string): NetworkBuilder {\n    if (this.redirect !== undefined) {\n      throw new Error(`Already redirecting: ${this.redirect}`);\n    }\n    this.redirect = `redirect=${redirect}`;\n    return this;\n  }\n\n  public urlContains(infix: string): NetworkBuilder {\n    if (this.infix !== undefined) {\n      throw new Error(`Already matching pattern: ${this.infix}`);\n    }\n    this.infix = infix;\n    return this;\n  }\n\n  public urlStartsWith(prefix: string): NetworkBuilder {\n    if (this.prefix !== undefined) {\n      throw new Error(`Already matching prefix: ${this.prefix}`);\n    }\n    this.prefix = `|${prefix}`;\n    return this;\n  }\n\n  public urlEndsWith(suffix: string): NetworkBuilder {\n    if (this.suffix !== undefined) {\n      throw new Error(`Already matching suffix: ${this.suffix}`);\n    }\n    this.suffix = `${suffix}|`;\n    return this;\n  }\n\n  public withHostname(hostname: string): NetworkBuilder {\n    if (this.prefix !== undefined) {\n      throw new Error(`Cannot match hostname if filter already has prefix: ${this.prefix}`);\n    }\n    this.prefix = `||${hostname}^`;\n    return this;\n  }\n\n  public toString(): string {\n    const parts: string[] = [];\n\n    if (this.prefix !== undefined) {\n      parts.push(this.prefix);\n    }\n\n    if (this.infix !== undefined) {\n      parts.push(this.infix);\n    }\n\n    if (this.suffix !== undefined) {\n      parts.push(this.suffix);\n    }\n\n    const options: string[] = ['important'];\n\n    if (this.options.size !== 0) {\n      for (const option of this.options) {\n        options.push(option);\n      }\n    }\n\n    if (this.redirect !== undefined) {\n      options.push(this.redirect);\n    }\n\n    return `${parts.length === 0 ? '*' : parts.join('*')}$${options.join(',')}`;\n  }\n}\n\nexport function block(): NetworkBuilder {\n  return new NetworkBuilder();\n}\n\nexport function hide(): HidingBuilder {\n  return new HidingBuilder();\n}\n","/*!\n * Based on parsel. Extended by Rémi Berson for Ghostery (2021).\n * https://github.com/LeaVerou/parsel\n *\n * MIT License\n *\n * Copyright (c) 2020 Lea Verou\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { isAST, isAtoms } from './types';\nimport type {\n  AST,\n  Atoms,\n  AtomsOrStrings,\n  Attribute,\n  Class,\n  Combinator,\n  Comma,\n  Id,\n  ParserOptions,\n  PseudoClass,\n  PseudoElement,\n  Strings,\n  TokenType,\n  Type,\n} from './types';\n\nexport const RECURSIVE_PSEUDO_CLASSES = new Set([\n  'any',\n  'dir',\n  'has',\n  'host-context',\n  'if',\n  'if-not',\n  'is',\n  'matches',\n  'not',\n  'where',\n]);\n\nconst TOKENS: { [T in TokenType]: RegExp } = {\n  attribute: /\\[\\s*(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)\\s*(?:(?<operator>\\W?=)\\s*(?<value>.+?)\\s*(?<caseSensitive>[iIsS])?\\s*)?\\]/gu,\n  id: /#(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,\n  class: /\\.(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,\n  comma: /\\s*,\\s*/g, // must be before combinator\n  combinator: /\\s*[\\s>+~]\\s*/g, // this must be after attribute\n  'pseudo-element': /::(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?:¶*)\\))?/gu, // this must be before pseudo-class\n  'pseudo-class': /:(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?<argument>¶*)\\))?/gu,\n  type: /(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)|\\*/gu, // this must be last\n};\n\nconst TOKENS_WITH_PARENS: Set<TokenType> = new Set(['pseudo-class', 'pseudo-element']);\nconst TOKENS_WITH_STRINGS: Set<TokenType> = new Set([...TOKENS_WITH_PARENS, 'attribute']);\nconst TRIM_TOKENS: Set<TokenType> = new Set(['combinator', 'comma']);\n\nconst TOKENS_FOR_RESTORE: { [T in TokenType]: RegExp } = Object.assign({}, TOKENS);\nTOKENS_FOR_RESTORE['pseudo-element'] = RegExp(\n  TOKENS['pseudo-element'].source.replace('(?<argument>¶*)', '(?<argument>.*?)'),\n  'gu',\n);\nTOKENS_FOR_RESTORE['pseudo-class'] = RegExp(\n  TOKENS['pseudo-class'].source.replace('(?<argument>¶*)', '(?<argument>.*)'),\n  'gu',\n);\n\n// TODO - it feels like with some more typing shenanigans we could replace groups validation by generic logic in this function.\nfunction splitOnMatch(\n  pattern: RegExp,\n  str: string,\n): [string, [string, { [name: string]: string }], string] | undefined {\n  pattern.lastIndex = 0;\n  const match = pattern.exec(str);\n\n  if (match === null) {\n    return undefined;\n  }\n\n  const from = match.index - 1;\n  const content = match[0];\n  const before = str.slice(0, from + 1);\n  const after = str.slice(from + content.length + 1);\n\n  return [before, [content, match.groups || {}], after];\n}\n\nconst GRAMMAR = [\n  // attribute\n  (str: string): [string, Attribute, string] | undefined => {\n    const match = splitOnMatch(TOKENS.attribute, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name, operator, value, namespace, caseSensitive }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'attribute',\n        content,\n        length: content.length,\n        namespace,\n        caseSensitive,\n        pos: [],\n        name,\n        operator,\n        value,\n      },\n      after,\n    ];\n  },\n\n  // #id\n  (str: string): [string, Id, string] | undefined => {\n    const match = splitOnMatch(TOKENS.id, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'id',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // .class\n  (str: string): [string, Class, string] | undefined => {\n    const match = splitOnMatch(TOKENS.class, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'class',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // comma ,\n  (str: string): [string, Comma, string] | undefined => {\n    const match = splitOnMatch(TOKENS.comma, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content], after] = match;\n\n    return [\n      before,\n      {\n        type: 'comma',\n        content,\n        length: content.length,\n        pos: [],\n      },\n      after,\n    ];\n  },\n\n  // combinator\n  (str: string): [string, Combinator, string] | undefined => {\n    const match = splitOnMatch(TOKENS.combinator, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content], after] = match;\n\n    return [\n      before,\n      {\n        type: 'combinator',\n        content,\n        length: content.length,\n        pos: [],\n      },\n      after,\n    ];\n  },\n\n  // pseudo-element\n  (str: string): [string, PseudoElement, string] | undefined => {\n    const match = splitOnMatch(TOKENS['pseudo-element'], str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'pseudo-element',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // pseudo-class\n  (str: string): [string, PseudoClass, string] | undefined => {\n    const match = splitOnMatch(TOKENS['pseudo-class'], str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    // TODO - here `argument` can be undefined and should be rejected?\n    const [before, [content, { name, argument }], after] = match;\n\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'pseudo-class',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n        argument,\n      },\n      after,\n    ];\n  },\n\n  // type\n  (str: string): [string, Type, string] | undefined => {\n    const match = splitOnMatch(TOKENS.type, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name, namespace }], after] = match;\n\n    return [\n      before,\n      {\n        type: 'type',\n        content,\n        length: content.length,\n        namespace,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n];\n\nfunction tokenizeBy(text: string): Atoms {\n  if (!text) {\n    return [];\n  }\n\n  const strarr: AtomsOrStrings = [text];\n  for (const tokenizer of GRAMMAR) {\n    for (let i = 0; i < strarr.length; i++) {\n      const str = strarr[i];\n      if (typeof str === 'string') {\n        const match = tokenizer(str);\n        if (match !== undefined) {\n          strarr.splice(i, 1, ...(match as AtomsOrStrings).filter((a) => a.length !== 0));\n        }\n      }\n    }\n  }\n\n  let offset = 0;\n  for (const token of strarr) {\n    if (typeof token !== 'string') {\n      token.pos = [offset, offset + token.length];\n      if (TRIM_TOKENS.has(token.type)) {\n        token.content = token.content.trim() || ' ';\n      }\n    }\n\n    offset += token.length;\n  }\n\n  if (isAtoms(strarr)) {\n    return strarr;\n  }\n\n  // NOTE: here this means that parsing failed.\n  return [];\n}\n\nfunction restoreNested(tokens: Atoms, strings: Strings, regex: RegExp, types: Set<TokenType>) {\n  // TODO - here from offsets in strings and tokens we should be able to find the exact spot without RegExp?\n  for (const str of strings) {\n    for (const token of tokens) {\n      if (types.has(token.type) && token.pos[0] < str.start && str.start < token.pos[1]) {\n        const content = token.content;\n        token.content = token.content.replace(regex, str.str);\n\n        if (token.content !== content) {\n          // actually changed?\n          // Re-evaluate groups\n          TOKENS_FOR_RESTORE[token.type].lastIndex = 0;\n          const match = TOKENS_FOR_RESTORE[token.type].exec(token.content);\n          if (match !== null) {\n            Object.assign(token, match.groups);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isEscaped(str: string, index: number): boolean {\n  let backslashes = 0;\n\n  index -= 1;\n  while (index >= 0 && str[index] === '\\\\') {\n    backslashes += 1;\n    index -= 1;\n  }\n\n  return backslashes % 2 !== 0;\n}\n\nexport function gobbleQuotes(text: string, quote: '\"' | \"'\", start: number): string | undefined {\n  // Find end of quote, taking care of ignoring escaped quotes\n  let end = start + 1;\n\n  /* tslint:disable no-conditional-assignment */\n  while ((end = text.indexOf(quote, end)) !== -1 && isEscaped(text, end) === true) {\n    end += 1;\n  }\n\n  if (end === -1) {\n    // Opening quote without closing quote\n    return undefined;\n  }\n\n  return text.slice(start, end + 1);\n}\n\nexport function gobbleParens(text: string, start: number): string | undefined {\n  let stack = 0;\n\n  for (let i = start; i < text.length; i++) {\n    const char = text[i];\n\n    if (char === '(') {\n      stack += 1;\n    } else if (char === ')') {\n      if (stack > 0) {\n        stack -= 1;\n      } else {\n        // Closing paren without opening paren\n        return undefined;\n      }\n    }\n\n    if (stack === 0) {\n      return text.slice(start, i + 1);\n    }\n  }\n\n  // Opening paren without closing paren\n  return undefined;\n}\n\nexport function replace(\n  selector: string,\n  replacement: '¶' | '§',\n  opening: '(' | '\"' | \"'\",\n  gobble: (text: string, start: number) => string | undefined,\n): [Strings, string] {\n  const strings: Strings = [];\n\n  let offset = 0;\n  /* tslint:disable no-conditional-assignment */\n  while ((offset = selector.indexOf(opening, offset)) !== -1) {\n    const str = gobble(selector, offset);\n    if (str === undefined) {\n      break;\n    }\n\n    strings.push({ str, start: offset });\n    selector = `${selector.slice(0, offset + 1)}${replacement.repeat(\n      str.length - 2,\n    )}${selector.slice(offset + str.length - 1)}`;\n    offset += str.length;\n  }\n\n  return [strings, selector];\n}\n\nexport function tokenize(selector: string): Atoms {\n  if (typeof selector !== 'string') {\n    return [];\n  }\n\n  // Prevent leading/trailing whitespace be interpreted as combinators\n  selector = selector.trim();\n\n  if (selector.length === 0) {\n    return [];\n  }\n\n  // Replace strings with whitespace strings (to preserve offsets)\n  const [doubleQuotes, selectorWithoutDoubleQuotes] = replace(\n    selector,\n    '§',\n    '\"',\n    (text: string, start: number) => gobbleQuotes(text, '\"', start),\n  );\n\n  const [singleQuotes, selectorWithoutQuotes] = replace(\n    selectorWithoutDoubleQuotes,\n    '§',\n    \"'\",\n    (text: string, start: number) => gobbleQuotes(text, \"'\", start),\n  );\n\n  // Now that strings are out of the way, extract parens and replace them with parens with whitespace (to preserve offsets)\n  const [parens, selectorWithoutParens] = replace(selectorWithoutQuotes, '¶', '(', gobbleParens);\n\n  // Now we have no nested structures and we can parse with regexes\n  const tokens = tokenizeBy(selectorWithoutParens);\n\n  // Now restore parens and strings in reverse order\n  restoreNested(tokens, parens, /\\(¶*\\)/, TOKENS_WITH_PARENS);\n  restoreNested(tokens, doubleQuotes, /\"§*\"/, TOKENS_WITH_STRINGS);\n  restoreNested(tokens, singleQuotes, /'§*'/, TOKENS_WITH_STRINGS);\n\n  return tokens;\n}\n\n// Convert a flat list of tokens into a tree of complex & compound selectors\nfunction nestTokens(\n  tokens: Atoms,\n  { list = true }: Pick<ParserOptions, 'list'> = {},\n): AST | undefined {\n  if (list === true && tokens.some((t) => t.type === 'comma')) {\n    const selectors: AST[] = [];\n    const temp: Atoms = [];\n\n    for (let i = 0; i < tokens.length; i += 1) {\n      const token = tokens[i];\n      if (token.type === 'comma') {\n        if (temp.length === 0) {\n          throw new Error('Incorrect comma at ' + i);\n        }\n\n        const sub = nestTokens(temp, { list: false });\n        if (sub !== undefined) {\n          selectors.push(sub);\n        }\n        temp.length = 0;\n      } else {\n        temp.push(token);\n      }\n    }\n\n    if (temp.length === 0) {\n      throw new Error('Trailing comma');\n    } else {\n      const sub = nestTokens(temp, { list: false });\n      if (sub !== undefined) {\n        selectors.push(sub);\n      }\n    }\n\n    return { type: 'list', list: selectors };\n  }\n\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    const token = tokens[i];\n\n    if (token.type === 'combinator') {\n      const left = nestTokens(tokens.slice(0, i));\n      const right = nestTokens(tokens.slice(i + 1));\n      if (right === undefined) {\n        return undefined;\n      }\n\n      if (\n        token.content !== ' ' &&\n        token.content !== '~' &&\n        token.content !== '+' &&\n        token.content !== '>'\n      ) {\n        return undefined;\n      }\n\n      return {\n        type: 'complex',\n        combinator: token.content,\n        left,\n        right,\n      };\n    }\n  }\n\n  if (tokens.length === 0) {\n    return undefined;\n  }\n\n  if (isAST(tokens)) {\n    if (tokens.length === 1) {\n      return tokens[0];\n    }\n\n    // If we're here, there are no combinators, so it's just a list\n    return {\n      type: 'compound',\n      compound: [...tokens], // clone to avoid pointers messing up the AST\n    };\n  }\n\n  return undefined;\n}\n\n// Traverse an AST (or part thereof), in depth-first order\nfunction walk(\n  node: AST | undefined,\n  callback: (node: AST, parentNode?: AST) => void,\n  o?: AST,\n  parent?: AST,\n): void {\n  if (node === undefined) {\n    return;\n  }\n\n  if (node.type === 'complex') {\n    walk(node.left, callback, o, node);\n    walk(node.right, callback, o, node);\n  } else if (node.type === 'compound') {\n    for (const n of node.compound) {\n      walk(n, callback, o, node);\n    }\n  } else if (\n    node.type === 'pseudo-class' &&\n    node.subtree !== undefined &&\n    o !== undefined &&\n    o.type === 'pseudo-class' &&\n    o.subtree !== undefined\n  ) {\n    walk(node.subtree, callback, o, node);\n  }\n\n  callback(node, parent);\n}\n\n/**\n * Parse a CSS selector\n * @param selector {String} The selector to parse\n * @param options.recursive {Boolean} Whether to parse the arguments of pseudo-classes like :is(), :has() etc. Defaults to true.\n * @param options.list {Boolean} Whether this can be a selector list (A, B, C etc). Defaults to true.\n */\nexport function parse(\n  selector: string,\n  { recursive = true, list = true }: ParserOptions = {},\n): AST | undefined {\n  const tokens = tokenize(selector);\n\n  if (tokens.length === 0) {\n    return undefined;\n  }\n\n  const ast = nestTokens(tokens, { list });\n\n  if (recursive === true) {\n    walk(ast, (node) => {\n      if (\n        node.type === 'pseudo-class' &&\n        node.argument &&\n        node.name !== undefined &&\n        RECURSIVE_PSEUDO_CLASSES.has(node.name)\n      ) {\n        node.subtree = parse(node.argument, { recursive: true, list: true });\n      }\n    });\n  }\n\n  return ast;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nconst tokenTypes = [\n  'attribute',\n  'id',\n  'class',\n  'comma',\n  'combinator',\n  'pseudo-element',\n  'pseudo-class',\n  'type',\n] as const;\n\nexport type TokenType = typeof tokenTypes[number];\n\nexport type Base = {\n  length: number;\n  content: string;\n  pos: number[];\n};\n\nexport type Type = Base & {\n  type: 'type';\n  name?: string;\n  namespace?: string;\n};\n\nexport type PseudoClass = Base & {\n  type: 'pseudo-class';\n  name: string;\n  argument?: string;\n  subtree?: AST;\n};\n\nexport type PseudoElement = Base & {\n  type: 'pseudo-element';\n  name: string;\n};\n\nexport type Combinator = Base & {\n  type: 'combinator';\n};\n\nexport type Comma = Base & {\n  type: 'comma';\n};\n\nexport type Class = Base & {\n  type: 'class';\n  name: string;\n};\n\nexport type Id = Base & {\n  type: 'id';\n  name: string;\n};\n\nexport type Attribute = Base & {\n  type: 'attribute';\n  namespace?: string;\n  caseSensitive?: string;\n  name: string;\n  operator?: string;\n  value?: string;\n};\n\nexport type Atom =\n  | Attribute\n  | Id\n  | Class\n  | Comma\n  | Combinator\n  | PseudoClass\n  | PseudoElement\n  | Type;\n\nexport type Atoms = Atom[];\n\nexport type AtomOrString = Atom | string;\n\nexport type AtomsOrStrings = AtomOrString[];\n\nexport type Strings = { str: string; start: number }[];\n\n// Complex selectors with combinators (e.g. ~, >, +)\nexport interface Complex {\n  type: 'complex';\n  combinator: ' ' | '+' | '~' | '>';\n  right: AST;\n  left?: AST;\n}\n\n// Multiple selectors together\n// i.e. selector1selector2 (should match both at the same time)\nexport interface Compound {\n  type: 'compound';\n  compound: AST[];\n}\n\n// Comma-separated list of selectors\n// i.e. selector1, selector2, etc.\nexport interface List {\n  type: 'list';\n  list: AST[];\n}\n\nexport type AST =\n  | Attribute\n  | Id\n  | Class\n  | PseudoClass\n  | PseudoElement\n  | Type\n  | Complex\n  | Compound\n  | List;\n\nexport interface ParserOptions {\n  recursive?: boolean;\n  list?: boolean;\n}\n\nexport function isAtoms(tokens: AtomsOrStrings): tokens is Atoms {\n  return tokens.every((token) => typeof token !== 'string');\n}\n\nexport function isAST(\n  tokens: Atoms,\n): tokens is (Attribute | Id | Class | PseudoClass | PseudoElement | Type)[] {\n  return tokens.every((token) => token.type !== 'comma' && token.type !== 'combinator');\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { tokenize, RECURSIVE_PSEUDO_CLASSES } from './parse';\n\nexport const EXTENDED_PSEUDO_CLASSES = new Set([\n  // '-abp-contains',\n  // '-abp-has',\n  // '-abp-properties',\n  'has',\n  'has-text',\n  'if',\n  // 'if-not',\n  // 'matches-css',\n  // 'matches-css-after',\n  // 'matches-css-before',\n  // 'min-text-length',\n  // 'nth-ancestor',\n  // 'upward',\n  // 'watch-attr',\n  // 'watch-attrs',\n  // 'xpath',\n]);\n\nexport const PSEUDO_CLASSES = new Set([\n  'active',\n  'any',\n  'any-link',\n  'blank',\n  'checked',\n  'default',\n  'defined',\n  'dir',\n  'disabled',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'fullscreen',\n  'host',\n  'host-context',\n  'hover',\n  'in-range',\n  'indeterminate',\n  'invalid',\n  'is',\n  'lang',\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'matches',\n  // NOTE: by default we consider `:not(...)` to be a normal CSS selector since,\n  // we are only interested in cases where the argument is an extended selector.\n  // If that is the case, it will still be detected as such.\n  'not',\n  'nth-child',\n  'nth-last-child',\n  'nth-last-of-type',\n  'nth-of-type',\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'valid',\n  'visited',\n  'where',\n]);\n\n// NOTE: here we only need to list the pseudo-elements which can appear with a\n// single colon (e.g. :after or ::after are valid for backward compatibility\n// reasons). They can be misinterpreted as pseudo-classes by the tokenizer for\n// this reason.\nexport const PSEUDO_ELEMENTS = new Set(['after', 'before', 'first-letter', 'first-line']);\n\nexport enum SelectorType {\n  Normal,\n  Extended,\n  Invalid,\n}\n\nexport function classifySelector(selector: string): SelectorType {\n  // In most cases there is no pseudo-anything so we can quickly exit.\n  if (selector.indexOf(':') === -1) {\n    return SelectorType.Normal;\n  }\n\n  const tokens = tokenize(selector);\n\n  // Detect pseudo-classes\n  let foundSupportedExtendedSelector = false;\n  for (const token of tokens) {\n    if (token.type === 'pseudo-class') {\n      const { name } = token;\n      if (EXTENDED_PSEUDO_CLASSES.has(name) === true) {\n        foundSupportedExtendedSelector = true;\n      } else if (PSEUDO_CLASSES.has(name) === false && PSEUDO_ELEMENTS.has(name) === false) {\n        return SelectorType.Invalid;\n      }\n\n      // Recursively\n      if (\n        foundSupportedExtendedSelector === false &&\n        token.argument !== undefined &&\n        RECURSIVE_PSEUDO_CLASSES.has(name) === true\n      ) {\n        const argumentType = classifySelector(token.argument);\n        if (argumentType === SelectorType.Invalid) {\n          return argumentType;\n        } else if (argumentType === SelectorType.Extended) {\n          foundSupportedExtendedSelector = true;\n        }\n      }\n    }\n  }\n\n  if (foundSupportedExtendedSelector === true) {\n    return SelectorType.Extended;\n  }\n\n  return SelectorType.Normal;\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n/**\n * Thin abstraction around a Uint32Array which allows to push tokens\n * whithout caring for the offset. It is used as a way to avoid multiple\n * allocations while calling tokenization (mostly beneficitial for\n * `NetworkFilter.getTokens()`).\n */\nexport class TokensBuffer {\n  private readonly buffer: Uint32Array;\n  public pos: number = 0;\n\n  constructor(size: number) {\n    this.buffer = new Uint32Array(size);\n  }\n\n  public reset(): void {\n    this.pos = 0;\n  }\n\n  public slice(): Uint32Array {\n    return this.buffer.slice(0, this.pos);\n  }\n\n  public push(token: number): void {\n    this.buffer[this.pos++] = token;\n  }\n\n  public empty(): boolean {\n    return this.pos === 0;\n  }\n\n  public full(): boolean {\n    return this.pos === this.buffer.length;\n  }\n\n  public remaining(): number {\n    return this.buffer.length - this.pos;\n  }\n}\n\nexport const TOKENS_BUFFER = new TokensBuffer(1024);\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { TokensBuffer, TOKENS_BUFFER } from './tokens-buffer';\n\nexport const HASH_SEED = 7877;\n\n/***************************************************************************\n *  Bitwise helpers\n * ************************************************************************* */\n\n// From: https://stackoverflow.com/a/43122214/1185079\nexport function bitCount(n: number): number {\n  n = n - ((n >> 1) & 0x55555555);\n  n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n  return (((n + (n >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n}\n\nexport function getBit(n: number, mask: number): boolean {\n  return !!(n & mask);\n}\n\nexport function setBit(n: number, mask: number): number {\n  return n | mask;\n}\n\nexport function clearBit(n: number, mask: number): number {\n  return n & ~mask;\n}\n\nexport function fastHashBetween(str: string, begin: number, end: number): number {\n  let hash = HASH_SEED;\n\n  for (let i = begin; i < end; i += 1) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n\n  return hash >>> 0;\n}\n\nexport function fastHash(str: string): number {\n  if (typeof str !== 'string') {\n    return HASH_SEED;\n  }\n\n  if (str.length === 0) {\n    return HASH_SEED;\n  }\n\n  return fastHashBetween(str, 0, str.length);\n}\n\nexport function hashStrings(strings: string[]): Uint32Array {\n  const result = new Uint32Array(strings.length);\n  let index = 0;\n  for (const str of strings) {\n    result[index++] = fastHash(str);\n  }\n  return result;\n}\n\n// https://jsperf.com/string-startswith/21\nexport function fastStartsWith(haystack: string, needle: string): boolean {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n\n  const ceil = needle.length;\n  for (let i = 0; i < ceil; i += 1) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function fastStartsWithFrom(haystack: string, needle: string, start: number): boolean {\n  if (haystack.length - start < needle.length) {\n    return false;\n  }\n\n  const ceil = start + needle.length;\n  for (let i = start; i < ceil; i += 1) {\n    if (haystack[i] !== needle[i - start]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isDigit(ch: number): boolean {\n  // 48 == '0'\n  // 57 == '9'\n  return ch >= 48 && ch <= 57;\n}\n\nexport function isAlpha(ch: number): boolean {\n  // 65 == 'A'\n  // 90 == 'Z'\n  // 97 == 'a'\n  // 122 === 'z'\n  return (ch >= 97 && ch <= 122) || (ch >= 65 && ch <= 90);\n}\n\nfunction isAlphaExtended(ch: number): boolean {\n  // 192 -> 450\n  // À  Á  Â  Ã  Ä  Å  Æ  Ç  È  É  Ê  Ë  Ì  Í  Î  Ï  Ð  Ñ  Ò  Ó  Ô  Õ  Ö  ×  Ø\n  // Ù  Ú  Û  Ü  Ý  Þ  ß  à  á  â  ã  ä  å  æ  ç  è  é  ê  ë  ì  í  î  ï  ð  ñ\n  // ò  ó  ô  õ  ö  ÷  ø  ù  ú  û  ü  ý  þ  ÿ  Ā  ā  Ă  ă  Ą  ą  Ć  ć  Ĉ  ĉ  Ċ\n  // ċ  Č  č  Ď  ď  Đ  đ  Ē  ē  Ĕ  ĕ  Ė  ė  Ę  ę  Ě  ě  Ĝ  ĝ  Ğ  ğ  Ġ  ġ  Ģ  ģ\n  // Ĥ  ĥ  Ħ  ħ  Ĩ  ĩ  Ī  ī  Ĭ  ĭ  Į  į  İ  ı  Ĳ  ĳ  Ĵ  ĵ  Ķ  ķ  ĸ  Ĺ  ĺ  Ļ  ļ\n  // Ľ  ľ  Ŀ  ŀ  Ł  ł  Ń  ń  Ņ  ņ  Ň  ň  ŉ  Ŋ  ŋ  Ō  ō  Ŏ  ŏ  Ő  ő  Œ  œ  Ŕ  ŕ\n  // Ŗ  ŗ  Ř  ř  Ś  ś  Ŝ  ŝ  Ş  ş  Š  š  Ţ  ţ  Ť  ť  Ŧ  ŧ  Ũ  ũ  Ū  ū  Ŭ  ŭ  Ů\n  // ů  Ű  ű  Ų  ų  Ŵ  ŵ  Ŷ  ŷ  Ÿ  Ź  ź  Ż  ż  Ž  ž  ſ  ƀ  Ɓ  Ƃ  ƃ  Ƅ  ƅ  Ɔ  Ƈ\n  // ƈ  Ɖ  Ɗ  Ƌ  ƌ  ƍ  Ǝ  Ə  Ɛ  Ƒ  ƒ  Ɠ  Ɣ  ƕ  Ɩ  Ɨ  Ƙ  ƙ  ƚ  ƛ  Ɯ  Ɲ  ƞ  Ɵ  Ơ\n  // ơ  Ƣ  ƣ  Ƥ  ƥ  Ʀ  Ƨ  ƨ  Ʃ  ƪ  ƫ  Ƭ  ƭ  Ʈ  Ư  ư  Ʊ  Ʋ  Ƴ  ƴ  Ƶ  ƶ  Ʒ  Ƹ  ƹ\n  // ƺ  ƻ  Ƽ  ƽ  ƾ  ƿ  ǀ  ǁ  ǂ\n  return ch >= 192 && ch <= 450;\n}\n\nfunction isCyrillic(ch: number): boolean {\n  // 1024 -> 1279\n  // Ѐ Ё Ђ Ѓ Є Ѕ І Ї Ј Љ Њ Ћ Ќ Ѝ Ў Џ А Б В Г Д Е Ж З И Й К Л М Н О П Р С Т У Ф Х\n  // Ц Ч Ш Щ Ъ Ы Ь Э Ю Я а б в г д е ж з и й к л м н о п р с т у ф х ц ч ш щ ъ ы\n  // ь э ю я ѐ ё ђ ѓ є ѕ і ї ј љ њ ћ ќ ѝ ў џ Ѡ ѡ Ѣ ѣ Ѥ ѥ Ѧ ѧ Ѩ ѩ Ѫ ѫ Ѭ ѭ Ѯ ѯ\n  // Ѱ ѱ Ѳ ѳ Ѵ ѵ Ѷ ѷ Ѹ ѹ Ѻ ѻ Ѽ ѽ Ѿ ѿ Ҁ ҁ ҂ ҃ ҄ ҅ ҆ ҇ ҈ ҉ Ҋ ҋ Ҍ ҍ Ҏ ҏ Ґ ґ Ғ ғ Ҕ ҕ Җ җ Ҙ ҙ\n  // Қ қ Ҝ ҝ Ҟ ҟ Ҡ ҡ Ң ң Ҥ ҥ Ҧ ҧ Ҩ ҩ Ҫ ҫ Ҭ ҭ Ү ү Ұ ұ Ҳ ҳ Ҵ ҵ Ҷ ҷ Ҹ ҹ Һ һ Ҽ ҽ Ҿ\n  // ҿ Ӏ Ӂ ӂ Ӄ ӄ Ӆ ӆ Ӈ ӈ Ӊ ӊ Ӌ ӌ Ӎ ӎ ӏ Ӑ ӑ Ӓ ӓ Ӕ ӕ Ӗ ӗ Ә ә Ӛ ӛ Ӝ ӝ Ӟ ӟ Ӡ ӡ Ӣ ӣ Ӥ\n  // ӥ Ӧ ӧ Ө ө Ӫ ӫ Ӭ ӭ Ӯ ӯ Ӱ ӱ Ӳ ӳ Ӵ ӵ Ӷ ӷ Ӹ ӹ Ӻ ӻ Ӽ ӽ Ӿ ӿ\n  return ch >= 1024 && ch <= 1279;\n}\n\nfunction isAllowedCode(ch: number): boolean {\n  return (\n    isAlpha(ch) || isDigit(ch) || ch === 37 /* '%' */ || isAlphaExtended(ch) || isCyrillic(ch)\n  );\n}\n\nexport function tokenizeWithWildcardsInPlace(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n  buffer: TokensBuffer,\n): void {\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let precedingCh = 0;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else {\n      if (inside === true) {\n        inside = false;\n\n        if (\n          i - start > 1 && // Ignore tokens of 1 character\n          ch !== 42 && // Ignore tokens followed by a '*'\n          precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n          (skipFirstToken === false || start !== 0)\n        ) {\n          buffer.push(hash >>> 0);\n        }\n      }\n\n      precedingCh = ch;\n    }\n  }\n\n  if (\n    skipLastToken === false &&\n    inside === true &&\n    precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n    pattern.length - start > 1 && // Ignore tokens of 1 character\n    buffer.full() === false\n  ) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeInPlace(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n  buffer: TokensBuffer,\n): void {\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else if (inside === true) {\n      inside = false;\n      if (\n        i - start > 1 && // Ignore tokens of 1 character\n        (skipFirstToken === false || start !== 0)\n      ) {\n        buffer.push(hash >>> 0);\n      }\n    }\n  }\n\n  if (\n    inside === true &&\n    skipLastToken === false &&\n    pattern.length - start > 1 && // Ignore tokens of 1 character\n    buffer.full() === false\n  ) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeNoSkipInPlace(pattern: string, buffer: TokensBuffer): void {\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else if (inside === true) {\n      inside = false;\n      if (i - start > 1) {\n        buffer.push(hash >>> 0);\n      }\n    }\n  }\n\n  if (inside === true && pattern.length - start > 1 && buffer.full() === false) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeNoSkip(pattern: string): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeNoSkipInPlace(pattern, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenizeWithWildcards(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeWithWildcardsInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenize(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenizeRegexInPlace(selector: string, tokens: TokensBuffer): void {\n  let end = selector.length - 1;\n  let begin = 1;\n  let prev: number = 0;\n\n  // Try to find the longest safe *prefix* that we can tokenize\n  for (; begin < end; begin += 1) {\n    const code = selector.charCodeAt(begin);\n\n    // If we encounter '|' before any other opening bracket, then it's not safe\n    // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n    // to be safe.\n    if (code === 124 /* '|' */) {\n      return;\n    }\n\n    if (\n      code === 40 /* '(' */ ||\n      code === 42 /* '*' */ ||\n      code === 43 /* '+' */ ||\n      code === 63 /* '?' */ ||\n      code === 91 /* '[' */ ||\n      code === 123 /* '{' */ ||\n      (code === 46 /* '.' */ && prev !== 92) /* '\\' */ ||\n      (code === 92 /* '\\' */ && isAlpha(selector.charCodeAt(begin + 1)))\n    ) {\n      break;\n    }\n\n    prev = code;\n  }\n\n  // Try to find the longest safe *suffix* that we can tokenize\n  prev = 0;\n  for (; end >= begin; end -= 1) {\n    const code = selector.charCodeAt(end);\n\n    // If we encounter '|' before any other opening bracket, then it's not safe\n    // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n    // to be safe.\n    if (code === 124 /* '|' */) {\n      return;\n    }\n\n    if (\n      code === 41 /* ')' */ ||\n      code === 42 /* '*' */ ||\n      code === 43 /* '+' */ ||\n      code === 63 /* '?' */ ||\n      code === 93 /* ']' */ ||\n      code === 125 /* '}' */ ||\n      (code === 46 /* '.' */ && selector.charCodeAt(end - 1) !== 92) /* '\\' */ ||\n      (code === 92 /* '\\' */ && isAlpha(prev))\n    ) {\n      break;\n    }\n\n    prev = code;\n  }\n\n  if (end < begin) {\n    // Full selector is safe\n    const skipFirstToken: boolean = selector.charCodeAt(1) !== 94; /* '^' */\n    const skipLastToken: boolean = selector.charCodeAt(selector.length - 1) !== 36; /* '$' */\n    tokenizeInPlace(selector.slice(1, selector.length - 1), skipFirstToken, skipLastToken, tokens);\n  } else {\n    // Tokenize prefix\n    if (begin > 1) {\n      tokenizeInPlace(\n        selector.slice(1, begin),\n        selector.charCodeAt(1) !== 94 /* '^' */, // skipFirstToken\n        true,\n        tokens,\n      );\n    }\n\n    // Tokenize suffix\n    if (end < selector.length - 1) {\n      tokenizeInPlace(\n        selector.slice(end + 1, selector.length - 1),\n        true,\n        selector.charCodeAt(selector.length - 1) !== 94 /* '^' */, // skipLastToken\n        tokens,\n      );\n    }\n  }\n}\n\nexport function binSearch(arr: Uint32Array, elt: number): number {\n  if (arr.length === 0) {\n    return -1;\n  }\n\n  let low = 0;\n  let high = arr.length - 1;\n\n  while (low <= high) {\n    const mid = (low + high) >>> 1;\n    const midVal = arr[mid];\n    if (midVal < elt) {\n      low = mid + 1;\n    } else if (midVal > elt) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nexport function binLookup(arr: Uint32Array, elt: number): boolean {\n  return binSearch(arr, elt) !== -1;\n}\n\nconst hasUnicodeRe = /[^\\u0000-\\u00ff]/;\nexport function hasUnicode(str: string): boolean {\n  return hasUnicodeRe.test(str);\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport guessUrlType from '@remusao/guess-url-type';\nimport { parse } from 'tldts-experimental';\n\nimport { EMPTY_UINT32_ARRAY } from './data-view';\nimport { TOKENS_BUFFER } from './tokens-buffer';\nimport { fastHash, tokenizeNoSkipInPlace, HASH_SEED } from './utils';\n\nconst TLDTS_OPTIONS = {\n  extractHostname: true,\n  mixedInputs: false,\n  validateHostname: false,\n};\n\n// From: https://github.com/electron/electron/blob/34c4c8d5088fa183f56baea28809de6f2a427e02/shell/browser/net/atom_network_delegate.cc#L30\nexport type ElectronRequestType =\n  | 'image'\n  | 'mainFrame'\n  | 'object'\n  | 'other'\n  | 'script'\n  | 'stylesheet'\n  | 'subFrame'\n  | 'xhr';\n\n// From: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/7f3549ed0050f2ca8d7fcc00c33eba21f0cbdd88/types/puppeteer/index.d.ts#L945\nexport type PuppeteerRequestType =\n  | 'cspviolationreport'\n  | 'document'\n  | 'eventsource'\n  | 'fetch'\n  | 'font'\n  | 'image'\n  | 'manifest'\n  | 'media'\n  | 'other'\n  | 'preflight'\n  | 'script'\n  | 'signedexchange'\n  | 'stylesheet'\n  | 'texttrack'\n  | 'websocket'\n  | 'xhr';\n\nexport type PlaywrightRequestType =\n  | 'document'\n  | 'eventsource'\n  | 'fetch'\n  | 'font'\n  | 'image'\n  | 'manifest'\n  | 'media'\n  | 'other'\n  | 'script'\n  | 'stylesheet'\n  | 'texttrack'\n  | 'websocket'\n  | 'xhr';\n\n// From: https://developer.chrome.com/extensions/webRequest#type-ResourceType\nexport type WebRequestTypeChrome = chrome.webRequest.ResourceType;\n\n// From: https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/ResourceType#Type\nexport type WebRequestTypeFirefox = browser.webRequest.ResourceType;\n\n// The set of WebRequest types is the union of both Firefox and Chrome\nexport type WebRequestType = WebRequestTypeChrome | WebRequestTypeFirefox;\n\n// The set of supported types is the union of WebRequest\nexport type RequestType =\n  | WebRequestType\n  | ElectronRequestType\n  | PuppeteerRequestType\n  | PlaywrightRequestType;\n\nexport const NORMALIZED_TYPE_TOKEN: { [s in RequestType]: number } = {\n  beacon: fastHash('type:beacon'),\n  csp_report: fastHash('type:csp'),\n  cspviolationreport: fastHash('type:cspviolationreport'),\n  document: fastHash('type:document'),\n  eventsource: fastHash('type:other'),\n  fetch: fastHash('type:xhr'),\n  font: fastHash('type:font'),\n  image: fastHash('type:image'),\n  imageset: fastHash('type:image'),\n  mainFrame: fastHash('type:document'),\n  main_frame: fastHash('type:document'),\n  manifest: fastHash('type:other'),\n  media: fastHash('type:media'),\n  object: fastHash('type:object'),\n  object_subrequest: fastHash('type:object'),\n  other: fastHash('type:other'),\n  ping: fastHash('type:ping'),\n  preflight: fastHash('type:preflight'),\n  script: fastHash('type:script'),\n  signedexchange: fastHash('type:signedexchange'),\n  speculative: fastHash('type:other'),\n  stylesheet: fastHash('type:stylesheet'),\n  subFrame: fastHash('type:subdocument'),\n  sub_frame: fastHash('type:subdocument'),\n  texttrack: fastHash('type:other'),\n  web_manifest: fastHash('type:other'),\n  websocket: fastHash('type:websocket'),\n  xhr: fastHash('type:xhr'),\n  xml_dtd: fastHash('type:other'),\n  xmlhttprequest: fastHash('type:xhr'),\n  xslt: fastHash('type:other'),\n};\n\nexport function hashHostnameBackward(hostname: string): number {\n  let hash = HASH_SEED;\n  for (let j = hostname.length - 1; j >= 0; j -= 1) {\n    hash = (hash * 33) ^ hostname.charCodeAt(j);\n  }\n  return hash >>> 0;\n}\n\nexport function getHashesFromLabelsBackward(\n  hostname: string,\n  end: number,\n  startOfDomain: number,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  let hash = HASH_SEED;\n\n  // Compute hash backward, label per label\n  for (let i = end - 1; i >= 0; i -= 1) {\n    const code = hostname.charCodeAt(i);\n\n    // Process label\n    if (code === 46 /* '.' */ && i < startOfDomain) {\n      TOKENS_BUFFER.push(hash >>> 0);\n    }\n\n    // Update hash\n    hash = (hash * 33) ^ code;\n  }\n\n  TOKENS_BUFFER.push(hash >>> 0);\n  return TOKENS_BUFFER.slice();\n}\n\n/**\n * Given a hostname and its domain, return the hostname without the public\n * suffix. We know that the domain, with one less label on the left, will be a\n * the public suffix; and from there we know which trailing portion of\n * `hostname` we should remove.\n */\nexport function getHostnameWithoutPublicSuffix(hostname: string, domain: string): string | null {\n  let hostnameWithoutPublicSuffix: string | null = null;\n\n  const indexOfDot = domain.indexOf('.');\n  if (indexOfDot !== -1) {\n    const publicSuffix = domain.slice(indexOfDot + 1);\n    hostnameWithoutPublicSuffix = hostname.slice(0, -publicSuffix.length - 1);\n  }\n\n  return hostnameWithoutPublicSuffix;\n}\n\nexport function getEntityHashesFromLabelsBackward(hostname: string, domain: string): Uint32Array {\n  const hostnameWithoutPublicSuffix = getHostnameWithoutPublicSuffix(hostname, domain);\n  if (hostnameWithoutPublicSuffix !== null) {\n    return getHashesFromLabelsBackward(\n      hostnameWithoutPublicSuffix,\n      hostnameWithoutPublicSuffix.length,\n      hostnameWithoutPublicSuffix.length,\n    );\n  }\n  return EMPTY_UINT32_ARRAY;\n}\n\nexport function getHostnameHashesFromLabelsBackward(\n  hostname: string,\n  domain: string,\n): Uint32Array {\n  return getHashesFromLabelsBackward(hostname, hostname.length, hostname.length - domain.length);\n}\n\nfunction isThirdParty(\n  hostname: string,\n  domain: string,\n  sourceHostname: string,\n  sourceDomain: string,\n  type: RequestType,\n): boolean {\n  if (type === 'main_frame' || type === 'mainFrame') {\n    return false;\n  } else if (domain.length !== 0 && sourceDomain.length !== 0) {\n    return domain !== sourceDomain;\n  } else if (domain.length !== 0 && sourceHostname.length !== 0) {\n    return domain !== sourceHostname;\n  } else if (sourceDomain.length !== 0 && hostname.length !== 0) {\n    return hostname !== sourceDomain;\n  }\n\n  return false;\n}\n\nexport interface RequestInitialization {\n  requestId: string;\n  tabId: number;\n\n  url: string;\n  hostname: string;\n  domain: string;\n\n  sourceUrl: string;\n  sourceHostname: string;\n  sourceDomain: string;\n\n  type: RequestType;\n\n  // Optional attribute referencing the original request details used to create\n  // the Request instance. This can be for example:\n  // * Electron.OnHeadersReceivedListenerDetails\n  // * Electron.OnBeforeRequestListenerDetails\n  // * puppeteer.Request\n  // * webRequest details\n  _originalRequestDetails: any | undefined;\n}\n\nexport default class Request {\n  /**\n   * Create an instance of `Request` from raw request details.\n   */\n  public static fromRawDetails({\n    requestId = '0',\n    tabId = 0,\n    url = '',\n    hostname,\n    domain,\n    sourceUrl = '',\n    sourceHostname,\n    sourceDomain,\n    type = 'main_frame',\n    _originalRequestDetails,\n  }: Partial<RequestInitialization>): Request {\n    url = url.toLowerCase();\n\n    if (hostname === undefined || domain === undefined) {\n      const parsed = parse(url, TLDTS_OPTIONS);\n      hostname = hostname || parsed.hostname || '';\n      domain = domain || parsed.domain || '';\n    }\n\n    // Initialize source URL\n    if (sourceHostname === undefined || sourceDomain === undefined) {\n      const parsed = parse(sourceHostname || sourceDomain || sourceUrl, TLDTS_OPTIONS);\n      sourceHostname = sourceHostname || parsed.hostname || '';\n      sourceDomain = sourceDomain || parsed.domain || sourceHostname || '';\n    }\n\n    return new Request({\n      requestId,\n      tabId,\n\n      domain,\n      hostname,\n      url,\n\n      sourceDomain,\n      sourceHostname,\n      sourceUrl,\n\n      type,\n\n      _originalRequestDetails,\n    });\n  }\n\n  public readonly _originalRequestDetails: any | undefined;\n\n  public type: RequestType;\n  public readonly isHttp: boolean;\n  public readonly isHttps: boolean;\n  public readonly isSupported: boolean;\n  public readonly isFirstParty: boolean;\n  public readonly isThirdParty: boolean;\n\n  public readonly id: string;\n  public readonly tabId: number;\n  public readonly url: string;\n  public readonly hostname: string;\n  public readonly domain: string;\n\n  public readonly sourceHostnameHashes: Uint32Array;\n  public readonly sourceEntityHashes: Uint32Array;\n\n  // Lazy attributes\n  private tokens: Uint32Array | undefined = undefined;\n  private hostnameHashes: Uint32Array | undefined = undefined;\n  private entityHashes: Uint32Array | undefined = undefined;\n\n  constructor({\n    requestId,\n    tabId,\n\n    type,\n\n    domain,\n    hostname,\n    url,\n\n    sourceDomain,\n    sourceHostname,\n\n    _originalRequestDetails,\n  }: RequestInitialization) {\n    this._originalRequestDetails = _originalRequestDetails;\n    this.id = requestId;\n    this.tabId = tabId;\n    this.type = type;\n\n    this.url = url;\n    this.hostname = hostname;\n    this.domain = domain;\n\n    this.sourceHostnameHashes =\n      sourceHostname.length === 0\n        ? EMPTY_UINT32_ARRAY\n        : getHostnameHashesFromLabelsBackward(sourceHostname, sourceDomain);\n\n    this.sourceEntityHashes =\n      sourceHostname.length === 0\n        ? EMPTY_UINT32_ARRAY\n        : getEntityHashesFromLabelsBackward(sourceHostname, sourceDomain);\n\n    // Decide on partiness\n    this.isThirdParty = isThirdParty(hostname, domain, sourceHostname, sourceDomain, type);\n    this.isFirstParty = !this.isThirdParty;\n\n    // Check protocol\n    this.isSupported = true;\n    if (this.type === 'websocket' || this.url.startsWith('ws:') || this.url.startsWith('wss:')) {\n      this.isHttp = false;\n      this.isHttps = false;\n      this.type = 'websocket';\n      this.isSupported = true;\n    } else if (this.url.startsWith('http:')) {\n      this.isHttp = true;\n      this.isHttps = false;\n    } else if (this.url.startsWith('https:')) {\n      this.isHttps = true;\n      this.isHttp = false;\n    } else if (this.url.startsWith('data:')) {\n      this.isHttp = false;\n      this.isHttps = false;\n\n      // Only keep prefix of URL\n      const indexOfComa = this.url.indexOf(',');\n      if (indexOfComa !== -1) {\n        this.url = this.url.slice(0, indexOfComa);\n      }\n    } else {\n      this.isHttp = false;\n      this.isHttps = false;\n      this.isSupported = false;\n    }\n  }\n\n  public getHostnameHashes(): Uint32Array {\n    if (this.hostnameHashes === undefined) {\n      this.hostnameHashes =\n        this.hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getHostnameHashesFromLabelsBackward(this.hostname, this.domain);\n    }\n\n    return this.hostnameHashes;\n  }\n\n  public getEntityHashes(): Uint32Array {\n    if (this.entityHashes === undefined) {\n      this.entityHashes =\n        this.hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getEntityHashesFromLabelsBackward(this.hostname, this.domain);\n    }\n\n    return this.entityHashes;\n  }\n\n  public getTokens(): Uint32Array {\n    if (this.tokens === undefined) {\n      TOKENS_BUFFER.reset();\n\n      for (const hash of this.sourceHostnameHashes) {\n        TOKENS_BUFFER.push(hash);\n      }\n\n      // Add token corresponding to request type\n      TOKENS_BUFFER.push(NORMALIZED_TYPE_TOKEN[this.type]);\n\n      tokenizeNoSkipInPlace(this.url, TOKENS_BUFFER);\n\n      this.tokens = TOKENS_BUFFER.slice();\n    }\n\n    return this.tokens;\n  }\n\n  public isMainFrame(): boolean {\n    return this.type === 'main_frame' || this.type === 'mainFrame';\n  }\n\n  public isSubFrame(): boolean {\n    return this.type === 'sub_frame' || this.type === 'subFrame';\n  }\n\n  /**\n   * Calling this method will attempt to guess the type of a request based on\n   * information found in `url` only. This can be useful to try and fine-tune\n   * the type of a Request when it is not otherwise available or if it was\n   * inferred as 'other'.\n   */\n  public guessTypeOfRequest(): RequestType {\n    const currentType = this.type;\n    this.type = guessUrlType(this.url);\n    if (currentType !== this.type) {\n      this.tokens = undefined;\n    }\n    return this.type;\n  }\n}\n\n/**\n * Kept for backward compatibility. The recommended way is to call\n * `Request.fromRawDetails` directly.\n */\nexport function makeRequest(details: Partial<RequestInitialization>): Request {\n  return Request.fromRawDetails(details);\n}\n",null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { hashHostnameBackward } from '../request';\nimport { toASCII } from '../punycode';\nimport { StaticDataView, sizeOfUint32Array } from '../data-view';\nimport { binLookup, hasUnicode } from '../utils';\n\nexport class Domains {\n  public static parse(parts: string[]): Domains | undefined {\n    if (parts.length === 0) {\n      return undefined;\n    }\n\n    const entities: number[] = [];\n    const notEntities: number[] = [];\n    const hostnames: number[] = [];\n    const notHostnames: number[] = [];\n\n    for (let hostname of parts) {\n      if (hasUnicode(hostname)) {\n        hostname = toASCII(hostname);\n      }\n\n      const negation: boolean = hostname.charCodeAt(0) === 126; /* '~' */\n      const entity: boolean =\n        hostname.charCodeAt(hostname.length - 1) === 42 /* '*' */ &&\n        hostname.charCodeAt(hostname.length - 2) === 46; /* '.' */\n\n      const start: number = negation ? 1 : 0;\n      const end: number = entity ? hostname.length - 2 : hostname.length;\n\n      const hash = hashHostnameBackward(\n        negation === true || entity === true ? hostname.slice(start, end) : hostname,\n      );\n\n      if (negation) {\n        if (entity) {\n          notEntities.push(hash);\n        } else {\n          notHostnames.push(hash);\n        }\n      } else {\n        if (entity) {\n          entities.push(hash);\n        } else {\n          hostnames.push(hash);\n        }\n      }\n    }\n\n    return new Domains({\n      entities: entities.length !== 0 ? new Uint32Array(entities).sort() : undefined,\n      hostnames: hostnames.length !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n      notEntities: notEntities.length !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n      notHostnames: notHostnames.length !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n    });\n  }\n\n  public static deserialize(buffer: StaticDataView): Domains {\n    const optionalParts = buffer.getUint8();\n\n    // The order of these fields should be the same as when we serialize them.\n    return new Domains({\n      entities: (optionalParts & 1) === 1 ? buffer.getUint32Array() : undefined,\n      hostnames: (optionalParts & 2) === 2 ? buffer.getUint32Array() : undefined,\n      notEntities: (optionalParts & 4) === 4 ? buffer.getUint32Array() : undefined,\n      notHostnames: (optionalParts & 8) === 8 ? buffer.getUint32Array() : undefined,\n    });\n  }\n\n  // hostnames\n  public readonly entities: Uint32Array | undefined;\n  public readonly hostnames: Uint32Array | undefined;\n\n  // Exceptions\n  public readonly notEntities: Uint32Array | undefined;\n  public readonly notHostnames: Uint32Array | undefined;\n\n  constructor({\n    entities,\n    hostnames,\n    notEntities,\n    notHostnames,\n  }: {\n    entities: Uint32Array | undefined;\n    hostnames: Uint32Array | undefined;\n    notEntities: Uint32Array | undefined;\n    notHostnames: Uint32Array | undefined;\n  }) {\n    // Hostname constraints\n    this.entities = entities;\n    this.hostnames = hostnames;\n\n    // Hostname exceptions\n    this.notEntities = notEntities;\n    this.notHostnames = notHostnames;\n  }\n\n  public updateId(hash: number): number {\n    const { hostnames, entities, notHostnames, notEntities } = this;\n\n    if (hostnames !== undefined) {\n      for (const hostname of hostnames) {\n        hash = (hash * 33) ^ hostname;\n      }\n    }\n\n    if (entities !== undefined) {\n      for (const entity of entities) {\n        hash = (hash * 33) ^ entity;\n      }\n    }\n\n    if (notHostnames !== undefined) {\n      for (const notHostname of notHostnames) {\n        hash = (hash * 33) ^ notHostname;\n      }\n    }\n\n    if (notEntities !== undefined) {\n      for (const notEntity of notEntities) {\n        hash = (hash * 33) ^ notEntity;\n      }\n    }\n\n    return hash;\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    // Mandatory fields\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.entities !== undefined) {\n      optionalParts |= 1;\n      buffer.pushUint32Array(this.entities);\n    }\n\n    if (this.hostnames !== undefined) {\n      optionalParts |= 2;\n      buffer.pushUint32Array(this.hostnames);\n    }\n\n    if (this.notEntities !== undefined) {\n      optionalParts |= 4;\n      buffer.pushUint32Array(this.notEntities);\n    }\n\n    if (this.notHostnames !== undefined) {\n      optionalParts |= 8;\n      buffer.pushUint32Array(this.notHostnames);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  public getSerializedSize(): number {\n    let estimate: number = 1; // optional parts (1 byte)\n\n    if (this.entities !== undefined) {\n      estimate += sizeOfUint32Array(this.entities);\n    }\n\n    if (this.hostnames !== undefined) {\n      estimate += sizeOfUint32Array(this.hostnames);\n    }\n\n    if (this.notHostnames !== undefined) {\n      estimate += sizeOfUint32Array(this.notHostnames);\n    }\n\n    if (this.notEntities !== undefined) {\n      estimate += sizeOfUint32Array(this.notEntities);\n    }\n\n    return estimate;\n  }\n\n  public match(hostnameHashes: Uint32Array, entityHashes: Uint32Array): boolean {\n    // Check if `hostname` is blacklisted\n    if (this.notHostnames !== undefined) {\n      for (const hash of hostnameHashes) {\n        if (binLookup(this.notHostnames, hash)) {\n          return false;\n        }\n      }\n    }\n\n    // Check if `hostname` is blacklisted by *entity*\n    if (this.notEntities !== undefined) {\n      for (const hash of entityHashes) {\n        if (binLookup(this.notEntities, hash)) {\n          return false;\n        }\n      }\n    }\n\n    // Check if `hostname` is allowed\n    if (this.hostnames !== undefined || this.entities !== undefined) {\n      if (this.hostnames !== undefined) {\n        for (const hash of hostnameHashes) {\n          if (binLookup(this.hostnames, hash)) {\n            return true;\n          }\n        }\n      }\n\n      if (this.entities !== undefined) {\n        for (const hash of entityHashes) {\n          if (binLookup(this.entities, hash)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n// This module implements an extremely efficient stream HTML filtering engine\n// which is able to consume an HTML document over time and filter part of it\n// using adblocker selectors.\n\nexport type HTMLSelector = readonly ['script', readonly string[]];\n\nexport function extractHTMLSelectorFromRule(rule: string): HTMLSelector | undefined {\n  if (rule.startsWith('^script') === false) {\n    return undefined;\n  }\n\n  const prefix = ':has-text(';\n  const selectors: string[] = [];\n\n  let index = 7;\n  // ^script:has-text\n  //        ^ 7\n\n  // Prepare for finding one or more ':has-text(' selectors in a row\n  while (rule.startsWith(prefix, index)) {\n    index += prefix.length;\n    let currentParsingDepth = 1;\n    const startOfSelectorIndex = index;\n    let prev = -1; // previous character\n    for (; index < rule.length && currentParsingDepth !== 0; index += 1) {\n      const code = rule.charCodeAt(index);\n\n      if (prev !== 92 /* '\\' */) {\n        if (code === 40 /* '(' */) {\n          currentParsingDepth += 1;\n        }\n\n        if (code === 41 /* ')' */) {\n          currentParsingDepth -= 1;\n        }\n      }\n\n      prev = code;\n    }\n\n    selectors.push(rule.slice(startOfSelectorIndex, index - 1));\n  }\n\n  if (index !== rule.length) {\n    return undefined;\n  }\n\n  return ['script', selectors];\n}\n\nexport function extractTagsFromHtml(\n  html: string,\n  tag: string,\n): [[number, string][], string, string] {\n  const tags: [number, string][] = [];\n  const prefix = `<${tag}`;\n  const suffix = `</${tag}>`;\n\n  // Keep track of the beginning of current identified tag\n  let index = html.indexOf(prefix);\n  // Keep tracks of index immediately following last extracted tag\n  let endOfLastTag = 0;\n\n  while (index !== -1) {\n    // Find index of end of current tag. If we do not find it, it could be\n    // because it will come in the next chunk and we should try parsing it\n    // again then.\n    const endOfTagIndex = html.indexOf('>', index + prefix.length);\n    if (endOfTagIndex === -1) {\n      return [tags, html.slice(0, index), html.slice(index)];\n    }\n\n    // Handle short tag form <tag/> which will not have a closing tag.\n    if (html.charCodeAt(endOfTagIndex - 1) === 47 /* '/' */) {\n      endOfLastTag = endOfTagIndex + 1;\n      tags.push([index, html.slice(index, endOfLastTag)]);\n    } else {\n      // Find index of closing tag '</tag>'. If we do not find it, again, it\n      // could mean that it will come in next chunk and we need to try parsing\n      // it again with more input.\n      const indexOfClosingTag = html.indexOf(suffix, endOfTagIndex);\n      if (indexOfClosingTag === -1) {\n        return [tags, html.slice(0, index), html.slice(index)];\n      }\n\n      tags.push([index, html.slice(index, indexOfClosingTag + suffix.length)]);\n      endOfLastTag = indexOfClosingTag + suffix.length;\n    }\n\n    index = html.indexOf(prefix, endOfLastTag);\n  }\n\n  // Make sure we consume as much input as possible so that we do not parse the\n  // same portion of HTML again next time and we can stream chunks as early as\n  // possible.\n  //\n  // We check if there is at least one '<' char after the end of the last\n  // extracted tag; this would indicate that the next chunk might contain the\n  // remaining of a valid tag. We then look up to N characters after this '<'\n  // character, where N is the size of 'prefix'. The rational is that if we\n  // reached this part of the code, then it cannot be a match otherwise we\n  // would have returned earlier (from the loop).\n  let lastClosingTagIndex = html.lastIndexOf('>');\n  if (lastClosingTagIndex === -1) {\n    lastClosingTagIndex = endOfLastTag;\n  }\n\n  const indexOfNextTag = html.indexOf('<', lastClosingTagIndex);\n  // If no '<' in the remaining of input, then it means we can count this chunk\n  // as fully parsed (i.e.: next chunk can be parsed independently without\n  // missing a tag which would start in this one).\n  if (indexOfNextTag === -1) {\n    return [tags, html, ''];\n  }\n\n  // In case of a partial tag ending this 'html' chunk. Then check if we have\n  // enough information to discard it already based on the kind of tags we are\n  // looking for.\n  if (\n    html.length - indexOfNextTag >= prefix.length ||\n    prefix.startsWith(html.slice(indexOfNextTag)) === false\n  ) {\n    return [tags, html, ''];\n  }\n\n  return [tags, html.slice(0, indexOfNextTag), html.slice(indexOfNextTag)];\n}\n\ntype Patterns = readonly [readonly string[], readonly RegExp[]][];\n\nexport function extractSelectorsFromRules(filter: HTMLSelector[]): Patterns {\n  const patterns: [string[], RegExp[]][] = [];\n\n  for (const [_, selectors] of filter) {\n    const plainPatterns: string[] = [];\n    const regexpPatterns: RegExp[] = [];\n\n    for (const selector of selectors) {\n      if (selector.charCodeAt(0) === 47 /* '/' */) {\n        if (selector.endsWith('/')) {\n          regexpPatterns.push(new RegExp(selector.slice(1, -1)));\n        } else if (selector.endsWith('/i')) {\n          regexpPatterns.push(new RegExp(selector.slice(1, -2), 'i'));\n        }\n      } else {\n        plainPatterns.push(selector);\n      }\n    }\n\n    if (plainPatterns.length !== 0 || regexpPatterns.length !== 0) {\n      patterns.push([plainPatterns, regexpPatterns]);\n    }\n  }\n\n  return patterns;\n}\n\n/**\n * Check if `tag` should be removed from HTML based on `plainPatterns` and\n * `regexpPatterns`. For a tag to be removed, all elements from `plainPatterns`\n * and `regexpPatterns` must match.\n */\nfunction tagShouldBeRemoved(\n  tag: string,\n  plainPatterns: readonly string[],\n  regexpPatterns: readonly RegExp[],\n): boolean {\n  for (const pattern of plainPatterns) {\n    if (tag.indexOf(pattern) === -1) {\n      return false;\n    }\n  }\n\n  for (const pattern of regexpPatterns) {\n    if (pattern.test(tag) === false) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function selectTagsToRemove(\n  patterns: Patterns,\n  tags: [number, string][],\n): [number, string][] {\n  const toRemove: [number, string][] = [];\n\n  for (const tag of tags) {\n    for (const [plainPatterns, regexpPatterns] of patterns) {\n      if (tagShouldBeRemoved(tag[1], plainPatterns, regexpPatterns)) {\n        toRemove.push(tag);\n        break;\n      }\n    }\n  }\n\n  return toRemove;\n}\n\nexport function removeTagsFromHtml(html: string, toRemove: [number, string][]): string {\n  if (toRemove.length === 0) {\n    return html;\n  }\n\n  let filteredHtml = html;\n  toRemove.reverse(); // make sure to remove from last to first tag (preserve indices)\n  for (const [index, tag] of toRemove) {\n    filteredHtml = filteredHtml.slice(0, index) + filteredHtml.slice(index + tag.length);\n  }\n\n  return filteredHtml;\n}\n\nexport default class StreamingHtmlFilter {\n  private buffer: string;\n  private readonly patterns: Patterns;\n\n  constructor(selectors: HTMLSelector[]) {\n    this.buffer = '';\n    this.patterns = extractSelectorsFromRules(selectors);\n  }\n\n  public flush(): string {\n    return this.buffer;\n  }\n\n  public write(chunk: string): string {\n    // If there are no valid selectors, abort.\n    if (this.patterns.length === 0) {\n      return chunk;\n    }\n\n    // If given an empty string, abort.\n    if (chunk.length === 0) {\n      return chunk;\n    }\n\n    // Accumulate buffer + new data\n    this.buffer += chunk;\n\n    // Parse tags from `this.buffer`\n    const [tags, parsed, rest] = extractTagsFromHtml(this.buffer, 'script');\n    this.buffer = rest;\n\n    // If no tags were found, just return the parsed version\n    if (tags.length === 0) {\n      return parsed;\n    }\n\n    // Perform tags filtering using `this.patterns` and `this.regexps`.\n    return removeTagsFromHtml(parsed, selectTagsToRemove(this.patterns, tags));\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport {\n  AST,\n  classifySelector,\n  SelectorType,\n  parse as parseCssSelector,\n} from '@cliqz/adblocker-extended-selectors';\n\nimport { Domains } from '../engine/domains';\nimport {\n  EMPTY_UINT32_ARRAY,\n  StaticDataView,\n  sizeOfASCII,\n  sizeOfCosmeticSelector,\n  sizeOfUTF8,\n  sizeOfRawCosmetic,\n} from '../data-view';\nimport {\n  getHostnameHashesFromLabelsBackward,\n  getEntityHashesFromLabelsBackward,\n} from '../request';\nimport {\n  fastHash,\n  fastHashBetween,\n  fastStartsWithFrom,\n  getBit,\n  hasUnicode,\n  setBit,\n  tokenize,\n} from '../utils';\nimport IFilter from './interface';\nimport { HTMLSelector, extractHTMLSelectorFromRule } from '../html-filtering';\n\nconst EMPTY_TOKENS: [Uint32Array] = [EMPTY_UINT32_ARRAY];\nexport const DEFAULT_HIDDING_STYLE: string = 'display: none !important;';\n\n/**\n * Given a `selector` starting with either '#' or '.' check if what follows is\n * a simple CSS selector: /^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/\n */\nfunction isSimpleSelector(selector: string): boolean {\n  for (let i = 1; i < selector.length; i += 1) {\n    const code: number = selector.charCodeAt(i);\n    if (\n      !(\n        code === 45 /* '-' */ ||\n        code === 95 /* '_' */ ||\n        (code >= 48 && code <= 57) /* [0-9] */ ||\n        (code >= 65 && code <= 90) /* [A-Z] */ ||\n        (code >= 97 && code <= 122)\n      ) /* [a-z] */\n    ) {\n      if (i < selector.length - 1) {\n        // Check if what follows is a ' >' or ' ~' or ' +', in which case we\n        // also consider it a simple selector and the token this filter can be\n        // indexed with is the first selector.\n        const nextCode = selector.charCodeAt(i + 1);\n        if (\n          code === 91 /* '[' */ ||\n          code === 46 /* '.' */ ||\n          code === 58 /* ':' */ ||\n          (code === 32 /* ' ' */ &&\n            (nextCode === 62 /* '>' */ ||\n              nextCode === 43 /* '+' */ ||\n              nextCode === 126 /* '~' */ ||\n              nextCode === 46 /* '.' */ ||\n              nextCode === 35)) /* '#' */\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Given a `selector` starting with either 'a[' or '[', check if what follows\n * is a simple href attribute selector of the form: 'href^=' or 'href*='.\n */\nfunction isSimpleHrefSelector(selector: string, start: number): boolean {\n  return (\n    selector.startsWith('href^=\"', start) ||\n    selector.startsWith('href*=\"', start) ||\n    selector.startsWith('href=\"', start)\n  );\n}\n\n/**\n * Validate CSS selector. There is a fast path for simple selectors (e.g.: #foo\n * or .bar) which are the most common case. For complex ones, we rely on\n * `Element.matches` (if available).\n */\nconst isValidCss = (() => {\n  const div =\n    typeof document !== 'undefined'\n      ? document.createElement('div')\n      : {\n          matches: () => {\n            /* noop */\n          },\n        };\n  const matches = (selector: string): void | boolean => div.matches(selector);\n  const validSelectorRe = /^[#.]?[\\w-.]+$/;\n\n  return function isValidCssImpl(selector: string): boolean {\n    if (validSelectorRe.test(selector)) {\n      return true;\n    }\n\n    try {\n      matches(selector);\n    } catch (ex) {\n      return false;\n    }\n\n    return true;\n  };\n})();\n\n/**\n * Masks used to store options of cosmetic filters in a bitmask.\n */\nconst enum COSMETICS_MASK {\n  unhide = 1 << 0,\n  scriptInject = 1 << 1,\n  isUnicode = 1 << 2,\n  isClassSelector = 1 << 3,\n  isIdSelector = 1 << 4,\n  isHrefSelector = 1 << 5,\n  remove = 1 << 6,\n  extended = 1 << 7,\n}\n\nfunction computeFilterId(\n  mask: number,\n  selector: string | undefined,\n  domains: Domains | undefined,\n  style: string | undefined,\n): number {\n  let hash = (5437 * 33) ^ mask;\n\n  if (selector !== undefined) {\n    for (let i = 0; i < selector.length; i += 1) {\n      hash = (hash * 33) ^ selector.charCodeAt(i);\n    }\n  }\n\n  if (domains !== undefined) {\n    hash = domains.updateId(hash);\n  }\n\n  if (style !== undefined) {\n    for (let i = 0; i < style.length; i += 1) {\n      hash = (hash * 33) ^ style.charCodeAt(i);\n    }\n  }\n\n  return hash >>> 0;\n}\n\n/***************************************************************************\n *  Cosmetic filters parsing\n * ************************************************************************ */\n\nexport default class CosmeticFilter implements IFilter {\n  /**\n   * Given a line that we know contains a cosmetic filter, create a CosmeticFiler\n   * instance out of it. This function should be *very* efficient, as it will be\n   * used to parse tens of thousands of lines.\n   */\n  public static parse(line: string, debug: boolean = false): CosmeticFilter | null {\n    // Mask to store attributes. Each flag (unhide, scriptInject, etc.) takes\n    // only 1 bit at a specific offset defined in COSMETICS_MASK.\n    // cf: COSMETICS_MASK for the offset of each property\n    let mask = 0;\n    let selector: string | undefined;\n    let domains: Domains | undefined;\n    let style: string | undefined;\n    const sharpIndex = line.indexOf('#');\n\n    // Start parsing the line\n    const afterSharpIndex = sharpIndex + 1;\n    let suffixStartIndex = afterSharpIndex + 1;\n\n    // hostname1,hostname2#?#.selector\n    // hostname1,hostname2#@#.selector\n    //                    ^^ ^\n    //                    || |\n    //                    || suffixStartIndex\n    //                    |afterSharpIndex\n    //                    sharpIndex\n\n    // Check if unhide\n    if (line.length > afterSharpIndex) {\n      if (line[afterSharpIndex] === '@') {\n        mask = setBit(mask, COSMETICS_MASK.unhide);\n        suffixStartIndex += 1;\n      } else if (line[afterSharpIndex] === '?') {\n        suffixStartIndex += 1;\n      }\n    }\n\n    if (suffixStartIndex >= line.length) {\n      return null;\n    }\n\n    // Parse hostnames and entitites as well as their negations.\n    //\n    // - ~hostname##.selector\n    // - hostname##.selector\n    // - entity.*##.selector\n    // - ~entity.*##.selector\n    //\n    // Each kind will have its own Uint32Array containing hashes, sorted by\n    // number of labels considered. This allows a compact representation of\n    // hostnames and fast matching without any string copy.\n    if (sharpIndex > 0) {\n      domains = Domains.parse(line.slice(0, sharpIndex).split(','));\n    }\n\n    if (line.endsWith(':remove()')) {\n      // ##selector:remove()\n      mask = setBit(mask, COSMETICS_MASK.remove);\n      mask = setBit(mask, COSMETICS_MASK.extended);\n      line = line.slice(0, -9);\n    } else if (\n      line.length - suffixStartIndex >= 8 &&\n      line.endsWith(')') &&\n      line.indexOf(':style(', suffixStartIndex) !== -1\n    ) {\n      // ##selector:style(...)\n      const indexOfStyle = line.indexOf(':style(', suffixStartIndex);\n      style = line.slice(indexOfStyle + 7, -1);\n      line = line.slice(0, indexOfStyle);\n    }\n\n    // Deal with HTML filters\n    if (line.charCodeAt(suffixStartIndex) === 94 /* '^' */) {\n      if (\n        fastStartsWithFrom(line, 'script:has-text(', suffixStartIndex + 1) === false ||\n        line.charCodeAt(line.length - 1) !== 41 /* ')' */\n      ) {\n        return null;\n      }\n\n      // NOTE: currently only ^script:has-text(...) is supported.\n      //\n      //   ^script:has-text(selector)\n      //   ^                         ^\n      //   |                         |\n      //   |                         |\n      //   |                         line.length\n      //   |\n      //   suffixStartIndex\n      //\n      selector = line.slice(suffixStartIndex, line.length);\n      if (extractHTMLSelectorFromRule(selector) === undefined) {\n        return null;\n      }\n    } else if (\n      line.length - suffixStartIndex > 4 &&\n      line.charCodeAt(suffixStartIndex) === 43 /* '+' */ &&\n      fastStartsWithFrom(line, '+js(', suffixStartIndex)\n    ) {\n      // Generic scriptlets are invalid, unless they are un-hide\n      if (\n        (domains === undefined ||\n          (domains.hostnames === undefined && domains.entities === undefined)) &&\n        getBit(mask, COSMETICS_MASK.unhide) === false\n      ) {\n        return null;\n      }\n\n      mask = setBit(mask, COSMETICS_MASK.scriptInject);\n      selector = line.slice(suffixStartIndex + 4, line.length - 1);\n\n      // An empty scriptlet (i.e. '+js()') can be specified to cancel injections\n      // on a specific domain or globally. It does not make sense though to have\n      // an empty scriptlet without an exception (i.e. '#@#' is mandatory).\n      if (getBit(mask, COSMETICS_MASK.unhide) === false && selector.length === 0) {\n        return null;\n      }\n    } else {\n      selector = line.slice(suffixStartIndex);\n      const selectorType = classifySelector(selector);\n      if (selectorType === SelectorType.Extended) {\n        mask = setBit(mask, COSMETICS_MASK.extended);\n      } else if (selectorType === SelectorType.Invalid || !isValidCss(selector)) {\n        // console.error('Invalid', line);\n        // TODO - maybe perform `isValidCss` from the other module.\n        return null;\n      }\n    }\n\n    // Extended selectors should always be specific to some domain.\n    if (domains === undefined && getBit(mask, COSMETICS_MASK.extended) === true) {\n      return null;\n    }\n\n    if (selector !== undefined) {\n      // Check if unicode appears in selector\n      if (hasUnicode(selector)) {\n        mask = setBit(mask, COSMETICS_MASK.isUnicode);\n      }\n\n      // Classify selector\n      if (\n        getBit(mask, COSMETICS_MASK.scriptInject) === false &&\n        getBit(mask, COSMETICS_MASK.remove) === false &&\n        getBit(mask, COSMETICS_MASK.extended) === false &&\n        selector.startsWith('^') === false\n      ) {\n        const c0 = selector.charCodeAt(0);\n        const c1 = selector.charCodeAt(1);\n        const c2 = selector.charCodeAt(2);\n\n        // Check if we have a specific case of simple selector (id, class or\n        // href) These are the most common filters and will benefit greatly from\n        // a custom dispatch mechanism.\n        if (getBit(mask, COSMETICS_MASK.scriptInject) === false) {\n          if (c0 === 46 /* '.' */ && isSimpleSelector(selector)) {\n            mask = setBit(mask, COSMETICS_MASK.isClassSelector);\n          } else if (c0 === 35 /* '#' */ && isSimpleSelector(selector)) {\n            mask = setBit(mask, COSMETICS_MASK.isIdSelector);\n          } else if (\n            c0 === 97 /* a */ &&\n            c1 === 91 /* '[' */ &&\n            c2 === 104 /* 'h' */ &&\n            isSimpleHrefSelector(selector, 2)\n          ) {\n            mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n          } else if (\n            c0 === 91 /* '[' */ &&\n            c1 === 104 /* 'h' */ &&\n            isSimpleHrefSelector(selector, 1)\n          ) {\n            mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n          }\n        }\n      }\n    }\n\n    return new CosmeticFilter({\n      mask,\n      rawLine: debug === true ? line : undefined,\n      selector,\n      style,\n      domains,\n    });\n  }\n\n  /**\n   * Deserialize cosmetic filters. The code accessing the buffer should be\n   * symetrical to the one in `serializeCosmeticFilter`.\n   */\n  public static deserialize(buffer: StaticDataView): CosmeticFilter {\n    const mask = buffer.getUint8();\n    const isUnicode = getBit(mask, COSMETICS_MASK.isUnicode);\n    const optionalParts = buffer.getUint8();\n    const selector = isUnicode ? buffer.getUTF8() : buffer.getCosmeticSelector();\n\n    // The order of these fields should be the same as when we serialize them.\n    return new CosmeticFilter({\n      // Mandatory fields\n      mask,\n      selector,\n\n      // Optional fields\n      domains: (optionalParts & 1) === 1 ? Domains.deserialize(buffer) : undefined,\n      rawLine: (optionalParts & 2) === 2 ? buffer.getRawCosmetic() : undefined,\n      style: (optionalParts & 4) === 4 ? buffer.getASCII() : undefined,\n    });\n  }\n\n  // Mandatory fields\n  public readonly mask: number;\n  public readonly selector: string;\n\n  public readonly domains: Domains | undefined;\n\n  public readonly style: string | undefined;\n  public readonly rawLine: string | undefined;\n\n  private id: number | undefined;\n\n  constructor({\n    mask,\n    selector,\n    domains,\n    rawLine,\n    style,\n  }: {\n    mask: number;\n    domains: Domains | undefined;\n    rawLine: string | undefined;\n    selector: string;\n    style: string | undefined;\n  }) {\n    this.mask = mask;\n    this.selector = selector;\n    this.domains = domains;\n    this.style = style;\n\n    this.id = undefined;\n    this.rawLine = rawLine;\n  }\n\n  public isCosmeticFilter(): boolean {\n    return true;\n  }\n\n  public isNetworkFilter(): boolean {\n    return false;\n  }\n\n  /**\n   * The format of a cosmetic filter is:\n   *\n   * | mask | selector length | selector... | hostnames length | hostnames...\n   *   32     16                              16\n   *\n   * The header (mask) is 32 bits, then we have a total of 32 bits to store the\n   * length of `selector` and `hostnames` (16 bits each).\n   *\n   * Improvements similar to the onces mentioned in `serializeNetworkFilters`\n   * could be applied here, to get a more compact representation.\n   */\n  public serialize(buffer: StaticDataView): void {\n    // Mandatory fields\n    buffer.pushUint8(this.mask);\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    if (this.isUnicode()) {\n      buffer.pushUTF8(this.selector);\n    } else {\n      buffer.pushCosmeticSelector(this.selector);\n    }\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.domains !== undefined) {\n      optionalParts |= 1;\n      this.domains.serialize(buffer);\n    }\n\n    if (this.rawLine !== undefined) {\n      optionalParts |= 2;\n      buffer.pushRawCosmetic(this.rawLine);\n    }\n\n    if (this.style !== undefined) {\n      optionalParts |= 4;\n      buffer.pushASCII(this.style);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  /**\n   * Return an estimation of the size (in bytes) needed to persist this filter\n   * in a DataView. This does not need to be 100% accurate but should be an\n   * upper-bound. It should also be as fast as possible.\n   */\n  public getSerializedSize(compression: boolean): number {\n    let estimate: number = 1 + 1; // mask (1 byte) + optional parts (1 byte)\n\n    if (this.isUnicode()) {\n      estimate += sizeOfUTF8(this.selector);\n    } else {\n      estimate += sizeOfCosmeticSelector(this.selector, compression);\n    }\n\n    if (this.domains !== undefined) {\n      estimate += this.domains.getSerializedSize();\n    }\n\n    if (this.rawLine !== undefined) {\n      estimate += sizeOfRawCosmetic(this.rawLine, compression);\n    }\n\n    if (this.style !== undefined) {\n      estimate += sizeOfASCII(this.style);\n    }\n\n    return estimate;\n  }\n\n  /**\n   * Create a more human-readable version of this filter. It is mainly used for\n   * debugging purpose, as it will expand the values stored in the bit mask.\n   */\n  public toString(): string {\n    if (this.rawLine !== undefined) {\n      return this.rawLine;\n    }\n\n    let filter = '';\n\n    if (this.domains !== undefined) {\n      filter += '<hostnames>';\n    }\n\n    if (this.isUnhide()) {\n      filter += '#@#';\n    } else {\n      filter += '##';\n    }\n\n    if (this.isScriptInject()) {\n      filter += '+js(';\n      filter += this.selector;\n      filter += ')';\n    } else {\n      filter += this.selector;\n    }\n\n    return filter;\n  }\n\n  public match(hostname: string, domain: string): boolean {\n    // Not constraint on hostname, match is true\n    if (this.hasHostnameConstraint() === false) {\n      return true;\n    }\n\n    // No `hostname` available but this filter has some constraints on hostname.\n    if (!hostname && this.hasHostnameConstraint()) {\n      return false;\n    }\n\n    if (this.domains !== undefined) {\n      // TODO - this hashing could be re-used between cosmetics by using an\n      // abstraction like `Request` (similar to network filters matching).\n      // Maybe could we reuse `Request` directly without any change?\n      return this.domains.match(\n        hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getHostnameHashesFromLabelsBackward(hostname, domain),\n        hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getEntityHashesFromLabelsBackward(hostname, domain),\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * Get tokens for this filter. It can be indexed multiple times if multiple\n   * hostnames are specified (e.g.: host1,host2##.selector).\n   */\n  public getTokens(): Uint32Array[] {\n    const tokens: Uint32Array[] = [];\n\n    // Note, we do not need to use negated domains or entities as tokens here\n    // since they will by definition not match on their own, unless accompanied\n    // by a domain or entity. Instead, they are handled in\n    // `CosmeticFilterBucket.getCosmeticsFilters(...)`.\n\n    if (this.domains !== undefined) {\n      const { hostnames, entities } = this.domains;\n\n      if (hostnames !== undefined) {\n        for (const hostname of hostnames) {\n          tokens.push(new Uint32Array([hostname]));\n        }\n      }\n\n      if (entities !== undefined) {\n        for (const entity of entities) {\n          tokens.push(new Uint32Array([entity]));\n        }\n      }\n    }\n\n    // Here we only take selector into account if the filter is not unHide.\n    if (tokens.length === 0 && this.isUnhide() === false) {\n      if (this.isIdSelector() || this.isClassSelector()) {\n        // Here we try to identify the end of selector si that we can extract a\n        // valid token out of it. In all these examples, 'selector' is our\n        // token:\n        //\n        //   .selector[...]\n        //   #selector[...]\n        //   #selector ~ foo\n        //   .selector:not(...)\n        //   .selector.foo\n        //\n        // We now try to identify the first valid end of selector which will\n        // also be the end of our token: space, bracket, colon, dot.\n        let endOfSelector = 1;\n        const selector = this.selector;\n        for (; endOfSelector < selector.length; endOfSelector += 1) {\n          const code = selector.charCodeAt(endOfSelector);\n          if (\n            code === 32 /* ' ' */ ||\n            code === 46 /* '.' */ ||\n            code === 58 /* ':' */ ||\n            code === 91 /* '[' */\n          ) {\n            break;\n          }\n        }\n\n        const arr = new Uint32Array(1);\n        arr[0] = fastHashBetween(selector, 1, endOfSelector);\n        tokens.push(arr);\n      } else if (this.isHrefSelector() === true) {\n        const selector: string = this.getSelector();\n\n        // Locate 'href' in selector\n        let hrefIndex = selector.indexOf('href');\n        if (hrefIndex === -1) {\n          return EMPTY_TOKENS;\n        }\n        hrefIndex += 4;\n\n        // Tokenize optimally depending on the kind of selector: 'href=',\n        // 'href*=', 'href^='.\n        let skipFirstToken: boolean = false;\n        let skipLastToken: boolean = true;\n        if (selector.charCodeAt(hrefIndex) === 42 /* '*' */) {\n          // skip: '*'\n          skipFirstToken = true;\n          hrefIndex += 1;\n        } else if (selector.charCodeAt(hrefIndex) === 94 /* '^' */) {\n          // skip: '^'\n          hrefIndex += 1;\n        } else {\n          skipLastToken = false;\n        }\n\n        hrefIndex += 2; // skip:  '=\"'\n\n        // Locate end of href\n        const hrefEnd = selector.indexOf('\"', hrefIndex);\n        if (hrefEnd === -1) {\n          // That cannot happen unless the filter is not well-formed. In this\n          // case, we just return no tokens, which will result in this filter\n          // ending up in the \"wildcard\" bucket of the index.\n          return EMPTY_TOKENS;\n        }\n\n        tokens.push(\n          tokenize(this.selector.slice(hrefIndex, hrefEnd), skipFirstToken, skipLastToken),\n        );\n      }\n    }\n\n    if (tokens.length === 0) {\n      return EMPTY_TOKENS;\n    }\n\n    return tokens;\n  }\n\n  public getScript(js: Map<string, string>): string | undefined {\n    let scriptName = this.getSelector();\n    let scriptArguments: string[] = [];\n    if (scriptName.indexOf(',') !== -1) {\n      const parts = scriptName.split(',');\n      if (parts.length === 0) {\n        return undefined;\n      }\n\n      const firstPart = parts[0];\n      if (firstPart === undefined) {\n        return undefined;\n      }\n\n      scriptName = firstPart;\n      scriptArguments = parts.slice(1).map((s) => s.trim());\n    }\n\n    let script = js.get(scriptName);\n    if (script !== undefined) {\n      for (let i = 0; i < scriptArguments.length; i += 1) {\n        script = script.replace(`{{${i + 1}}}`, scriptArguments[i]);\n      }\n\n      return script;\n    } // TODO - else throw an exception?\n\n    return undefined;\n  }\n\n  public hasHostnameConstraint(): boolean {\n    return this.domains !== undefined;\n  }\n\n  public getId(): number {\n    if (this.id === undefined) {\n      this.id = computeFilterId(this.mask, this.selector, this.domains, this.style);\n    }\n    return this.id;\n  }\n\n  public hasCustomStyle(): boolean {\n    return this.style !== undefined;\n  }\n\n  public getStyle(): string {\n    return this.style || DEFAULT_HIDDING_STYLE;\n  }\n\n  public getStyleAttributeHash(): string {\n    return `s${fastHash(this.getStyle())}`;\n  }\n\n  public getSelector(): string {\n    return this.selector;\n  }\n\n  public getSelectorAST(): AST | undefined {\n    return parseCssSelector(this.getSelector());\n  }\n\n  public getExtendedSelector(): HTMLSelector | undefined {\n    return extractHTMLSelectorFromRule(this.selector);\n  }\n\n  public isExtended(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.extended);\n  }\n\n  public isRemove(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.remove);\n  }\n\n  public isUnhide(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.unhide);\n  }\n\n  public isScriptInject(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.scriptInject);\n  }\n\n  public isCSS(): boolean {\n    return this.isScriptInject() === false;\n  }\n\n  public isIdSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isIdSelector);\n  }\n\n  public isClassSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isClassSelector);\n  }\n\n  public isHrefSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isHrefSelector);\n  }\n\n  public isUnicode(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isUnicode);\n  }\n\n  public isHtmlFiltering(): boolean {\n    return this.getSelector().startsWith('^');\n  }\n\n  // A generic hide cosmetic filter is one that:\n  //\n  // * Do not have a domain specified. \"Hide this element on all domains\"\n  // * Have only domain exceptions specified. \"Hide this element on all domains except example.com\"\n  //\n  // For example: ~example.com##.ad  is a generic filter as well!\n  public isGenericHide(): boolean {\n    return this?.domains?.hostnames === undefined && this?.domains?.entities === undefined;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { Domains } from '../engine/domains';\nimport {\n  StaticDataView,\n  sizeOfNetworkCSP,\n  sizeOfNetworkFilter,\n  sizeOfNetworkHostname,\n  sizeOfNetworkRedirect,\n  sizeOfUTF8,\n  sizeOfRawNetwork,\n} from '../data-view';\nimport { toASCII } from '../punycode';\nimport Request, { RequestType, NORMALIZED_TYPE_TOKEN } from '../request';\nimport { TOKENS_BUFFER } from '../tokens-buffer';\nimport {\n  bitCount,\n  clearBit,\n  fastHash,\n  fastStartsWith,\n  fastStartsWithFrom,\n  getBit,\n  hasUnicode,\n  isAlpha,\n  isDigit,\n  setBit,\n  tokenizeInPlace,\n  tokenizeRegexInPlace,\n  tokenizeWithWildcardsInPlace,\n} from '../utils';\nimport IFilter from './interface';\n\nconst HTTP_HASH = fastHash('http');\nconst HTTPS_HASH = fastHash('https');\n\nfunction isAllowedHostname(ch: number): boolean {\n  return (\n    isDigit(ch) || isAlpha(ch) || ch === 95 /* '_' */ || ch === 45 /* '-' */ || ch === 46 /* '.' */\n  );\n}\n\nconst NORMALIZE_OPTIONS: { [option: string]: string } = {\n  'document': 'doc',\n  'first-party': '1p',\n  'generichide': 'ghide',\n  'object-subrequest': 'object',\n  'stylesheet': 'css',\n  'subdocument': 'frame',\n  'third-party': '3p',\n  'xmlhttprequest': 'xhr',\n  '~first-party': '3p',\n  '~third-party': '1p',\n  'all': '',\n};\n\n/**\n * Normalize a raw filter by replacing options with their canonical forms. For\n * example `||foo.com$stylesheet,first-party,xhr` would be normalized to\n * `||foo.com$css,1p,xhr`.\n */\nconst REGEX = /all|~third-party|~first-party|third-party|first-party|object-subrequest|stylesheet|subdocument|xmlhttprequest|document|generichide/g;\nexport function normalizeRawFilterOptions(rawFilter: string): string {\n  rawFilter = rawFilter.toLowerCase();\n\n  let indexOfOptions = rawFilter.lastIndexOf('$');\n  if (indexOfOptions === -1) {\n    return rawFilter;\n  }\n\n  // Remove trailing '*' if possible\n  if (indexOfOptions !== 0 && rawFilter[indexOfOptions - 1] === '*') {\n    rawFilter = rawFilter.slice(0, indexOfOptions - 1) + rawFilter.slice(indexOfOptions);\n    indexOfOptions -= 1;\n  }\n\n  // Normalize options\n  const options = rawFilter.slice(indexOfOptions + 1);\n  const normalizedOptions = options\n    .replace(REGEX, (option) => {\n      const normalized = NORMALIZE_OPTIONS[option];\n      if (normalized === undefined) {\n        return option;\n      }\n      return normalized;\n    })\n    .split(',')\n    .sort()\n    .join(',');\n\n  if (options === normalizedOptions) {\n    return rawFilter;\n  }\n\n  if (normalizedOptions === '') {\n    return rawFilter.slice(0, indexOfOptions);\n  }\n\n  return `${rawFilter.slice(0, indexOfOptions)}$${normalizedOptions}`;\n}\n\n/**\n * Masks used to store options of network filters in a bitmask.\n */\nexport const enum NETWORK_FILTER_MASK {\n  // Request Type\n  fromDocument = 1 << 0,\n  fromFont = 1 << 1,\n  fromHttp = 1 << 2,\n  fromHttps = 1 << 3,\n  fromImage = 1 << 4,\n  fromMedia = 1 << 5,\n  fromObject = 1 << 6,\n  fromOther = 1 << 7,\n  fromPing = 1 << 8,\n  fromScript = 1 << 9,\n  fromStylesheet = 1 << 10,\n  fromSubdocument = 1 << 11,\n  fromWebsocket = 1 << 12, // e.g.: ws, wss\n  fromXmlHttpRequest = 1 << 13,\n\n  // Partiness\n  firstParty = 1 << 14,\n  thirdParty = 1 << 15,\n\n  // Options\n  // FREE - 1 << 16\n  isBadFilter = 1 << 17,\n  isCSP = 1 << 18,\n  isGenericHide = 1 << 19,\n  isImportant = 1 << 20,\n  isSpecificHide = 1 << 21,\n\n  // Kind of patterns\n  isFullRegex = 1 << 22,\n  isRegex = 1 << 23,\n  isUnicode = 1 << 24,\n  isLeftAnchor = 1 << 25,\n  isRightAnchor = 1 << 26,\n  isException = 1 << 27,\n  isHostnameAnchor = 1 << 28,\n  isRedirectRule = 1 << 29,\n}\n\n/**\n * Mask used when a network filter can be applied on any content type.\n */\nconst FROM_ANY: number =\n  NETWORK_FILTER_MASK.fromDocument |\n  NETWORK_FILTER_MASK.fromFont |\n  NETWORK_FILTER_MASK.fromImage |\n  NETWORK_FILTER_MASK.fromMedia |\n  NETWORK_FILTER_MASK.fromObject |\n  NETWORK_FILTER_MASK.fromOther |\n  NETWORK_FILTER_MASK.fromPing |\n  NETWORK_FILTER_MASK.fromScript |\n  NETWORK_FILTER_MASK.fromStylesheet |\n  NETWORK_FILTER_MASK.fromSubdocument |\n  NETWORK_FILTER_MASK.fromWebsocket |\n  NETWORK_FILTER_MASK.fromXmlHttpRequest;\n\n/**\n * Map content type value to mask the corresponding mask.\n * ref: https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIContentPolicy\n */\nconst REQUEST_TYPE_TO_MASK: { [s in RequestType]: number | undefined } = {\n  beacon: NETWORK_FILTER_MASK.fromPing, // fromOther?\n  document: NETWORK_FILTER_MASK.fromDocument,\n  cspviolationreport: NETWORK_FILTER_MASK.fromOther,\n  fetch: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n  font: NETWORK_FILTER_MASK.fromFont,\n  image: NETWORK_FILTER_MASK.fromImage,\n  imageset: NETWORK_FILTER_MASK.fromImage,\n  mainFrame: NETWORK_FILTER_MASK.fromDocument,\n  main_frame: NETWORK_FILTER_MASK.fromDocument,\n  media: NETWORK_FILTER_MASK.fromMedia,\n  object: NETWORK_FILTER_MASK.fromObject,\n  object_subrequest: NETWORK_FILTER_MASK.fromObject,\n  ping: NETWORK_FILTER_MASK.fromPing, // fromOther?\n  script: NETWORK_FILTER_MASK.fromScript,\n  stylesheet: NETWORK_FILTER_MASK.fromStylesheet,\n  subFrame: NETWORK_FILTER_MASK.fromSubdocument,\n  sub_frame: NETWORK_FILTER_MASK.fromSubdocument,\n  websocket: NETWORK_FILTER_MASK.fromWebsocket,\n  xhr: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n  xmlhttprequest: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n\n  // Other\n  csp_report: NETWORK_FILTER_MASK.fromOther,\n  eventsource: NETWORK_FILTER_MASK.fromOther,\n  manifest: NETWORK_FILTER_MASK.fromOther,\n  other: NETWORK_FILTER_MASK.fromOther,\n  preflight: NETWORK_FILTER_MASK.fromOther,\n  signedexchange: NETWORK_FILTER_MASK.fromOther,\n  speculative: NETWORK_FILTER_MASK.fromOther,\n  texttrack: NETWORK_FILTER_MASK.fromOther,\n  web_manifest: NETWORK_FILTER_MASK.fromOther,\n  xml_dtd: NETWORK_FILTER_MASK.fromOther,\n  xslt: NETWORK_FILTER_MASK.fromOther,\n};\n\nfunction getListOfRequestTypesNegated(filter: NetworkFilter): RequestType[] {\n  const types: RequestType[] = [];\n\n  if (filter.fromDocument() === false) {\n    types.push('document');\n  }\n\n  if (filter.fromImage() === false) {\n    types.push('image');\n  }\n\n  if (filter.fromMedia() === false) {\n    types.push('media');\n  }\n\n  if (filter.fromObject() === false) {\n    types.push('object');\n  }\n\n  if (filter.fromOther() === false) {\n    types.push('other');\n  }\n\n  if (filter.fromPing() === false) {\n    types.push('ping');\n  }\n\n  if (filter.fromScript() === false) {\n    types.push('script');\n  }\n\n  if (filter.fromStylesheet() === false) {\n    types.push('stylesheet');\n  }\n\n  if (filter.fromSubdocument() === false) {\n    types.push('sub_frame');\n  }\n\n  if (filter.fromWebsocket() === false) {\n    types.push('websocket');\n  }\n\n  if (filter.fromXmlHttpRequest() === false) {\n    types.push('xhr');\n  }\n\n  if (filter.fromFont() === false) {\n    types.push('font');\n  }\n\n  return types;\n}\n\nfunction getListOfRequestTypes(filter: NetworkFilter): RequestType[] {\n  const types: RequestType[] = [];\n\n  if (filter.fromDocument()) {\n    types.push('document');\n  }\n\n  if (filter.fromImage()) {\n    types.push('image');\n  }\n\n  if (filter.fromMedia()) {\n    types.push('media');\n  }\n\n  if (filter.fromObject()) {\n    types.push('object');\n  }\n\n  if (filter.fromOther()) {\n    types.push('other');\n  }\n\n  if (filter.fromPing()) {\n    types.push('ping');\n  }\n\n  if (filter.fromScript()) {\n    types.push('script');\n  }\n\n  if (filter.fromStylesheet()) {\n    types.push('stylesheet');\n  }\n\n  if (filter.fromSubdocument()) {\n    types.push('sub_frame');\n  }\n\n  if (filter.fromWebsocket()) {\n    types.push('websocket');\n  }\n\n  if (filter.fromXmlHttpRequest()) {\n    types.push('xhr');\n  }\n\n  if (filter.fromFont()) {\n    types.push('font');\n  }\n\n  return types;\n}\n\nfunction computeFilterId(\n  csp: string | undefined,\n  mask: number,\n  filter: string | undefined,\n  hostname: string | undefined,\n  domains: Domains | undefined,\n  denyallow: Domains | undefined,\n  redirect: string | undefined,\n): number {\n  let hash = (7907 * 33) ^ mask;\n\n  if (csp !== undefined) {\n    for (let i = 0; i < csp.length; i += 1) {\n      hash = (hash * 33) ^ csp.charCodeAt(i);\n    }\n  }\n\n  if (domains !== undefined) {\n    hash = domains.updateId(hash);\n  }\n\n  if (denyallow !== undefined) {\n    hash = denyallow.updateId(hash);\n  }\n\n  if (filter !== undefined) {\n    for (let i = 0; i < filter.length; i += 1) {\n      hash = (hash * 33) ^ filter.charCodeAt(i);\n    }\n  }\n\n  if (hostname !== undefined) {\n    for (let i = 0; i < hostname.length; i += 1) {\n      hash = (hash * 33) ^ hostname.charCodeAt(i);\n    }\n  }\n\n  if (redirect !== undefined) {\n    for (let i = 0; i < redirect.length; i += 1) {\n      hash = (hash * 33) ^ redirect.charCodeAt(i);\n    }\n  }\n\n  return hash >>> 0;\n}\n\n/**\n * Compiles a filter pattern to a regex. This is only performed *lazily* for\n * filters containing at least a * or ^ symbol. Because Regexes are expansive,\n * we try to convert some patterns to plain filters.\n */\nfunction compileRegex(\n  filter: string,\n  isLeftAnchor: boolean,\n  isRightAnchor: boolean,\n  isFullRegex: boolean,\n): RegExp {\n  if (isFullRegex === true) {\n    return new RegExp(filter.slice(1, filter.length - 1), 'i');\n  }\n\n  // Escape special regex characters: |.$+?{}()[]\\\n  filter = filter.replace(/([|.$+?{}()[\\]\\\\])/g, '\\\\$1');\n\n  // * can match anything\n  filter = filter.replace(/\\*/g, '.*');\n\n  // ^ can match any separator or the end of the pattern\n  filter = filter.replace(/\\^/g, '(?:[^\\\\w\\\\d_.%-]|$)');\n\n  // Should match end of url\n  if (isRightAnchor) {\n    filter = `${filter}$`;\n  }\n\n  if (isLeftAnchor) {\n    filter = `^${filter}`;\n  }\n\n  return new RegExp(filter);\n}\n\nconst MATCH_ALL = new RegExp('');\n\nexport default class NetworkFilter implements IFilter {\n  public static parse(line: string, debug: boolean = false): NetworkFilter | null {\n    // Represent options as a bitmask\n    let mask: number =\n      NETWORK_FILTER_MASK.thirdParty |\n      NETWORK_FILTER_MASK.firstParty |\n      NETWORK_FILTER_MASK.fromHttps |\n      NETWORK_FILTER_MASK.fromHttp;\n\n    // Temporary masks for positive (e.g.: $script) and negative (e.g.: $~script)\n    // content type options.\n    let cptMaskPositive: number = 0;\n    let cptMaskNegative: number = FROM_ANY;\n\n    let hostname: string | undefined;\n    let domains: Domains | undefined;\n    let denyallow: Domains | undefined;\n    let redirect: string | undefined;\n    let csp: string | undefined;\n\n    // Start parsing\n    let filterIndexStart: number = 0;\n    let filterIndexEnd: number = line.length;\n\n    // @@filter == Exception\n    if (line.charCodeAt(0) === 64 /* '@' */ && line.charCodeAt(1) === 64 /* '@' */) {\n      filterIndexStart += 2;\n      mask = setBit(mask, NETWORK_FILTER_MASK.isException);\n    }\n\n    // filter$options == Options\n    // ^     ^\n    // |     |\n    // |     optionsIndex\n    // filterIndexStart\n    const optionsIndex: number = line.lastIndexOf('$');\n    if (optionsIndex !== -1 && line.charCodeAt(optionsIndex + 1) !== 47 /* '/' */) {\n      // Parse options and set flags\n      filterIndexEnd = optionsIndex;\n\n      // --------------------------------------------------------------------- //\n      // parseOptions\n      // --------------------------------------------------------------------- //\n      for (const rawOption of line.slice(optionsIndex + 1).split(',')) {\n        const negation = rawOption.charCodeAt(0) === 126; /* '~' */\n        let option = negation === true ? rawOption.slice(1) : rawOption;\n\n        // Check for options: option=value1|value2\n        let optionValue: string = '';\n        const indexOfEqual: number = option.indexOf('=');\n        if (indexOfEqual !== -1) {\n          optionValue = option.slice(indexOfEqual + 1);\n          option = option.slice(0, indexOfEqual);\n        }\n\n        switch (option) {\n          case 'denyallow': {\n            denyallow = Domains.parse(optionValue.split('|'));\n            break;\n          }\n          case 'domain': {\n            // domain list starting or ending with '|' is invalid\n            if (\n              optionValue.charCodeAt(0) === 124 /* '|' */ ||\n              optionValue.charCodeAt(optionValue.length - 1) === 124 /* '|' */\n            ) {\n              return null;\n            }\n\n            domains = Domains.parse(optionValue.split('|'));\n            break;\n          }\n          case 'badfilter':\n            mask = setBit(mask, NETWORK_FILTER_MASK.isBadFilter);\n            break;\n          case 'important':\n            // Note: `negation` should always be `false` here.\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isImportant);\n            break;\n          case 'match-case':\n            // Note: `negation` should always be `false` here.\n            if (negation) {\n              return null;\n            }\n\n            // We currently consider all filters to be case-insensitive.\n            break;\n          case '3p':\n          case 'third-party':\n            if (negation) {\n              // ~third-party means we should clear the flag\n              mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n            } else {\n              // third-party means ~first-party\n              mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n            }\n            break;\n          case '1p':\n          case 'first-party':\n            if (negation) {\n              // ~first-party means we should clear the flag\n              mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n            } else {\n              // first-party means ~third-party\n              mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n            }\n            break;\n          case 'redirect-rule':\n          case 'redirect':\n            // Negation of redirection doesn't make sense\n            if (negation) {\n              return null;\n            }\n\n            // Ignore this filter if no redirection resource is specified\n            if (optionValue.length === 0) {\n              return null;\n            }\n\n            if (option === 'redirect-rule') {\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRedirectRule);\n            }\n\n            redirect = optionValue;\n            break;\n          case 'csp':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            if (optionValue.length > 0) {\n              csp = optionValue;\n            }\n            break;\n          case 'ehide':\n          case 'elemhide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n            mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n            break;\n          case 'shide':\n          case 'specifichide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n            break;\n          case 'ghide':\n          case 'generichide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n            break;\n          case 'inline-script':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            csp =\n              \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n            break;\n          case 'inline-font':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            csp =\n              \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n            break;\n          default: {\n            // Handle content type options separatly\n            let optionMask: number = 0;\n            switch (option) {\n              case 'all':\n                if (negation) {\n                  return null;\n                }\n\n                // NOTE: Currently a filter cannot be both blocking and CSP, so\n                // we will have to create multiple filters to keep the semantics\n                // of 'all'.\n                // mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n                // csp = [\n                //   \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                //   \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                // ].join('; ');\n                break;\n              case 'image':\n                optionMask = NETWORK_FILTER_MASK.fromImage;\n                break;\n              case 'media':\n                optionMask = NETWORK_FILTER_MASK.fromMedia;\n                break;\n              case 'object':\n              case 'object-subrequest':\n                optionMask = NETWORK_FILTER_MASK.fromObject;\n                break;\n              case 'other':\n                optionMask = NETWORK_FILTER_MASK.fromOther;\n                break;\n              case 'ping':\n              case 'beacon':\n                optionMask = NETWORK_FILTER_MASK.fromPing;\n                break;\n              case 'script':\n                optionMask = NETWORK_FILTER_MASK.fromScript;\n                break;\n              case 'css':\n              case 'stylesheet':\n                optionMask = NETWORK_FILTER_MASK.fromStylesheet;\n                break;\n              case 'frame':\n              case 'subdocument':\n                optionMask = NETWORK_FILTER_MASK.fromSubdocument;\n                break;\n              case 'xhr':\n              case 'xmlhttprequest':\n                optionMask = NETWORK_FILTER_MASK.fromXmlHttpRequest;\n                break;\n              case 'websocket':\n                optionMask = NETWORK_FILTER_MASK.fromWebsocket;\n                break;\n              case 'font':\n                optionMask = NETWORK_FILTER_MASK.fromFont;\n                break;\n              case 'doc':\n              case 'document':\n                optionMask = NETWORK_FILTER_MASK.fromDocument;\n                break;\n              default:\n                // Disable this filter if we don't support all the options\n                return null;\n            }\n\n            // We got a valid cpt option, update mask\n            if (negation) {\n              cptMaskNegative = clearBit(cptMaskNegative, optionMask);\n            } else {\n              cptMaskPositive = setBit(cptMaskPositive, optionMask);\n            }\n            break;\n          }\n        }\n      }\n      // End of option parsing\n      // --------------------------------------------------------------------- //\n    }\n\n    if (cptMaskPositive === 0) {\n      mask |= cptMaskNegative;\n    } else if (cptMaskNegative === FROM_ANY) {\n      mask |= cptMaskPositive;\n    } else {\n      mask |= cptMaskPositive & cptMaskNegative;\n    }\n\n    // Identify kind of pattern\n    let filter: string | undefined;\n\n    // Detect Regexps (i.e.: /pattern/)\n    if (\n      filterIndexEnd - filterIndexStart >= 2 &&\n      line.charCodeAt(filterIndexStart) === 47 /* '/' */ &&\n      line.charCodeAt(filterIndexEnd - 1) === 47 /* '/' */\n    ) {\n      // Some extra ideas which could be applied to RegExp filters:\n      // * convert rules without any special RegExp syntax to plain patterns\n      // * remove extra `isFullRegex` flag since `isRegex` might be enough\n      // * apply some optimizations on the fly: /^https?:\\\\/\\\\/rest => isHttp + isHttps + rest\n      filter = line.slice(filterIndexStart, filterIndexEnd);\n\n      // Validate RegExp to make sure this rule is fine\n      try {\n        compileRegex(\n          filter,\n          false /* isLeftAnchor */,\n          false /* isRightAnchor */,\n          true /* isFullRegex */,\n        );\n      } catch (ex) {\n        return null; // invalid RegExp\n      }\n\n      mask = setBit(mask, NETWORK_FILTER_MASK.isFullRegex);\n    } else {\n      // Deal with hostname pattern\n      if (filterIndexEnd > 0 && line.charCodeAt(filterIndexEnd - 1) === 124 /* '|' */) {\n        mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n        filterIndexEnd -= 1;\n      }\n\n      if (\n        filterIndexStart < filterIndexEnd &&\n        line.charCodeAt(filterIndexStart) === 124 /* '|' */\n      ) {\n        if (\n          filterIndexStart < filterIndexEnd - 1 &&\n          line.charCodeAt(filterIndexStart + 1) === 124 /* '|' */\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n          filterIndexStart += 2;\n        } else {\n          mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart += 1;\n        }\n      }\n\n      // const isRegex = checkIsRegex(line, filterIndexStart, filterIndexEnd);\n      // mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isRegex, isRegex);\n\n      if (getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor)) {\n        // Split at the first character which is not allowed in a hostname\n        let firstSeparator = filterIndexStart;\n        while (\n          firstSeparator < filterIndexEnd &&\n          isAllowedHostname(line.charCodeAt(firstSeparator)) === true\n        ) {\n          firstSeparator += 1;\n        }\n\n        // No separator found so hostname has full length\n        if (firstSeparator === filterIndexEnd) {\n          hostname = line.slice(filterIndexStart, filterIndexEnd);\n          filterIndexStart = filterIndexEnd;\n          // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n        } else {\n          // Found a separator\n          hostname = line.slice(filterIndexStart, firstSeparator);\n          filterIndexStart = firstSeparator;\n          const separatorCode = line.charCodeAt(firstSeparator);\n\n          if (separatorCode === 94 /* '^' */) {\n            // If the only symbol remaining for the selector is '^' then ignore it\n            // but set the filter as right anchored since there should not be any\n            // other label on the right\n            if (filterIndexEnd - filterIndexStart === 1) {\n              filterIndexStart = filterIndexEnd;\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n            } else {\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n              mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n            }\n          } else if (separatorCode === 42 /* '*' */) {\n            mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n            // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          } else {\n            mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          }\n        }\n      }\n\n      // Remove trailing '*'\n      if (\n        filterIndexEnd - filterIndexStart > 0 &&\n        line.charCodeAt(filterIndexEnd - 1) === 42 /* '*' */\n      ) {\n        filterIndexEnd -= 1;\n      }\n\n      // Remove leading '*' if the filter is not hostname anchored.\n      if (\n        getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor) === false &&\n        filterIndexEnd - filterIndexStart > 0 &&\n        line.charCodeAt(filterIndexStart) === 42 /* '*' */\n      ) {\n        mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n        filterIndexStart += 1;\n      }\n\n      // Transform filters on protocol (http, https, ws)\n      if (getBit(mask, NETWORK_FILTER_MASK.isLeftAnchor)) {\n        if (\n          filterIndexEnd - filterIndexStart === 5 &&\n          fastStartsWithFrom(line, 'ws://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromWebsocket);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 7 &&\n          fastStartsWithFrom(line, 'http://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 8 &&\n          fastStartsWithFrom(line, 'https://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 8 &&\n          fastStartsWithFrom(line, 'http*://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        }\n      }\n\n      if (filterIndexEnd - filterIndexStart > 0) {\n        filter = line.slice(filterIndexStart, filterIndexEnd).toLowerCase();\n\n        mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, hasUnicode(filter));\n        if (getBit(mask, NETWORK_FILTER_MASK.isRegex) === false) {\n          mask = setNetworkMask(\n            mask,\n            NETWORK_FILTER_MASK.isRegex,\n            checkIsRegex(filter, 0, filter.length),\n          );\n        }\n      }\n\n      // TODO\n      // - ignore hostname anchor is not hostname provided\n\n      if (hostname !== undefined) {\n        hostname = hostname.toLowerCase();\n        if (hasUnicode(hostname)) {\n          mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, true);\n          hostname = toASCII(hostname);\n        }\n      }\n    }\n\n    return new NetworkFilter({\n      csp,\n      filter,\n      hostname,\n      mask,\n      domains,\n      denyallow,\n      rawLine: debug === true ? line : undefined,\n      redirect,\n      regex: undefined,\n    });\n  }\n\n  /**\n   * Deserialize network filters. The code accessing the buffer should be\n   * symetrical to the one in `serializeNetworkFilter`.\n   */\n  public static deserialize(buffer: StaticDataView): NetworkFilter {\n    const mask = buffer.getUint32();\n    const optionalParts = buffer.getUint8();\n    const isUnicode = getBit(mask, NETWORK_FILTER_MASK.isUnicode);\n\n    // The order of these statements is important. Since `buffer.getX()` will\n    // internally increment the position of next byte to read, they need to be\n    // retrieved in the exact same order they were serialized (check\n    // `serializeNetworkFilter`).\n    return new NetworkFilter({\n      // Mandatory field\n      mask,\n\n      // Optional parts\n      csp: (optionalParts & 1) === 1 ? buffer.getNetworkCSP() : undefined,\n      filter:\n        (optionalParts & 2) === 2\n          ? isUnicode\n            ? buffer.getUTF8()\n            : buffer.getNetworkFilter()\n          : undefined,\n      hostname: (optionalParts & 4) === 4 ? buffer.getNetworkHostname() : undefined,\n      domains: (optionalParts & 8) === 8 ? Domains.deserialize(buffer) : undefined,\n      rawLine: (optionalParts & 16) === 16 ? buffer.getRawNetwork() : undefined,\n      redirect: (optionalParts & 32) === 32 ? buffer.getNetworkRedirect() : undefined,\n      denyallow: (optionalParts & 64) === 64 ? Domains.deserialize(buffer) : undefined,\n      regex: undefined,\n    });\n  }\n\n  public readonly csp: string | undefined;\n  public readonly filter: string | undefined;\n  public readonly hostname: string | undefined;\n  public readonly mask: number;\n  public readonly domains: Domains | undefined;\n  public readonly denyallow: Domains | undefined;\n  public readonly redirect: string | undefined;\n\n  // Set only in debug mode\n  public readonly rawLine: string | undefined;\n\n  // Lazy attributes\n  public id: number | undefined;\n  public regex: RegExp | undefined;\n\n  constructor({\n    csp,\n    filter,\n    hostname,\n    mask,\n    domains,\n    denyallow,\n    rawLine,\n    redirect,\n    regex,\n  }: {\n    csp: string | undefined;\n    filter: string | undefined;\n    hostname: string | undefined;\n    mask: number;\n    domains: Domains | undefined;\n    denyallow: Domains | undefined;\n    rawLine: string | undefined;\n    redirect: string | undefined;\n    regex: RegExp | undefined;\n  }) {\n    this.csp = csp;\n    this.filter = filter;\n    this.hostname = hostname;\n    this.mask = mask;\n    this.domains = domains;\n    this.denyallow = denyallow;\n    this.redirect = redirect;\n\n    this.rawLine = rawLine;\n\n    this.id = undefined;\n    this.regex = regex;\n  }\n\n  public isCosmeticFilter() {\n    return false;\n  }\n  public isNetworkFilter() {\n    return true;\n  }\n\n  public match(request: Request): boolean {\n    return checkOptions(this, request) && checkPattern(this, request);\n  }\n\n  /**\n   * To allow for a more compact representation of network filters, the\n   * representation is composed of a mandatory header, and some optional\n   *\n   * Header:\n   * =======\n   *\n   *  | opt | mask\n   *     8     32\n   *\n   * For an empty filter having no pattern, hostname, the minimum size is: 42 bits.\n   *\n   * Then for each optional part (filter, hostname optDomains, optNotDomains,\n   * redirect), it takes 16 bits for the length of the string + the length of the\n   * string in bytes.\n   *\n   * The optional parts are written in order of there number of occurrence in the\n   * filter list used by the adblocker. The most common being `hostname`, then\n   * `filter`, `optDomains`, `optNotDomains`, `redirect`.\n   *\n   * Example:\n   * ========\n   *\n   * @@||cliqz.com would result in a serialized version:\n   *\n   * | 1 | mask | 9 | c | l | i | q | z | . | c | o | m  (16 bytes)\n   *\n   * In this case, the serialized version is actually bigger than the original\n   * filter, but faster to deserialize. In the future, we could optimize the\n   * representation to compact small filters better.\n   *\n   * Ideas:\n   *  * variable length encoding for the mask (if not option, take max 1 byte).\n   *  * first byte could contain the mask as well if small enough.\n   *  * when packing ascii string, store several of them in each byte.\n   */\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushUint32(this.mask);\n\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.csp !== undefined) {\n      optionalParts |= 1;\n      buffer.pushNetworkCSP(this.csp);\n    }\n\n    if (this.filter !== undefined) {\n      optionalParts |= 2;\n      if (this.isUnicode()) {\n        buffer.pushUTF8(this.filter);\n      } else {\n        buffer.pushNetworkFilter(this.filter);\n      }\n    }\n\n    if (this.hostname !== undefined) {\n      optionalParts |= 4;\n      buffer.pushNetworkHostname(this.hostname);\n    }\n\n    if (this.domains !== undefined) {\n      optionalParts |= 8;\n      this.domains.serialize(buffer);\n    }\n\n    if (this.rawLine !== undefined) {\n      optionalParts |= 16;\n      buffer.pushRawNetwork(this.rawLine);\n    }\n\n    if (this.redirect !== undefined) {\n      optionalParts |= 32;\n      buffer.pushNetworkRedirect(this.redirect);\n    }\n\n    if (this.denyallow !== undefined) {\n      optionalParts |= 64;\n      this.denyallow.serialize(buffer);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  public getSerializedSize(compression: boolean): number {\n    let estimate: number = 4 + 1; // mask = 4 bytes // optional parts = 1 byte\n\n    if (this.csp !== undefined) {\n      estimate += sizeOfNetworkCSP(this.csp, compression);\n    }\n\n    if (this.filter !== undefined) {\n      if (this.isUnicode() === true) {\n        estimate += sizeOfUTF8(this.filter);\n      } else {\n        estimate += sizeOfNetworkFilter(this.filter, compression);\n      }\n    }\n\n    if (this.hostname !== undefined) {\n      estimate += sizeOfNetworkHostname(this.hostname, compression);\n    }\n\n    if (this.domains !== undefined) {\n      estimate += this.domains.getSerializedSize();\n    }\n\n    if (this.rawLine !== undefined) {\n      estimate += sizeOfRawNetwork(this.rawLine, compression);\n    }\n\n    if (this.redirect !== undefined) {\n      estimate += sizeOfNetworkRedirect(this.redirect, compression);\n    }\n\n    if (this.denyallow !== undefined) {\n      estimate += this.denyallow.getSerializedSize();\n    }\n\n    return estimate;\n  }\n\n  /**\n   * Tries to recreate the original representation of the filter (adblock\n   * syntax) from the internal representation. If `rawLine` is set (when filters\n   * are parsed in `debug` mode for example), then it is returned directly.\n   * Otherwise, we try to stick as closely as possible to the original form;\n   * there are things which cannot be recovered though, like domains options\n   * of which only hashes are stored.\n   */\n  public toString() {\n    if (this.rawLine !== undefined) {\n      return this.rawLine;\n    }\n\n    let filter = '';\n\n    if (this.isException()) {\n      filter += '@@';\n    }\n\n    if (this.isHostnameAnchor()) {\n      filter += '||';\n    } else if (this.fromHttp() !== this.fromHttps()) {\n      if (this.fromHttp()) {\n        filter += '|http://';\n      } else {\n        filter += '|https://';\n      }\n    } else if (this.isLeftAnchor()) {\n      filter += '|';\n    }\n\n    if (this.hasHostname()) {\n      filter += this.getHostname();\n      filter += '^';\n    }\n\n    if (this.isFullRegex()) {\n      filter += `/${this.getRegex().source}/`;\n    } else if (this.isRegex()) {\n      filter += this.getRegex().source;\n    } else {\n      filter += this.getFilter();\n    }\n\n    if (this.isRightAnchor()) {\n      filter += '|';\n    }\n\n    // Options\n    const options: string[] = [];\n\n    if (this.fromAny() === false) {\n      const numberOfCptOptions = bitCount(this.getCptMask());\n      const numberOfNegatedOptions = bitCount(FROM_ANY) - numberOfCptOptions;\n\n      if (numberOfNegatedOptions < numberOfCptOptions) {\n        for (const type of getListOfRequestTypesNegated(this)) {\n          options.push(`~${type}`);\n        }\n      } else {\n        for (const type of getListOfRequestTypes(this)) {\n          options.push(type);\n        }\n      }\n    }\n\n    if (this.isImportant()) {\n      options.push('important');\n    }\n\n    if (this.isRedirectRule()) {\n      options.push(`redirect-rule=${this.getRedirect()}`);\n    } else if (this.isRedirect()) {\n      options.push(`redirect=${this.getRedirect()}`);\n    }\n\n    if (this.isCSP()) {\n      options.push(`csp=${this.csp}`);\n    }\n\n    if (this.isElemHide()) {\n      options.push('elemhide');\n    }\n\n    if (this.isSpecificHide()) {\n      options.push('specifichide');\n    }\n\n    if (this.isGenericHide()) {\n      options.push('generichide');\n    }\n\n    if (this.firstParty() !== this.thirdParty()) {\n      if (this.firstParty()) {\n        options.push('1p');\n      }\n      if (this.thirdParty()) {\n        options.push('3p');\n      }\n    }\n\n    if (this.domains !== undefined) {\n      options.push('domain=<hashed>');\n    }\n\n    if (this.denyallow !== undefined) {\n      options.push('denyallow=<hashed>');\n    }\n\n    if (this.isBadFilter()) {\n      options.push('badfilter');\n    }\n\n    if (options.length > 0) {\n      filter += `$${options.join(',')}`;\n    }\n\n    return filter;\n  }\n\n  // Public API (Read-Only)\n  public getIdWithoutBadFilter(): number {\n    // This method computes the id ignoring the $badfilter option (which will\n    // correspond to the ID of filters being discarded). This allows us to\n    // eliminate bad filters by comparing IDs, which is more robust and faster\n    // than string comparison.\n    return computeFilterId(\n      this.csp,\n      this.mask & ~NETWORK_FILTER_MASK.isBadFilter,\n      this.filter,\n      this.hostname,\n      this.domains,\n      this.denyallow,\n      this.redirect,\n    );\n  }\n\n  public getId(): number {\n    if (this.id === undefined) {\n      this.id = computeFilterId(\n        this.csp,\n        this.mask,\n        this.filter,\n        this.hostname,\n        this.domains,\n        this.denyallow,\n        this.redirect,\n      );\n    }\n    return this.id;\n  }\n\n  public hasFilter(): boolean {\n    return this.filter !== undefined;\n  }\n\n  public hasDomains(): boolean {\n    return this.domains !== undefined;\n  }\n\n  public getMask(): number {\n    return this.mask;\n  }\n\n  public getCptMask(): number {\n    return this.getMask() & FROM_ANY;\n  }\n\n  public isRedirect(): boolean {\n    return this.redirect !== undefined;\n  }\n\n  public isRedirectRule(): boolean {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isRedirectRule);\n  }\n\n  public getRedirect(): string {\n    return this.redirect || '';\n  }\n\n  public hasHostname(): boolean {\n    return this.hostname !== undefined;\n  }\n\n  public getHostname(): string {\n    return this.hostname || '';\n  }\n\n  public getFilter(): string {\n    return this.filter || '';\n  }\n\n  public getRegex(): RegExp {\n    if (this.regex === undefined) {\n      this.regex =\n        this.filter !== undefined && this.isRegex()\n          ? compileRegex(\n              this.filter,\n              this.isLeftAnchor(),\n              this.isRightAnchor(),\n              this.isFullRegex(),\n            )\n          : MATCH_ALL;\n    }\n\n    return this.regex;\n  }\n\n  public getTokens(): Uint32Array[] {\n    TOKENS_BUFFER.reset();\n\n    // If there is only one domain and no domain negation, we also use this\n    // domain as a token.\n    if (\n      this.domains !== undefined &&\n      this.domains.hostnames !== undefined &&\n      this.domains.entities === undefined &&\n      this.domains.notHostnames === undefined &&\n      this.domains.notEntities === undefined &&\n      this.domains.hostnames.length === 1\n    ) {\n      TOKENS_BUFFER.push(this.domains.hostnames[0]);\n    }\n\n    // Get tokens from filter\n    if (this.isFullRegex() === false) {\n      if (this.filter !== undefined) {\n        const skipLastToken = this.isPlain() && !this.isRightAnchor();\n        const skipFirstToken = !this.isLeftAnchor();\n        tokenizeWithWildcardsInPlace(this.filter, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n      }\n\n      // Append tokens from hostname, if any\n      if (this.hostname !== undefined) {\n        tokenizeInPlace(\n          this.hostname,\n          false,\n          this.filter !== undefined && this.filter.charCodeAt(0) === 42 /* '*' */,\n          TOKENS_BUFFER,\n        );\n      }\n    } else if (this.filter !== undefined) {\n      tokenizeRegexInPlace(this.filter, TOKENS_BUFFER);\n    }\n\n    // If we got no tokens for the filter/hostname part, then we will dispatch\n    // this filter in multiple buckets based on the domains option.\n    if (\n      TOKENS_BUFFER.empty() === true &&\n      this.domains !== undefined &&\n      this.domains.hostnames !== undefined &&\n      this.domains.entities === undefined &&\n      this.domains.notHostnames === undefined &&\n      this.domains.notEntities === undefined\n    ) {\n      const result: Uint32Array[] = [];\n      for (const hostname of this.domains.hostnames) {\n        const arr = new Uint32Array(1);\n        arr[0] = hostname;\n        result.push(arr);\n      }\n      return result;\n    }\n\n    // Add optional token for types\n    if (TOKENS_BUFFER.empty() === true && this.fromAny() === false) {\n      const types = getListOfRequestTypes(this);\n      if (types.length !== 0) {\n        const result: Uint32Array[] = [];\n        for (const type of types) {\n          const arr = new Uint32Array(1);\n          arr[0] = NORMALIZED_TYPE_TOKEN[type];\n          result.push(arr);\n        }\n        return result;\n      }\n    }\n\n    // Add optional token for protocol\n    if (this.fromHttp() === true && this.fromHttps() === false) {\n      TOKENS_BUFFER.push(HTTP_HASH);\n    } else if (this.fromHttps() === true && this.fromHttp() === false) {\n      TOKENS_BUFFER.push(HTTPS_HASH);\n    }\n\n    return [TOKENS_BUFFER.slice()];\n  }\n\n  /**\n   * Check if this filter should apply to a request with this content type.\n   */\n  public isCptAllowed(cpt: RequestType): boolean {\n    const mask: number | undefined = REQUEST_TYPE_TO_MASK[cpt];\n    if (mask !== undefined) {\n      return getBit(this.mask, mask);\n    }\n\n    // If content type is not supported (or not specified), we return `true`\n    // only if the filter does not specify any resource type.\n    return this.fromAny();\n  }\n\n  public isException() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isException);\n  }\n\n  public isHostnameAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n  }\n\n  public isRightAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isRightAnchor);\n  }\n\n  public isLeftAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isLeftAnchor);\n  }\n\n  public isImportant() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isImportant);\n  }\n\n  public isFullRegex(): boolean {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex);\n  }\n\n  public isRegex() {\n    return (\n      getBit(this.mask, NETWORK_FILTER_MASK.isRegex) ||\n      getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex)\n    );\n  }\n\n  public isPlain() {\n    return !this.isRegex();\n  }\n\n  public isCSP() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isCSP);\n  }\n\n  public isElemHide() {\n    return this.isSpecificHide() && this.isGenericHide();\n  }\n\n  public isSpecificHide() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isSpecificHide);\n  }\n\n  public isGenericHide() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isGenericHide);\n  }\n\n  public isBadFilter() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isBadFilter);\n  }\n\n  public isUnicode() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isUnicode);\n  }\n\n  public fromAny() {\n    return this.getCptMask() === FROM_ANY;\n  }\n\n  public thirdParty() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.thirdParty);\n  }\n\n  public firstParty() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.firstParty);\n  }\n\n  public fromImage() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromImage);\n  }\n\n  public fromMedia() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromMedia);\n  }\n\n  public fromObject() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromObject);\n  }\n\n  public fromOther() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromOther);\n  }\n\n  public fromPing() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromPing);\n  }\n\n  public fromScript() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromScript);\n  }\n\n  public fromStylesheet() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromStylesheet);\n  }\n\n  public fromDocument() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromDocument);\n  }\n\n  public fromSubdocument() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromSubdocument);\n  }\n\n  public fromWebsocket() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromWebsocket);\n  }\n\n  public fromHttp() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromHttp);\n  }\n\n  public fromHttps() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromHttps);\n  }\n\n  public fromXmlHttpRequest() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromXmlHttpRequest);\n  }\n\n  public fromFont() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromFont);\n  }\n}\n\n// ---------------------------------------------------------------------------\n// Filter parsing\n// ---------------------------------------------------------------------------\n\nfunction setNetworkMask(mask: number, m: number, value: boolean): number {\n  if (value === true) {\n    return setBit(mask, m);\n  }\n\n  return clearBit(mask, m);\n}\n\n/**\n * Check if the sub-string contained between the indices start and end is a\n * regex filter (it contains a '*' or '^' char).\n */\nfunction checkIsRegex(filter: string, start: number, end: number): boolean {\n  const indexOfSeparator = filter.indexOf('^', start);\n  if (indexOfSeparator !== -1 && indexOfSeparator < end) {\n    return true;\n  }\n\n  const indexOfWildcard = filter.indexOf('*', start);\n  return indexOfWildcard !== -1 && indexOfWildcard < end;\n}\n\n/**\n * Handle hostname anchored filters, given 'hostname' from ||hostname and\n * request's hostname, check if there is a match. This is tricky because\n * filters authors rely and different assumptions. We can have prefix of suffix\n * matches of anchor.\n */\nexport function isAnchoredByHostname(\n  filterHostname: string,\n  hostname: string,\n  isFollowedByWildcard: boolean,\n): boolean {\n  // Corner-case, if `filterHostname` is empty, then it's a match\n  if (filterHostname.length === 0) {\n    return true;\n  }\n\n  // `filterHostname` cannot be longer than actual hostname\n  if (filterHostname.length > hostname.length) {\n    return false;\n  }\n\n  // If they have the same length, they should be equal\n  if (filterHostname.length === hostname.length) {\n    return filterHostname === hostname;\n  }\n\n  // Check if `filterHostname` appears anywhere in `hostname`\n  const matchIndex = hostname.indexOf(filterHostname);\n\n  // No match\n  if (matchIndex === -1) {\n    return false;\n  }\n\n  // `filterHostname` is a prefix of `hostname` and needs to match full a label.\n  //\n  // Examples (filterHostname, hostname):\n  //   * (foo, foo.com)\n  //   * (sub.foo, sub.foo.com)\n  if (matchIndex === 0) {\n    return (\n      isFollowedByWildcard === true ||\n      hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(filterHostname.length - 1) === 46 /* '.' */\n    );\n  }\n\n  // `filterHostname` is a suffix of `hostname`.\n  //\n  // Examples (filterHostname, hostname):\n  //    * (foo.com, sub.foo.com)\n  //    * (com, foo.com)\n  if (hostname.length === matchIndex + filterHostname.length) {\n    return (\n      hostname.charCodeAt(matchIndex - 1) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(0) === 46 /* '.' */\n    );\n  }\n\n  // `filterHostname` is infix of `hostname` and needs match full labels\n  return (\n    (isFollowedByWildcard === true ||\n      hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(filterHostname.length - 1) === 46) /* '.' */ &&\n    (hostname.charCodeAt(matchIndex - 1) === 46 || filterHostname.charCodeAt(0) === 46)\n  );\n}\n\n/**\n * Specialize a network filter depending on its type. It allows for more\n * efficient matching function.\n */\nfunction checkPattern(filter: NetworkFilter, request: Request): boolean {\n  const pattern = filter.getFilter();\n\n  if (filter.isHostnameAnchor() === true) {\n    // Make sure request is anchored by hostname before proceeding to matching\n    const filterHostname = filter.getHostname();\n    if (\n      isAnchoredByHostname(\n        filterHostname,\n        request.hostname,\n        filter.filter !== undefined && filter.filter.charCodeAt(0) === 42 /* '*' */,\n      ) === false\n    ) {\n      return false;\n    }\n\n    // At this point we know request is hostname anchored so we match the rest of the filter.\n    if (filter.isRegex()) {\n      // ||pattern*^\n      return filter\n        .getRegex()\n        .test(request.url.slice(request.url.indexOf(filterHostname) + filterHostname.length));\n    } else if (filter.isRightAnchor() && filter.isLeftAnchor()) {\n      // |||pattern|\n      // Since this is not a regex, the filter pattern must follow the hostname\n      // with nothing in between. So we extract the part of the URL following\n      // after hostname and will perform the matching on it.\n      const urlAfterHostname = request.url.slice(\n        request.url.indexOf(filterHostname) + filterHostname.length,\n      );\n\n      // Since it must follow immediatly after the hostname and be a suffix of\n      // the URL, we conclude that filter must be equal to the part of the\n      // url following the hostname.\n      return pattern === urlAfterHostname;\n    } else if (filter.isRightAnchor()) {\n      // ||pattern|\n      const requestHostname = request.hostname;\n      if (filter.hasFilter() === false) {\n        // In this specific case it means that the specified hostname should match\n        // at the end of the hostname of the request. This allows to prevent false\n        // positive like ||foo.bar which would match https://foo.bar.baz where\n        // ||foo.bar^ would not.\n        return (\n          filterHostname.length === requestHostname.length ||\n          requestHostname.endsWith(filterHostname)\n        );\n      } else {\n        // pattern|\n        return request.url.endsWith(pattern);\n      }\n    } else if (filter.isLeftAnchor()) {\n      // ||pattern + left-anchor => This means that a plain pattern needs to appear\n      // exactly after the hostname, with nothing in between.\n      // Since this is not a regex, the filter pattern must follow the hostname\n      // with nothing in between. So we extract the part of the URL following\n      // after hostname and will perform the matching on it.\n      return fastStartsWithFrom(\n        request.url,\n        pattern,\n        request.url.indexOf(filterHostname) + filterHostname.length,\n      );\n    }\n\n    if (filter.hasFilter() === false) {\n      return true;\n    }\n\n    // We consider this a match if the plain patter (i.e.: filter) appears anywhere.\n    return (\n      request.url.indexOf(pattern, request.url.indexOf(filterHostname) + filterHostname.length) !==\n      -1\n    );\n  } else if (filter.isRegex()) {\n    // pattern*^\n    return filter.getRegex().test(request.url);\n  } else if (filter.isLeftAnchor() && filter.isRightAnchor()) {\n    // |pattern|\n    return request.url === pattern;\n  } else if (filter.isLeftAnchor()) {\n    // |pattern\n    return fastStartsWith(request.url, pattern);\n  } else if (filter.isRightAnchor()) {\n    // pattern|\n    return request.url.endsWith(pattern);\n  }\n\n  // pattern\n  if (filter.hasFilter() === false) {\n    return true;\n  }\n\n  return request.url.indexOf(pattern) !== -1;\n}\n\nfunction checkOptions(filter: NetworkFilter, request: Request): boolean {\n  // We first discard requests based on type, protocol and party. This is really\n  // cheap and should be done first.\n  if (\n    filter.isCptAllowed(request.type) === false ||\n    (request.isHttps === true && filter.fromHttps() === false) ||\n    (request.isHttp === true && filter.fromHttp() === false) ||\n    (filter.firstParty() === false && request.isFirstParty === true) ||\n    (filter.thirdParty() === false && request.isThirdParty === true)\n  ) {\n    return false;\n  }\n\n  // If `sourceHostname` is *not* matched by `domain` then the request should be allowed.\n  if (\n    filter.domains !== undefined &&\n    filter.domains.match(request.sourceHostnameHashes, request.sourceEntityHashes) === false\n  ) {\n    return false;\n  }\n\n  // If `hostname` is matched by `denyallow` then the request should be allowed.\n  if (\n    filter.denyallow !== undefined &&\n    filter.denyallow.match(request.getHostnameHashes(), request.getEntityHashes()) === true\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from './config';\nimport CosmeticFilter from './filters/cosmetic';\nimport NetworkFilter from './filters/network';\nimport { fastStartsWith, fastStartsWithFrom } from './utils';\n\nexport const enum FilterType {\n  NOT_SUPPORTED = 0,\n  NETWORK = 1,\n  COSMETIC = 2,\n}\n\n/**\n * Given a single line (string), checks if this would likely be a cosmetic\n * filter, a network filter or something that is not supported. This check is\n * performed before calling a more specific parser to create an instance of\n * `NetworkFilter` or `CosmeticFilter`.\n */\nexport function detectFilterType(line: string): FilterType {\n  // Ignore empty line\n  if (line.length === 0 || line.length === 1) {\n    return FilterType.NOT_SUPPORTED;\n  }\n\n  // Ignore comments\n  const firstCharCode: number = line.charCodeAt(0);\n  const secondCharCode: number = line.charCodeAt(1);\n  if (\n    firstCharCode === 33 /* '!' */ ||\n    (firstCharCode === 35 /* '#' */ && secondCharCode <= 32) ||\n    (firstCharCode === 91 /* '[' */ && fastStartsWith(line, '[Adblock'))\n  ) {\n    return FilterType.NOT_SUPPORTED;\n  }\n\n  // Fast heuristics to detect network filters\n  const lastCharCode: number = line.charCodeAt(line.length - 1);\n  if (\n    firstCharCode === 36 /* '$' */ ||\n    firstCharCode === 38 /* '&' */ ||\n    firstCharCode === 42 /* '*' */ ||\n    firstCharCode === 45 /* '-' */ ||\n    firstCharCode === 46 /* '.' */ ||\n    firstCharCode === 47 /* '/' */ ||\n    firstCharCode === 58 /* ':' */ ||\n    firstCharCode === 61 /* '=' */ ||\n    firstCharCode === 63 /* '?' */ ||\n    firstCharCode === 64 /* '@' */ ||\n    firstCharCode === 95 /* '_' */ ||\n    firstCharCode === 124 /* '|' */ ||\n    lastCharCode === 124 /* '|' */\n  ) {\n    return FilterType.NETWORK;\n  }\n\n  // Ignore Adguard cosmetics\n  // `$$` = HTML filtering rules\n  const dollarIndex: number = line.indexOf('$');\n  if (dollarIndex !== -1 && dollarIndex !== line.length - 1) {\n    const afterDollarIndex = dollarIndex + 1;\n    const afterDollarCharCode = line.charCodeAt(afterDollarIndex);\n\n    // Ignore Adguard HTML rewrite rules\n    if (\n      afterDollarCharCode === 36 /* '$' */ ||\n      (afterDollarCharCode === 64 /* '@' */ &&\n        fastStartsWithFrom(line, /* $@$ */ '@$', afterDollarIndex))\n    ) {\n      return FilterType.NOT_SUPPORTED;\n    }\n  }\n\n  // Check if filter is cosmetics\n  const sharpIndex: number = line.indexOf('#');\n  if (sharpIndex !== -1 && sharpIndex !== line.length - 1) {\n    const afterSharpIndex = sharpIndex + 1;\n    const afterSharpCharCode = line.charCodeAt(afterSharpIndex);\n\n    if (\n      afterSharpCharCode === 35 /* '#'*/ ||\n      (afterSharpCharCode === 64 /* '@' */ &&\n        fastStartsWithFrom(line, /* #@# */ '@#', afterSharpIndex))\n      // TODO - support ADB/AdGuard extended css selectors\n      // || (afterSharpCharCode === 63 /* '?' */ &&\n      //   fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))\n    ) {\n      // Parse supported cosmetic filter\n      // `##` `#@#`\n      return FilterType.COSMETIC;\n    } else if (\n      (afterSharpCharCode === 64 /* '@'*/ &&\n        (fastStartsWithFrom(line, /* #@$# */ '@$#', afterSharpIndex) ||\n          fastStartsWithFrom(line, /* #@%# */ '@%#', afterSharpIndex))) ||\n      (afterSharpCharCode === 37 /* '%' */ &&\n        fastStartsWithFrom(line, /* #%# */ '%#', afterSharpIndex)) ||\n      (afterSharpCharCode === 36 /* '$' */ &&\n        fastStartsWithFrom(line, /* #$# */ '$#', afterSharpIndex)) ||\n      (afterSharpCharCode === 63 /* '?' */ &&\n        fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))\n    ) {\n      // Ignore Adguard cosmetics\n      // `#$#` `#@$#`\n      // `#%#` `#@%#`\n      // `#?#`\n      return FilterType.NOT_SUPPORTED;\n    }\n  }\n\n  // Everything else is a network filter\n  return FilterType.NETWORK;\n}\n\nexport function parseFilter(filter: string): NetworkFilter | CosmeticFilter | null {\n  const filterType = detectFilterType(filter);\n\n  if (filterType === FilterType.NETWORK) {\n    return NetworkFilter.parse(filter, true);\n  } else if (filterType === FilterType.COSMETIC) {\n    return CosmeticFilter.parse(filter, true);\n  }\n\n  return null;\n}\n\nexport function f(strings: TemplateStringsArray): NetworkFilter | CosmeticFilter | null {\n  return parseFilter(strings[0]);\n}\n\nexport function parseFilters(\n  list: string,\n  config: Partial<Config> = new Config(),\n): { networkFilters: NetworkFilter[]; cosmeticFilters: CosmeticFilter[] } {\n  config = new Config(config);\n\n  const networkFilters: NetworkFilter[] = [];\n  const cosmeticFilters: CosmeticFilter[] = [];\n  const lines = list.split('\\n');\n\n  for (let i = 0; i < lines.length; i += 1) {\n    let line = lines[i];\n\n    // Check if `line` should be left-trimmed\n    if (line.length !== 0 && line.charCodeAt(0) <= 32) {\n      line = line.trim();\n    }\n\n    // Handle continuations\n    if (line.length > 2) {\n      while (\n        i < lines.length - 1 &&\n        line.charCodeAt(line.length - 1) === 92 &&\n        line.charCodeAt(line.length - 2) === 32\n      ) {\n        line = line.slice(0, -2);\n\n        const nextLine = lines[i + 1];\n        if (\n          nextLine.length > 4 &&\n          nextLine.charCodeAt(0) === 32 &&\n          nextLine.charCodeAt(1) === 32 &&\n          nextLine.charCodeAt(2) === 32 &&\n          nextLine.charCodeAt(3) === 32 &&\n          nextLine.charCodeAt(4) !== 32\n        ) {\n          line += nextLine.slice(4);\n          i += 1;\n        } else {\n          break;\n        }\n      }\n    }\n\n    // Check if `line` should be right-trimmed\n    if (line.length !== 0 && line.charCodeAt(line.length - 1) <= 32) {\n      line = line.trim();\n    }\n\n    // Detect if filter is supported, network or cosmetic\n    const filterType = detectFilterType(line);\n\n    if (filterType === FilterType.NETWORK && config.loadNetworkFilters === true) {\n      const filter = NetworkFilter.parse(line, config.debug);\n      if (filter !== null) {\n        networkFilters.push(filter);\n      }\n    } else if (filterType === FilterType.COSMETIC && config.loadCosmeticFilters === true) {\n      const filter = CosmeticFilter.parse(line, config.debug);\n      if (filter !== null) {\n        if (config.loadGenericCosmeticsFilters === true || filter.isGenericHide() === false) {\n          cosmeticFilters.push(filter);\n        }\n      }\n    }\n  }\n\n  return { networkFilters, cosmeticFilters };\n}\n\nfunction getFilters(list: string, config?: Partial<Config>): (NetworkFilter | CosmeticFilter)[] {\n  const { networkFilters, cosmeticFilters } = parseFilters(list, config);\n  const filters: (NetworkFilter | CosmeticFilter)[] = [];\n  return filters.concat(networkFilters).concat(cosmeticFilters);\n}\n\nexport interface IListDiff {\n  newNetworkFilters: NetworkFilter[];\n  newCosmeticFilters: CosmeticFilter[];\n  removedCosmeticFilters: number[];\n  removedNetworkFilters: number[];\n}\n\nexport interface IRawDiff {\n  added: string[];\n  removed: string[];\n}\n\n/**\n * Helper used to return a set of lines as strings where each line is\n * guaranteed to be a valid filter (i.e.: comments, empty lines and\n * un-supported filters are dropped).\n */\nexport function getLinesWithFilters(\n  list: string,\n  config: Partial<Config> = new Config(),\n): Set<string> {\n  // Set config to `debug` so that we keep track of raw lines for each filter\n  return new Set(\n    getFilters(list, new Config(Object.assign({}, config, { debug: true }))).map(\n      ({ rawLine }) => rawLine as string,\n    ),\n  );\n}\n\n/**\n * Given two versions of the same subscription (e.g.: EasyList) as a string,\n * generate a raw diff (i.e.: a list of filters added and filters removed, in\n * their raw string form).\n */\nexport function generateDiff(\n  prevRevision: string,\n  newRevision: string,\n  config: Partial<Config> = new Config(),\n): IRawDiff {\n  // Set config to `debug` so that we keep track of raw lines for each filter\n  const debugConfig = new Config(Object.assign({}, config, { debug: true }));\n\n  const prevRevisionFilters = getFilters(prevRevision, debugConfig);\n  const prevRevisionIds = new Set(prevRevisionFilters.map((filter) => filter.getId()));\n\n  const newRevisionFilters = getFilters(newRevision, debugConfig);\n  const newRevisionIds = new Set(newRevisionFilters.map((filter) => filter.getId()));\n\n  // Check which filters were added, based on ID\n  const added: Set<string> = new Set();\n  for (const filter of newRevisionFilters) {\n    if (!prevRevisionIds.has(filter.getId())) {\n      added.add(filter.rawLine as string);\n    }\n  }\n\n  // Check which filters were removed, based on ID\n  const removed: Set<string> = new Set();\n  for (const filter of prevRevisionFilters) {\n    if (!newRevisionIds.has(filter.getId())) {\n      removed.add(filter.rawLine as string);\n    }\n  }\n\n  return { added: Array.from(added), removed: Array.from(removed) };\n}\n\n/**\n * Merge several raw diffs into one, taking care of accumulating added and\n * removed filters, even if several diffs add/remove the same ones.\n */\nexport function mergeDiffs(diffs: Partial<IRawDiff>[]): IRawDiff {\n  const addedCumul: Set<string> = new Set();\n  const removedCumul: Set<string> = new Set();\n\n  for (const { added, removed } of diffs) {\n    if (added !== undefined) {\n      for (const str of added) {\n        if (removedCumul.has(str)) {\n          removedCumul.delete(str);\n        }\n        addedCumul.add(str);\n      }\n    }\n\n    if (removed !== undefined) {\n      for (const str of removed) {\n        if (addedCumul.has(str)) {\n          addedCumul.delete(str);\n        }\n        removedCumul.add(str);\n      }\n    }\n  }\n\n  return {\n    added: Array.from(addedCumul),\n    removed: Array.from(removedCumul),\n  };\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { getResourceForMime } from '@remusao/small';\n\nimport { StaticDataView, sizeOfASCII, sizeOfByte } from './data-view';\n\n// Polyfill for `btoa`\nfunction btoaPolyfill(buffer: string): string {\n  if (typeof btoa !== 'undefined') {\n    return btoa(buffer);\n  } else if (typeof Buffer !== 'undefined') {\n    return Buffer.from(buffer).toString('base64');\n  }\n  return buffer;\n}\n\ninterface Resource {\n  contentType: string;\n  body: string;\n}\n\n// TODO - support # alias\n// TODO - support empty resource body\n\n/**\n * Abstraction on top of resources.txt used for redirections as well as script\n * injections. It contains logic to parse, serialize and get resources by name\n * for use in the engine.\n */\nexport default class Resources {\n  public static deserialize(buffer: StaticDataView): Resources {\n    const checksum = buffer.getASCII();\n\n    // Deserialize `resources`\n    const resources: Map<string, Resource> = new Map();\n    const numberOfResources = buffer.getUint16();\n    for (let i = 0; i < numberOfResources; i += 1) {\n      resources.set(buffer.getASCII(), {\n        contentType: buffer.getASCII(),\n        body: buffer.getASCII(),\n      });\n    }\n\n    // Deserialize `js`\n    const js: Map<string, string> = new Map();\n    resources.forEach(({ contentType, body }, name) => {\n      if (contentType === 'application/javascript') {\n        js.set(name, body);\n      }\n    });\n\n    return new Resources({\n      checksum,\n      js,\n      resources,\n    });\n  }\n\n  public static parse(data: string, { checksum }: { checksum: string }): Resources {\n    const typeToResource: Map<string, Map<string, string>> = new Map();\n    const trimComments = (str: string) => str.replace(/^\\s*#.*$/gm, '');\n    const chunks = data.split('\\n\\n');\n\n    for (const chunk of chunks) {\n      const resource = trimComments(chunk).trim();\n      if (resource.length !== 0) {\n        const firstNewLine = resource.indexOf('\\n');\n        const split = resource.slice(0, firstNewLine).split(/\\s+/);\n        const name = split[0];\n        const type = split[1];\n        const body = resource.slice(firstNewLine + 1);\n\n        if (name === undefined || type === undefined || body === undefined) {\n          continue;\n        }\n\n        let resources = typeToResource.get(type);\n        if (resources === undefined) {\n          resources = new Map();\n          typeToResource.set(type, resources);\n        }\n        resources.set(name, body);\n      }\n    }\n\n    // The resource containing javascirpts to be injected\n    const js: Map<string, string> = typeToResource.get('application/javascript') || new Map();\n    for (const [key, value] of js.entries()) {\n      if (key.endsWith('.js')) {\n        js.set(key.slice(0, -3), value);\n      }\n    }\n\n    // Create a mapping from resource name to { contentType, data }\n    // used for request redirection.\n    const resourcesByName: Map<string, Resource> = new Map();\n    typeToResource.forEach((resources, contentType) => {\n      resources.forEach((resource: string, name: string) => {\n        resourcesByName.set(name, {\n          contentType,\n          body: resource,\n        });\n      });\n    });\n\n    return new Resources({\n      checksum,\n      js,\n      resources: resourcesByName,\n    });\n  }\n\n  public readonly checksum: string;\n  public readonly js: Map<string, string>;\n  public readonly resources: Map<string, Resource>;\n\n  constructor({ checksum = '', js = new Map(), resources = new Map() }: Partial<Resources> = {}) {\n    this.checksum = checksum;\n    this.js = js;\n    this.resources = resources;\n  }\n\n  public getResource(name: string): Resource & { dataUrl: string } {\n    const { body, contentType } = this.resources.get(name) || getResourceForMime(name);\n\n    let dataUrl;\n    if (contentType.indexOf(';') !== -1) {\n      dataUrl = `data:${contentType},${body}`;\n    } else {\n      dataUrl = `data:${contentType};base64,${btoaPolyfill(body)}`;\n    }\n\n    return { body, contentType, dataUrl };\n  }\n\n  public getSerializedSize(): number {\n    let estimatedSize = sizeOfASCII(this.checksum) + 2 * sizeOfByte(); // resources.size\n\n    this.resources.forEach(({ contentType, body }, name) => {\n      estimatedSize += sizeOfASCII(name) + sizeOfASCII(contentType) + sizeOfASCII(body);\n    });\n\n    return estimatedSize;\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    // Serialize `checksum`\n    buffer.pushASCII(this.checksum);\n\n    // Serialize `resources`\n    buffer.pushUint16(this.resources.size);\n    this.resources.forEach(({ contentType, body }, name) => {\n      buffer.pushASCII(name);\n      buffer.pushASCII(contentType);\n      buffer.pushASCII(body);\n    });\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nexport function compactTokens(tokens: Uint32Array): Uint32Array {\n  const sorted = tokens.sort();\n  let lastIndex = 1;\n  for (let i = 1; i < sorted.length; i += 1) {\n    if (sorted[lastIndex - 1] !== sorted[i]) {\n      sorted[lastIndex++] = sorted[i];\n    }\n  }\n\n  return sorted.subarray(0, lastIndex);\n}\n\nexport function hasEmptyIntersection(s1: Uint32Array, s2: Uint32Array): boolean {\n  let i = 0;\n  let j = 0;\n\n  while (i < s1.length && j < s2.length && s1[i] !== s2[j]) {\n    if (s1[i] < s2[j]) {\n      i += 1;\n    } else {\n      j += 1;\n    }\n  }\n\n  return i === s1.length || j === s2.length;\n}\n\nconst EMPTY_UINT32_ARRAY = new Uint32Array(0);\n\nexport function concatTypedArrays(arrays: Uint32Array[]): Uint32Array {\n  if (arrays.length === 0) {\n    return EMPTY_UINT32_ARRAY;\n  }\n\n  if (arrays.length === 1) {\n    return arrays[0];\n  }\n\n  let totalSize = 0;\n  for (let i = 0; i < arrays.length; i += 1) {\n    totalSize += arrays[i].length;\n  }\n\n  const result = new Uint32Array(totalSize);\n  let index = 0;\n  for (let i = 0; i < arrays.length; i += 1) {\n    const array = arrays[i];\n    for (let j = 0; j < array.length; j += 1) {\n      result[index++] = array[j];\n    }\n  }\n\n  return result;\n}\n\nexport function mergeCompactSets(arrays: Uint32Array[]): Uint32Array {\n  return compactTokens(concatTypedArrays(arrays));\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport CosmeticFilter from '../filters/cosmetic';\nimport NetworkFilter, { NETWORK_FILTER_MASK } from '../filters/network';\nimport { setBit } from '../utils';\nimport { Domains } from '../engine/domains';\n\nfunction processRegex(r: RegExp): string {\n  return `(?:${r.source})`;\n}\n\nfunction escape(s: string): string {\n  return `(?:${s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')})`;\n}\n\nfunction setWithDefault<K, V>(map: Map<K, V[]>, key: K, value: V): void {\n  let bucket = map.get(key);\n  if (bucket === undefined) {\n    bucket = [];\n    map.set(key, bucket);\n  }\n  bucket.push(value);\n}\n\nfunction groupBy(\n  filters: NetworkFilter[],\n  criteria: (filter: NetworkFilter) => string,\n): NetworkFilter[][] {\n  const grouped: Map<string, NetworkFilter[]> = new Map();\n  for (const filter of filters) {\n    setWithDefault(grouped, criteria(filter), filter);\n  }\n  return Array.from(grouped.values());\n}\n\nfunction splitBy(\n  filters: NetworkFilter[],\n  condition: (filter: NetworkFilter) => boolean,\n): {\n  positive: NetworkFilter[];\n  negative: NetworkFilter[];\n} {\n  const positive: NetworkFilter[] = [];\n  const negative: NetworkFilter[] = [];\n\n  for (const filter of filters) {\n    if (condition(filter)) {\n      positive.push(filter);\n    } else {\n      negative.push(filter);\n    }\n  }\n\n  return {\n    negative,\n    positive,\n  };\n}\n\ninterface IOptimization {\n  description: string;\n  groupByCriteria: (filter: NetworkFilter) => string;\n  select: (filter: NetworkFilter) => boolean;\n  fusion: (filters: NetworkFilter[]) => NetworkFilter;\n}\n\nconst OPTIMIZATIONS: IOptimization[] = [\n  {\n    description: 'Remove duplicated filters by ID',\n    fusion: (filters: NetworkFilter[]) => filters[0],\n    groupByCriteria: (filter: NetworkFilter) => '' + filter.getId(),\n    select: () => true,\n  },\n  {\n    description: 'Group idential filter with same mask but different domains in single filters',\n    fusion: (filters: NetworkFilter[]) => {\n      const hostnames: Set<number> = new Set();\n      const notHostnames: Set<number> = new Set();\n      const entities: Set<number> = new Set();\n      const notEntities: Set<number> = new Set();\n\n      for (const { domains } of filters) {\n        if (domains !== undefined) {\n          if (domains.hostnames !== undefined) {\n            for (const hash of domains.hostnames) {\n              hostnames.add(hash);\n            }\n          }\n\n          if (domains.entities !== undefined) {\n            for (const hash of domains.entities) {\n              entities.add(hash);\n            }\n          }\n\n          if (domains.notHostnames !== undefined) {\n            for (const hash of domains.notHostnames) {\n              notHostnames.add(hash);\n            }\n          }\n\n          if (domains.notEntities !== undefined) {\n            for (const hash of domains.notEntities) {\n              notEntities.add(hash);\n            }\n          }\n        }\n      }\n\n      return new NetworkFilter(\n        Object.assign({}, filters[0], {\n          domains: new Domains({\n            hostnames: hostnames.size !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n            entities: entities.size !== 0 ? new Uint32Array(entities).sort() : undefined,\n            notHostnames:\n              notHostnames.size !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n            notEntities: notEntities.size !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n          }),\n          rawLine:\n            filters[0].rawLine !== undefined\n              ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n              : undefined,\n        }),\n      );\n    },\n    groupByCriteria: (filter: NetworkFilter) =>\n      filter.getHostname() + filter.getFilter() + filter.getMask() + filter.getRedirect(),\n    select: (filter: NetworkFilter) =>\n      !filter.isCSP() && filter.denyallow === undefined && filter.domains !== undefined,\n  },\n  {\n    description: 'Group simple patterns, into a single filter',\n    fusion: (filters: NetworkFilter[]) => {\n      const patterns: string[] = [];\n      for (const f of filters) {\n        if (f.isRegex()) {\n          patterns.push(processRegex(f.getRegex()));\n        } else if (f.isRightAnchor()) {\n          patterns.push(`${escape(f.getFilter())}$`);\n        } else if (f.isLeftAnchor()) {\n          patterns.push(`^${escape(f.getFilter())}`);\n        } else {\n          patterns.push(escape(f.getFilter()));\n        }\n      }\n\n      return new NetworkFilter(\n        Object.assign({}, filters[0], {\n          mask: setBit(filters[0].mask, NETWORK_FILTER_MASK.isRegex),\n          rawLine:\n            filters[0].rawLine !== undefined\n              ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n              : undefined,\n          regex: new RegExp(patterns.join('|')),\n        }),\n      );\n    },\n    groupByCriteria: (filter: NetworkFilter) =>\n      '' + (filter.getMask() & ~NETWORK_FILTER_MASK.isRegex & ~NETWORK_FILTER_MASK.isFullRegex),\n    select: (filter: NetworkFilter) =>\n      filter.domains === undefined &&\n      filter.denyallow === undefined &&\n      !filter.isHostnameAnchor() &&\n      !filter.isRedirect() &&\n      !filter.isCSP(),\n  },\n];\n\n/**\n * Optimizer which returns the list of original filters.\n */\nexport function noopOptimizeNetwork(filters: NetworkFilter[]): NetworkFilter[] {\n  return filters;\n}\n\nexport function noopOptimizeCosmetic(filters: CosmeticFilter[]): CosmeticFilter[] {\n  return filters;\n}\n\n/**\n * Fusion a set of `filters` by applying optimizations sequentially.\n */\nexport function optimizeNetwork(filters: NetworkFilter[]): NetworkFilter[] {\n  const fused: NetworkFilter[] = [];\n  let toFuse = filters;\n\n  for (const { select, fusion, groupByCriteria } of OPTIMIZATIONS) {\n    const { positive, negative } = splitBy(toFuse, select);\n    toFuse = negative;\n\n    const groups = groupBy(positive, groupByCriteria);\n    for (const group of groups) {\n      if (group.length > 1) {\n        fused.push(fusion(group));\n      } else {\n        toFuse.push(group[0]);\n      }\n    }\n  }\n\n  for (const filter of toFuse) {\n    fused.push(filter);\n  }\n\n  return fused;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../config';\nimport { StaticDataView, EMPTY_UINT32_ARRAY, sizeOfBytes } from '../data-view';\nimport IFilter from '../filters/interface';\n\n// https://graphics.stanford.edu/~seander/bithacks.html#RoundUpPowerOf2\nfunction nextPow2(v: number): number {\n  v--;\n  v |= v >> 1;\n  v |= v >> 2;\n  v |= v >> 4;\n  v |= v >> 8;\n  v |= v >> 16;\n  v++;\n  return v;\n}\n\n/**\n * Generate unique IDs for requests, which is used to avoid matching the same\n * buckets multiple times on the same request (which can happen if a token\n * appears more than once in a URL).\n */\nlet UID = 1;\nfunction getNextId(): number {\n  const id = UID;\n  UID = (UID + 1) % 1000000000;\n  return id;\n}\n\n/**\n * List of filters being indexed using the same token in the index.\n */\ninterface Bucket<T extends IFilter> {\n  readonly filters: T[];\n  lastRequestSeen: number;\n}\n\nconst EMPTY_BUCKET: number = Number.MAX_SAFE_INTEGER >>> 0;\n\n/**\n * The ReverseIndex is an accelerating data structure which allows finding a\n * subset of the filters given a list of tokens seen in a URL. It is the core\n * of the adblocker's matching capabilities and speed.\n *\n * It has mainly two caracteristics:\n * 1. It is very compact and is able to load fast.\n * 2. It is *very fast* in finding potential candidates.\n *\n * Conceptually, the reverse index dispatches filters in \"buckets\" (an array of\n * one or more filters). Filters living in the same bucket are guaranteed to\n * share at least one of their tokens (appearing in the pattern). For example:\n *\n *   - Bucket 1 (ads):\n *       - /ads.js\n *       - /script/ads/tracking.js\n *       - /ads/\n *   - Bucket 2 (tracking)\n *       - /tracking.js\n *       - ||tracking.com/cdn\n *\n * We see that filters in \"Bucket 1\" are indexed using the token \"ads\" and\n * \"Bucket 2\" using token \"tracking\".\n *\n * This property allows to quickly discard most of the filters when we match a\n * URL. To achieve this, the URL is tokenized in the same way filters are\n * tokenized and for each token, we check if there are some filters available.\n *\n * For example:\n *\n *  URL \"https://tracking.com/\" has the following tokens: \"https\", \"tracking\"\n *  and \"com\". We immediatly see that we only check the two filters in the\n *  \"tracking\" bucket since they are the only ones having a common token with\n *  the URL.\n *\n * How do we pick the token for each filter?\n * =========================================\n *\n * Each filter is only indexed *once*, which means that we need to pick one of\n * the tokens appearing in the pattern. We choose the token such that each\n * filter is indexed using the token which was the *least seen* globally. In\n * other words, we pick the most discriminative token for each filter. This is\n * done using the following algorithm:\n *   1. Tokenize all the filters which will be stored in the index\n *   2. Compute a histogram of frequency of each token (globally)\n *   3. Select the best token for each filter (lowest frequency)\n */\nexport default class ReverseIndex<T extends IFilter> {\n  public static deserialize<T extends IFilter>(\n    buffer: StaticDataView,\n    deserialize: (view: StaticDataView) => T,\n    optimize: (filters: T[]) => T[],\n    config: Config,\n  ): ReverseIndex<T> {\n    const tokensLookupIndexSize = buffer.getUint32();\n    const bucketsIndexSize = buffer.getUint32();\n    const numberOfFilters = buffer.getUint32();\n\n    // Alignement to 4 bytes is important here since `view` (Uint8Array) can\n    // appear at any offset of `buffer`. But to be sure we can read back\n    // Uint32Array directly from raw buffer, the alignement has to be a\n    // multiple of 4. The same alignement is taken care of in `serialize`.\n    const view = StaticDataView.fromUint8Array(buffer.getBytes(true /* align */), config);\n    const tokensLookupIndex = view.getUint32ArrayView(tokensLookupIndexSize);\n    const bucketsIndex = view.getUint32ArrayView(bucketsIndexSize);\n    const filtersIndexStart = view.pos;\n    view.seekZero(); // not strictly needed but make sure reverse index can be compared with deep equal\n\n    return new ReverseIndex({\n      config,\n      deserialize,\n      filters: [],\n      optimize,\n    }).updateInternals({\n      bucketsIndex,\n      filtersIndexStart,\n      numberOfFilters,\n      tokensLookupIndex,\n      view,\n    });\n  }\n\n  // Internal, compact representation of the reverse index. It contains three\n  // distinct parts stored in the same typed array:\n  //\n  // 1. \"tokens lookup index\" allows to identify a sub-set of buckets which\n  // likely contain filters for a given token. It is an approximate dispatch\n  // table which maps a mask of N bits (N being smaller than 31 bits, the size\n  // of a token) to a list of buckets having a 'token' sharing these same N\n  // bits sub-set. If the binary representation of the token for bucket1 is\n  // 101010 and suffix has size 3, then we would lookup the \"tokens lookup\n  // index\" using the last 3 bits \"010\" which would give us the offset in our\n  // typed array where we can start reading the filters of buckets having a\n  // token ending with the same 3 bits. The value of N is always a power of 2\n  // depending on the total number of filters stored in the index; determined\n  // at the time `update(...)` is called.\n  //\n  // 2. \"buckets index\" is an array which associates tokens to filters. The\n  // structure is: token, filter, token, filter, etc. To identify all the\n  // filters indexed with 'token' a naive approach would be to iterate on\n  // \"buckets index\" and collect all the filters indexed with 'token'. This\n  // would be *very inefficient*! To make this process faster, filters in\n  // \"buckets index\" are grouped so that buckets sharing the same suffix of N\n  // bits in their indexing token (see \"tokens lookup index\") are stored side\n  // by side in the typed array. To know where this section start given a\n  // particular token, we use \"tokens lookup index\" which associated the suffix\n  // of size N to an index in \"buckets index\". From there we can iterate on the\n  // candidates.\n  //\n  // 3. \"filters index\" contains the filters themselves. \"buckets index\"\n  // presented earlier does not contain filters, but an index to the \"filters\n  // index\". This allows a filter to be indexed multiple times without\n  // introducing any overhead; the filter can be associated with multiple\n  // tokens in \"buckets index\" (each pointing to the same place in \"filters\n  // index\") but its actual representation is stored only once in \"filters\n  // index\".\n\n  private bucketsIndex: Uint32Array = EMPTY_UINT32_ARRAY;\n  private filtersIndexStart: number = 0;\n  private numberOfFilters: number = 0;\n  private tokensLookupIndex: Uint32Array = EMPTY_UINT32_ARRAY;\n  private view: StaticDataView;\n\n  // In-memory cache used to keep track of buckets which have been loaded from\n  // the compact representation (i.e.: this.view). It is not strictly necessary\n  // but will speed-up retrival of popular filters (since we do not have to\n  // perform the lookup in \"tokens index\" and \"buckets index\" everytime).\n  private readonly cache: Map<number, Bucket<T>> = new Map();\n\n  // Function used to load a filter (e.g.: CosmeticFilter or NetworkFilter)\n  // from its compact representation in the \"filters index\" section of the\n  // typed array. Each filter exposes a `serialize(...)` method which is used\n  // to store it in `this.view` (section \"filters index\"). While matching we\n  // need to retrieve the instance of the filter to perform matching and use\n  // `this.deserializeFilter(...)` to do so.\n  private readonly deserializeFilter: (view: StaticDataView) => T;\n\n  // Optional function which will be used to optimize a list of filters\n  // in-memory. Typically this is used while matching when a list of filters is\n  // loaded in memory and stored in `this.cache`. Before using the bucket, we\n  // call `this.optimize(...)` on the list of filters to allow some\n  // optimizations to be performed (e.g.: fusion of similar filters, etc.).\n  // Have a look into `./src/engine/optimizer.ts` for examples of such\n  // optimizations.\n  private readonly optimize: (filters: T[]) => T[];\n  private readonly config: Readonly<Config>;\n\n  constructor({\n    deserialize,\n    filters,\n    optimize,\n    config,\n  }: {\n    deserialize: (view: StaticDataView) => T;\n    filters: T[];\n    optimize: (filters: T[]) => T[];\n    config: Config;\n  }) {\n    this.view = StaticDataView.empty(config);\n    this.deserializeFilter = deserialize;\n    this.optimize = optimize;\n    this.config = config;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  /**\n   * Load all filters from this index in memory (i.e.: deserialize them from\n   * the byte array into NetworkFilter or CosmeticFilter instances). This is\n   * mostly useful for debugging or testing purposes.\n   */\n  public getFilters(): T[] {\n    const filters: T[] = [];\n\n    if (this.numberOfFilters === 0) {\n      return filters;\n    }\n\n    // set view cursor at the start of \"filters index\"\n    this.view.setPos(this.filtersIndexStart);\n\n    for (let i = 0; i < this.numberOfFilters; i += 1) {\n      filters.push(this.deserializeFilter(this.view));\n    }\n\n    return filters;\n  }\n\n  /**\n   * Return an array of all the tokens currently used as keys of the \"buckets index\".\n   */\n  public getTokens(): Uint32Array {\n    const tokens: Set<number> = new Set();\n\n    for (let i = 0; i < this.bucketsIndex.length; i += 2) {\n      tokens.add(this.bucketsIndex[i]);\n    }\n\n    return new Uint32Array(tokens);\n  }\n\n  /**\n   * Estimate the number of bytes needed to serialize this instance of `ReverseIndex`.\n   */\n  public getSerializedSize(): number {\n    // 12 = 4 bytes (tokensLookupIndex.length) + 4 bytes (bucketsIndex.length) + 4 bytes (numberOfFilters)\n    return 12 + sizeOfBytes(this.view.buffer, true /* align */);\n  }\n\n  /**\n   * Dump this index to `buffer`.\n   */\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushUint32(this.tokensLookupIndex.length);\n    buffer.pushUint32(this.bucketsIndex.length);\n    buffer.pushUint32(this.numberOfFilters);\n\n    // Aligmenent is crucial here, see comment in `deserialize` for more info.\n    buffer.pushBytes(this.view.buffer, true /* align */);\n  }\n\n  /**\n   * Iterate on all filters found in buckets associated with the given list of\n   * tokens. The callback is called on each of them. Early termination can be\n   * achieved if the callback returns `false`.\n   *\n   * This will not check if each filter returned would match a given request but\n   * is instead used as a list of potential candidates (much smaller than the\n   * total set of filters; typically between 5 and 10 filters will be checked).\n   */\n  public iterMatchingFilters(tokens: Uint32Array, cb: (f: T) => boolean): void {\n    // Each request is assigned an ID so that we can keep track of the last\n    // request seen by each bucket in the reverse index. This provides a cheap\n    // way to prevent filters from being inspected more than once per request\n    // (which could happen if the same token appears more than once in the URL).\n    const requestId = getNextId();\n\n    for (const token of tokens) {\n      if (this.iterBucket(token, requestId, cb) === false) {\n        return;\n      }\n    }\n\n    // Fallback to 0 (i.e.: wildcard bucket) bucket if nothing was found before.\n    this.iterBucket(0, requestId, cb);\n  }\n\n  /**\n   * Re-create the internal data-structure of the reverse index *in-place*. It\n   * needs to be called with a list of new filters and optionally a list of ids\n   * (as returned by either NetworkFilter.getId() or CosmeticFilter.getId())\n   * which need to be removed from the index.\n   */\n  public update(newFilters: T[], removedFilters: Set<number> | undefined): void {\n    // Reset internal cache on each update\n    if (this.cache.size !== 0) {\n      this.cache.clear();\n    }\n\n    const compression = this.config.enableCompression;\n    let totalNumberOfTokens = 0;\n    let totalNumberOfIndexedFilters = 0;\n    const filtersTokens: Uint32Array[][] = [];\n\n    // Keep track of the final size of the buckets index. `bucketsIndexSize` is\n    // the number of indexed filters, multiplied by 2 (since we store both the\n    // token a filter is indexed with and the index of the filter).\n    let bucketsIndexSize = 0;\n\n    // Re-use the current size of \"filters index\" as a starting point so that\n    // we only need to update with new or removed filters. This saves time if\n    // we perform a small update on an existing index.\n    let estimatedBufferSize = this.view.buffer.byteLength - this.filtersIndexStart;\n\n    // Create a list of all filters which will be part of the index. This means\n    // loading existing filters, removing the ones that need to be deleted and\n    // adding the new ones.  At the same time, we update the estimation of\n    // buffer size needed to store this index.\n    let filters: T[] = this.getFilters();\n    if (filters.length !== 0) {\n      // If there is at least one existing filter, then we check if some should\n      // be removed. We subtract their size from the total estimated buffer\n      // size.\n      if (removedFilters !== undefined && removedFilters.size !== 0) {\n        filters = filters.filter((f) => {\n          if (removedFilters.has(f.getId())) {\n            estimatedBufferSize -= f.getSerializedSize(compression);\n            return false;\n          }\n\n          return true;\n        });\n      }\n\n      // Add new filters to the list and also update estimated size\n      for (const filter of newFilters) {\n        estimatedBufferSize += filter.getSerializedSize(compression);\n        filters.push(filter);\n      }\n    } else {\n      // In the case where there is no existing filter in the index (happens on\n      // initialization), then we can take a fast-path and not check removed\n      // filters at all. There is also no need to copy the array of filters.\n      filters = newFilters;\n      for (const filter of newFilters) {\n        estimatedBufferSize += filter.getSerializedSize(compression);\n      }\n    }\n\n    // No filters given; reset to empty index and abort.\n    if (filters.length === 0) {\n      this.updateInternals({\n        bucketsIndex: EMPTY_UINT32_ARRAY,\n        filtersIndexStart: 0,\n        numberOfFilters: 0,\n        tokensLookupIndex: EMPTY_UINT32_ARRAY,\n        view: StaticDataView.empty(this.config),\n      });\n      return;\n    }\n\n    // When we run in `debug` mode, we enable fully deterministic updates of\n    // internal data-structures. To this effect, we sort all filters before\n    // insertion.\n    if (this.config.debug === true) {\n      filters.sort((f1: T, f2: T): number => f1.getId() - f2.getId());\n    }\n\n    const histogram = new Uint32Array(Math.max(nextPow2(2 * filters.length), 256));\n\n    // Tokenize all filters stored in this index. And compute a histogram of\n    // tokens so that we can decide how to index each filter efficiently.\n    for (const filter of filters) {\n      // Tokenize `filter` and store the result in `filtersTokens` which will\n      // be used in the next step to select the best token for each filter.\n      const multiTokens = filter.getTokens();\n      filtersTokens.push(multiTokens);\n\n      // Update estimated size of \"buckets index\" based on number of times this\n      // particular filter will be indexed.\n      bucketsIndexSize += 2 * multiTokens.length; // token + filter index\n      totalNumberOfIndexedFilters += multiTokens.length;\n\n      // Each filter can be indexed more than once, so `getTokens(...)` returns\n      // multiple sets of tokens. We iterate on all of them and update the\n      // histogram for each.\n      for (const tokens of multiTokens) {\n        totalNumberOfTokens += tokens.length;\n        for (const token of tokens) {\n          histogram[token % histogram.length] += 1;\n        }\n      }\n    }\n\n    // Add size of bucketsIndex to total size (x4 because these are 32 bits numbers)\n    estimatedBufferSize += bucketsIndexSize * 4;\n\n    // Prepare \"tokens index\" (see documentation in constructor of `ReverseIndex` class above).\n    const tokensLookupIndexSize: number = Math.max(2, nextPow2(totalNumberOfIndexedFilters));\n    const mask: number = tokensLookupIndexSize - 1;\n    const suffixes: [number, number][][] = [];\n    for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n      suffixes.push([]);\n    }\n\n    // Add size of tokensLookupIndex to total size (x4 because these are 32 bits numbers)\n    estimatedBufferSize += tokensLookupIndexSize * 4;\n\n    // At this point we know the number of bytes needed for the compact\n    // representation of this reverse index (\"tokens index\" + \"buckets index\" +\n    // \"filters index\"). We allocate it at once and proceed with populating it.\n    const buffer = StaticDataView.allocate(estimatedBufferSize, this.config);\n    const tokensLookupIndex = buffer.getUint32ArrayView(tokensLookupIndexSize);\n    const bucketsIndex = buffer.getUint32ArrayView(bucketsIndexSize);\n    const filtersIndexStart = buffer.getPos();\n\n    // For each filter, find the best token (least seen) based on histogram.\n    // Since we are iterating again on the filters, we populate \"filters index\"\n    // in the same loop and keep track of their indices so that we can later\n    // populate \"buckets index\".\n    for (let i = 0; i < filtersTokens.length; i += 1) {\n      const filter: T = filters[i];\n      const multiTokens: Uint32Array[] = filtersTokens[i];\n\n      // Serialize this filter and keep track of its index in the byte array;\n      // it will be used in \"buckets index\" to point to this filter.\n      const filterIndex = buffer.pos;\n      filter.serialize(buffer);\n\n      // Index the filter once per \"tokens\"\n      for (const tokens of multiTokens) {\n        // Find best token (least seen) from `tokens` using `histogram`.\n        let bestToken: number = 0; // default = wildcard bucket\n        let minCount: number = totalNumberOfTokens + 1;\n        for (const token of tokens) {\n          const tokenCount: number = histogram[token % histogram.length];\n          if (tokenCount < minCount) {\n            minCount = tokenCount;\n            bestToken = token;\n\n            // Fast path, if the current token has only been seen once, we can\n            // stop iterating since we will not find a better alternarive!\n            if (minCount === 1) {\n              break;\n            }\n          }\n        }\n\n        // `bestToken & mask` represents the N last bits of `bestToken`. We\n        // group all filters indexed with a token sharing the same N bits.\n        suffixes[bestToken & mask].push([bestToken, filterIndex]);\n      }\n    }\n\n    // Populate \"tokens index\" and \"buckets index\" based on best token found for each filter.\n    let indexInBucketsIndex = 0;\n    for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n      const filtersForMask: [number, number][] = suffixes[i];\n      tokensLookupIndex[i] = indexInBucketsIndex;\n      for (const [token, filterIndex] of filtersForMask) {\n        bucketsIndex[indexInBucketsIndex++] = token;\n        bucketsIndex[indexInBucketsIndex++] = filterIndex;\n      }\n    }\n\n    // Update internals\n    buffer.seekZero();\n    this.updateInternals({\n      bucketsIndex,\n      filtersIndexStart,\n      numberOfFilters: filtersTokens.length,\n      tokensLookupIndex,\n      view: buffer,\n    });\n  }\n\n  private updateInternals({\n    bucketsIndex,\n    filtersIndexStart,\n    numberOfFilters,\n    tokensLookupIndex,\n    view,\n  }: {\n    bucketsIndex: Uint32Array;\n    filtersIndexStart: number;\n    numberOfFilters: number;\n    tokensLookupIndex: Uint32Array;\n    view: StaticDataView;\n  }): ReverseIndex<T> {\n    this.bucketsIndex = bucketsIndex;\n    this.filtersIndexStart = filtersIndexStart;\n    this.numberOfFilters = numberOfFilters;\n    this.tokensLookupIndex = tokensLookupIndex;\n    this.view = view;\n    return this;\n  }\n\n  /**\n   * If a bucket exists for the given token, call the callback on each filter\n   * found inside. An early termination mechanism is built-in, to stop iterating\n   * as soon as `false` is returned from the callback.\n   */\n  private iterBucket(token: number, requestId: number, cb: (f: T) => boolean): boolean {\n    let bucket: Bucket<T> | undefined =\n      this.config.enableInMemoryCache === true ? this.cache.get(token) : undefined;\n\n    // Lazily create bucket if it does not yet exist in memory. Lookup the\n    // compact bucket representation and find all filters being associated with\n    // `token`. Create a `Bucket` out of them and store them in cache.\n    if (bucket === undefined) {\n      const offset = token & (this.tokensLookupIndex.length - 1);\n      const startOfBucket = this.tokensLookupIndex[offset];\n\n      // We do not have any filters for this token\n      if (startOfBucket === EMPTY_BUCKET) {\n        return true;\n      }\n\n      // Since we do not store explicitly the number of filters in each\n      // \"bucket\", we check the index of the next one and use it to infer the\n      // number of filters (each filter being stored as a token + index to the\n      // \"filters store\")\n      const endOfBucket =\n        offset === this.tokensLookupIndex.length - 1\n          ? this.bucketsIndex.length\n          : this.tokensLookupIndex[offset + 1];\n\n      // Get indices of filters indexed with `token`, if any.\n      const filtersIndices: number[] = [];\n      for (let i = startOfBucket; i < endOfBucket; i += 2) {\n        const currentToken = this.bucketsIndex[i];\n        if (currentToken === token) {\n          filtersIndices.push(this.bucketsIndex[i + 1]);\n        }\n      }\n\n      // No filter indexed with `token`.\n      if (filtersIndices.length === 0) {\n        return true; // continue looking for a match\n      }\n\n      // If we have filters for `token` then deserialize filters in memory and\n      // create a `Bucket` instance to hold them for future access.\n      const filters: T[] = [];\n      const view = this.view;\n      for (let i = 0; i < filtersIndices.length; i += 1) {\n        view.setPos(filtersIndices[i]);\n        filters.push(this.deserializeFilter(view));\n      }\n\n      // Create new bucket with found filters (only optimize if we have more\n      // than one filter).\n      bucket = {\n        filters: filters.length > 1 ? this.optimize(filters) : filters,\n        lastRequestSeen: -1, // safe because all ids are positive\n      };\n\n      if (this.config.enableInMemoryCache === true) {\n        this.cache.set(token, bucket);\n      }\n    }\n\n    // Look for matching filter in this bucket\n    if (bucket.lastRequestSeen !== requestId) {\n      bucket.lastRequestSeen = requestId;\n      const filters = bucket.filters;\n      for (let i = 0; i < filters.length; i += 1) {\n        // Break the loop if the callback returns `false`\n        if (cb(filters[i]) === false) {\n          // Whenever we get a match from a filter, we also swap it one\n          // position up in the list. This way, over time, popular filters will\n          // be first and might match earlier. This should decrease the time\n          // needed to get a match.\n          if (i > 0) {\n            const filter = filters[i];\n            filters[i] = filters[i - 1];\n            filters[i - 1] = filter;\n          }\n\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../../config';\nimport { StaticDataView, sizeOfBytes } from '../../data-view';\nimport IFilter from '../../filters/interface';\n\n// Empty filters is 4 bytes because we need at least one 32 bits number to keep\n// track of the number of filters in the container. If there is no filter then\n// the number will be 0.\nconst EMPTY_FILTERS = new Uint8Array(4);\n\n/**\n * Generic filters container (for both CosmeticFilter and NetworkFilter\n * instances). This abstracts away some of the logic to serialize/lazy-load\n * lists of filters (which is useful for things like generic cosmetic filters\n * or $badfilter).\n */\nexport default class FiltersContainer<T extends IFilter> {\n  public static deserialize<T extends IFilter>(\n    buffer: StaticDataView,\n    deserialize: (view: StaticDataView) => T,\n    config: Config,\n  ): FiltersContainer<T> {\n    const container = new FiltersContainer({ deserialize, config, filters: [] });\n    container.filters = buffer.getBytes();\n    return container;\n  }\n\n  // Data-view compatible typed array containing all the serialized filters.\n  public filters: Uint8Array;\n  private readonly deserialize: (view: StaticDataView) => T;\n\n  // This does not need to be serialized as it is owned globally by the FiltersEngine.\n  private readonly config: Config;\n\n  constructor({\n    config,\n    deserialize,\n    filters,\n  }: {\n    config: Config;\n    deserialize: (view: StaticDataView) => T;\n    filters: T[];\n  }) {\n    this.deserialize = deserialize;\n    this.filters = EMPTY_FILTERS;\n    this.config = config;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  /**\n   * Update filters based on `newFilters` and `removedFilters`.\n   */\n  public update(newFilters: T[], removedFilters: Set<number> | undefined): void {\n    // Estimate size of the buffer we will need to store filters. This avoids\n    // having to allocate a big chunk of memory up-front if it's not needed.\n    // We start with the current size of `this.filters` then update it with\n    // removed/added filters.\n    let bufferSizeEstimation: number = this.filters.byteLength;\n    let selected: T[] = [];\n    const compression = this.config.enableCompression;\n\n    // Add existing rules (removing the ones with ids in `removedFilters`)\n    const currentFilters = this.getFilters();\n    if (currentFilters.length !== 0) {\n      // If no filter was removed (we only add new ones), we don't need to\n      // filter out removed existing filters. So we just assign the array to\n      // `selected` directly to save a bit of effort.\n      if (removedFilters === undefined || removedFilters.size === 0) {\n        selected = currentFilters;\n      } else {\n        // There might be some removed selected filters, so we iterate through\n        // them and make sure we keep only the ones not having been deleted.\n        for (const filter of currentFilters) {\n          if (removedFilters.has(filter.getId()) === false) {\n            selected.push(filter);\n          } else {\n            bufferSizeEstimation -= filter.getSerializedSize(compression);\n          }\n        }\n      }\n    }\n\n    // If `selected` and `currentFilters` have the same length then no filter was removed.\n    const storedFiltersRemoved = selected.length !== currentFilters.length;\n\n    // Add new rules.\n    const numberOfExistingFilters: number = selected.length;\n    for (const filter of newFilters) {\n      bufferSizeEstimation += filter.getSerializedSize(compression);\n      selected.push(filter);\n    }\n\n    // Check if any new filter was added in `selected` (from `newFilters`).\n    const storedFiltersAdded: boolean = selected.length > numberOfExistingFilters;\n\n    // If selected changed, then update the compact representation of filters.\n    if (selected.length === 0) {\n      this.filters = EMPTY_FILTERS;\n    } else if (storedFiltersAdded === true || storedFiltersRemoved === true) {\n      // Store filters in their compact form\n      const buffer = StaticDataView.allocate(bufferSizeEstimation, this.config);\n      buffer.pushUint32(selected.length);\n\n      // When we run in `debug` mode, we enable fully deterministic updates of\n      // internal data-structure. To this effect, we sort all filters before\n      // insertion.\n      if (this.config.debug === true) {\n        selected.sort((f1: T, f2: T): number => f1.getId() - f2.getId());\n      }\n\n      for (const filter of selected) {\n        filter.serialize(buffer);\n      }\n\n      // Update internals\n      this.filters = buffer.buffer;\n    }\n  }\n\n  public getSerializedSize(): number {\n    return sizeOfBytes(this.filters, false /* no alignement */);\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushBytes(this.filters);\n  }\n\n  public getFilters(): T[] {\n    // No filter stored in the container\n    if (this.filters.byteLength <= 4) {\n      return [];\n    }\n\n    // Load all filters in memory and store them in `cache`\n    const filters: T[] = [];\n    const buffer = StaticDataView.fromUint8Array(this.filters, this.config);\n    const numberOfFilters = buffer.getUint32();\n    for (let i = 0; i < numberOfFilters; i += 1) {\n      filters.push(this.deserialize(buffer));\n    }\n\n    return filters;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport type { IMessageFromBackground } from '@cliqz/adblocker-content';\n\nimport { compactTokens, concatTypedArrays } from '../../compact-set';\nimport Config from '../../config';\nimport { StaticDataView } from '../../data-view';\nimport CosmeticFilter, { DEFAULT_HIDDING_STYLE } from '../../filters/cosmetic';\nimport {\n  getEntityHashesFromLabelsBackward,\n  getHostnameHashesFromLabelsBackward,\n} from '../../request';\nimport { hashStrings, tokenizeNoSkip } from '../../utils';\nimport { noopOptimizeCosmetic } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n\n/**\n * Given a list of CSS selectors, create a valid stylesheet ready to be\n * injected in the page. This also takes care to no create rules with too many\n * selectors for Chrome, see: https://crbug.com/804179\n */\nexport function createStylesheet(rules: string[], style: string): string {\n  if (rules.length === 0) {\n    return '';\n  }\n\n  const maximumNumberOfSelectors = 1024;\n  const parts: string[] = [];\n  const styleStr: string = ` { ${style} }`;\n\n  for (let i = 0; i < rules.length; i += maximumNumberOfSelectors) {\n    // Accumulate up to `maximumNumberOfSelectors` selectors into `selector`.\n    // We use string concatenation here since it's faster than using\n    // `Array.prototype.join`.\n    let selector = rules[i];\n    for (\n      let j = i + 1, end = Math.min(rules.length, i + maximumNumberOfSelectors);\n      j < end;\n      j += 1\n    ) {\n      selector += ',\\n' + rules[j];\n    }\n\n    // Insert CSS after last selector (e.g.: `{ display: none }`)\n    selector += styleStr;\n\n    // If `rules` has less than the limit, we can short-circuit here\n    if (rules.length < maximumNumberOfSelectors) {\n      return selector;\n    }\n\n    // Keep track of this chunk and process next ones\n    parts.push(selector);\n  }\n\n  // Join all chunks together\n  return parts.join('\\n');\n}\n\n/**\n * If at least one filter from `rules` has a custom style (e.g.: `##.foo\n * :style(...)`) then we fallback to `createStylesheetFromRulesWithCustomStyles`\n * which is slower than `createStylesheetFromRules`.\n */\nfunction createStylesheetFromRulesWithCustomStyles(rules: CosmeticFilter[]): string {\n  const selectorsPerStyle: Map<string, string[]> = new Map();\n\n  for (const rule of rules) {\n    const style = rule.getStyle();\n    const selectors = selectorsPerStyle.get(style);\n    if (selectors === undefined) {\n      selectorsPerStyle.set(style, [rule.getSelector()]);\n    } else {\n      selectors.push(rule.getSelector());\n    }\n  }\n\n  const stylesheets: string[] = [];\n  const selectorsPerStyleArray = Array.from(selectorsPerStyle.entries());\n  for (const [style, selectors] of selectorsPerStyleArray) {\n    stylesheets.push(createStylesheet(selectors, style));\n  }\n\n  return stylesheets.join('\\n\\n');\n}\n\n/**\n * Given a list of cosmetic filters, create a stylesheet ready to be injected.\n * This function is optimistic and will assume there is no `:style` filter in\n * `rules`. In case one is found on the way, we fallback to the slower\n * `createStylesheetFromRulesWithCustomStyles` function.\n */\nfunction createStylesheetFromRules(rules: CosmeticFilter[]): string {\n  const selectors: string[] = [];\n  for (const rule of rules) {\n    if (rule.hasCustomStyle()) {\n      return createStylesheetFromRulesWithCustomStyles(rules);\n    }\n\n    selectors.push(rule.selector);\n  }\n\n  return createStylesheet(selectors, DEFAULT_HIDDING_STYLE);\n}\n\nfunction createLookupTokens(hostname: string, domain: string): Uint32Array {\n  const hostnamesHashes = getHostnameHashesFromLabelsBackward(hostname, domain);\n  const entitiesHashes = getEntityHashesFromLabelsBackward(hostname, domain);\n  const tokens = new Uint32Array(hostnamesHashes.length + entitiesHashes.length);\n\n  let index = 0;\n\n  for (const hash of hostnamesHashes) {\n    tokens[index++] = hash;\n  }\n\n  for (const hash of entitiesHashes) {\n    tokens[index++] = hash;\n  }\n\n  return tokens;\n}\n\n/**\n * Efficient container for CosmeticFilter instances. Allows to quickly\n * retrieved scripts and stylesheets to inject in pages for a specific\n * hostname/domain.\n */\nexport default class CosmeticFilterBucket {\n  public static deserialize(buffer: StaticDataView, config: Config): CosmeticFilterBucket {\n    const bucket = new CosmeticFilterBucket({ config });\n\n    bucket.genericRules = FiltersContainer.deserialize(buffer, CosmeticFilter.deserialize, config);\n\n    bucket.classesIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.hostnameIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.hrefsIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.htmlIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.idsIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.unhideIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    return bucket;\n  }\n\n  // `genericRules` is a contiguous container of filters. In this case\n  // we keep track of all generic cosmetic filters, which allows us to\n  // efficiently inject them in any page (either all of them or none of\n  // them, without having to match against the hostname/domain of the\n  // page). Having them separated also makes it easier to disable them.\n  public genericRules: FiltersContainer<CosmeticFilter>;\n\n  // `hostnameIndex` contains all cosmetic filters which are specific to one or\n  // several domains (that includes entities as well). They are stored in a\n  // reverse index which allows to efficiently get a subset of the filters\n  // which could be injected on a given page (given hostname and domain).\n  public classesIndex: ReverseIndex<CosmeticFilter>;\n  public hostnameIndex: ReverseIndex<CosmeticFilter>;\n  public hrefsIndex: ReverseIndex<CosmeticFilter>;\n  public htmlIndex: ReverseIndex<CosmeticFilter>;\n  public idsIndex: ReverseIndex<CosmeticFilter>;\n  public unhideIndex: ReverseIndex<CosmeticFilter>;\n\n  // In-memory cache\n  public baseStylesheet: string | null;\n  public extraGenericRules: CosmeticFilter[] | null;\n\n  constructor({ filters = [], config }: { filters?: CosmeticFilter[]; config: Config }) {\n    this.genericRules = new FiltersContainer({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n    });\n\n    this.classesIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.hostnameIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.hrefsIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.htmlIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.idsIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.unhideIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    // In-memory cache, lazily initialized\n    this.baseStylesheet = null;\n    this.extraGenericRules = null;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined, config);\n    }\n  }\n\n  public getFilters(): CosmeticFilter[] {\n    const filters: CosmeticFilter[] = [];\n    return filters.concat(\n      this.genericRules.getFilters(),\n      this.classesIndex.getFilters(),\n      this.hostnameIndex.getFilters(),\n      this.hrefsIndex.getFilters(),\n      this.htmlIndex.getFilters(),\n      this.idsIndex.getFilters(),\n      this.unhideIndex.getFilters(),\n    );\n  }\n\n  public update(\n    newFilters: CosmeticFilter[],\n    removedFilters: Set<number> | undefined,\n    config: Config,\n  ): void {\n    const classSelectors: CosmeticFilter[] = [];\n    const genericHideRules: CosmeticFilter[] = [];\n    const hostnameSpecificRules: CosmeticFilter[] = [];\n    const hrefSelectors: CosmeticFilter[] = [];\n    const htmlRules: CosmeticFilter[] = [];\n    const idSelectors: CosmeticFilter[] = [];\n    const unHideRules: CosmeticFilter[] = [];\n\n    for (const rule of newFilters) {\n      if (rule.isUnhide()) {\n        unHideRules.push(rule);\n      } else if (rule.isHtmlFiltering()) {\n        htmlRules.push(rule);\n      } else if (rule.isGenericHide()) {\n        if (rule.isClassSelector()) {\n          classSelectors.push(rule);\n        } else if (rule.isIdSelector()) {\n          idSelectors.push(rule);\n        } else if (rule.isHrefSelector()) {\n          hrefSelectors.push(rule);\n        } else {\n          genericHideRules.push(rule);\n        }\n      } else if (rule.isExtended() === false || config.loadExtendedSelectors === true) {\n        hostnameSpecificRules.push(rule);\n      }\n    }\n\n    this.genericRules.update(genericHideRules, removedFilters);\n    this.classesIndex.update(classSelectors, removedFilters);\n    this.hostnameIndex.update(hostnameSpecificRules, removedFilters);\n    this.hrefsIndex.update(hrefSelectors, removedFilters);\n    this.htmlIndex.update(htmlRules, removedFilters);\n    this.idsIndex.update(idSelectors, removedFilters);\n    this.unhideIndex.update(unHideRules, removedFilters);\n  }\n\n  public getSerializedSize(): number {\n    return (\n      this.genericRules.getSerializedSize() +\n      this.classesIndex.getSerializedSize() +\n      this.hostnameIndex.getSerializedSize() +\n      this.hrefsIndex.getSerializedSize() +\n      this.htmlIndex.getSerializedSize() +\n      this.idsIndex.getSerializedSize() +\n      this.unhideIndex.getSerializedSize()\n    );\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    this.genericRules.serialize(buffer);\n    this.classesIndex.serialize(buffer);\n    this.hostnameIndex.serialize(buffer);\n    this.hrefsIndex.serialize(buffer);\n    this.htmlIndex.serialize(buffer);\n    this.idsIndex.serialize(buffer);\n    this.unhideIndex.serialize(buffer);\n  }\n\n  public getHtmlRules({\n    domain,\n    hostname,\n  }: {\n    domain: string;\n    hostname: string;\n  }): CosmeticFilter[] {\n    // Tokens from `hostname` and `domain` which will be used to lookup filters\n    // from the reverse index. The same tokens are re-used for multiple indices.\n    const hostnameTokens = createLookupTokens(hostname, domain);\n    const rules: CosmeticFilter[] = [];\n    this.htmlIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n      if (rule.match(hostname, domain)) {\n        rules.push(rule);\n      }\n      return true;\n    });\n\n    // If we found at least one candidate, check if we have unhidden rules.\n    const disabledRules: Set<string> = new Set();\n    if (rules.length !== 0) {\n      this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          disabledRules.add(rule.getSelector());\n        }\n\n        return true;\n      });\n    }\n\n    return rules.filter(\n      (rule) => disabledRules.size === 0 || disabledRules.has(rule.getSelector()) === false,\n    );\n  }\n\n  /**\n   * Request cosmetics and scripts to inject in a page.\n   */\n  public getCosmeticsFilters({\n    domain,\n    hostname,\n\n    classes = [],\n    hrefs = [],\n    ids = [],\n\n    allowGenericHides = true,\n    allowSpecificHides = true,\n\n    // Allows to specify which rules to return\n    getBaseRules = true,\n    getInjectionRules = true,\n    getExtendedRules = true,\n    getRulesFromDOM = true,\n    getRulesFromHostname = true,\n  }: {\n    domain: string;\n    hostname: string;\n\n    classes?: string[];\n    hrefs?: string[];\n    ids?: string[];\n\n    allowGenericHides: boolean;\n    allowSpecificHides: boolean;\n\n    getBaseRules?: boolean;\n    getInjectionRules?: boolean;\n    getExtendedRules?: boolean;\n    getRulesFromDOM?: boolean;\n    getRulesFromHostname?: boolean;\n  }): {\n    injections: CosmeticFilter[];\n    extended: IMessageFromBackground['extended'];\n    stylesheet: string;\n  } {\n    // Tokens from `hostname` and `domain` which will be used to lookup filters\n    // from the reverse index. The same tokens are re-used for multiple indices.\n    const hostnameTokens = createLookupTokens(hostname, domain);\n    const rules: CosmeticFilter[] = [];\n\n    // =======================================================================\n    // Rules: hostname-specific\n    // =======================================================================\n    // Collect matching rules which specify a hostname constraint.\n    if (getRulesFromHostname === true) {\n      this.hostnameIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        // A hostname-specific filter is considered if it's a scriptlet (not\n        // impacted by disabling of specific filters) or specific hides are\n        // allowed.\n        if (\n          (allowSpecificHides === true || rule.isScriptInject() === true) &&\n          rule.match(hostname, domain)\n        ) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Rules: generic hide\n    // =======================================================================\n    // Optionally, collect genericHide rules. We need to make sure the `rule`\n    // matches the hostname and domain since some generic rules can specify\n    // negated hostnames and entities (e.g.: ~foo.*##generic).\n    if (allowGenericHides === true && getRulesFromHostname === true) {\n      const genericRules = this.getGenericRules();\n      for (const rule of genericRules) {\n        if (rule.match(hostname, domain) === true) {\n          rules.push(rule);\n        }\n      }\n    }\n\n    // =======================================================================\n    // Class selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && classes.length !== 0) {\n      this.classesIndex.iterMatchingFilters(hashStrings(classes), (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Id selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && ids.length !== 0) {\n      this.idsIndex.iterMatchingFilters(hashStrings(ids), (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Href selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && hrefs.length !== 0) {\n      this.hrefsIndex.iterMatchingFilters(\n        compactTokens(concatTypedArrays(hrefs.map((href) => tokenizeNoSkip(href)))),\n        (rule: CosmeticFilter) => {\n          if (rule.match(hostname, domain)) {\n            rules.push(rule);\n          }\n          return true;\n        },\n      );\n    }\n\n    const extended: CosmeticFilter[] = [];\n    const injections: CosmeticFilter[] = [];\n    const styles: CosmeticFilter[] = [];\n\n    // If we found at least one candidate, check if we have unhidden rules,\n    // apply them and dispatch rules into `injections` (i.e.: '+js(...)'),\n    // `extended` (i.e. :not(...)), and `styles` (i.e.: '##rule').\n    if (rules.length !== 0) {\n      // =======================================================================\n      // Rules: unhide\n      // =======================================================================\n      // Collect unhidden selectors. They will be used to filter-out canceled\n      // rules from other indices.\n      let injectionsDisabled = false;\n      const disabledRules: Set<string> = new Set();\n      this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          disabledRules.add(rule.getSelector());\n\n          // Detect special +js() rules to disable scriptlet injections\n          if (\n            rule.isScriptInject() === true &&\n            rule.isUnhide() === true &&\n            rule.getSelector().length === 0\n          ) {\n            injectionsDisabled = true;\n          }\n        }\n\n        return true;\n      });\n\n      // Apply unhide rules + dispatch\n      for (const rule of rules) {\n        // Make sure `rule` is not un-hidden by a #@# filter\n        if (disabledRules.size !== 0 && disabledRules.has(rule.getSelector())) {\n          continue;\n        }\n\n        // Dispatch rules in `injections` or `styles` depending on type\n        if (rule.isScriptInject() === true) {\n          if (getInjectionRules === true && injectionsDisabled === false) {\n            injections.push(rule);\n          }\n        } else if (rule.isExtended()) {\n          if (getExtendedRules === true) {\n            extended.push(rule);\n          }\n        } else {\n          styles.push(rule);\n        }\n      }\n    }\n\n    // Create final stylesheet\n    let stylesheet: string =\n      getBaseRules === false || allowGenericHides === false ? '' : this.getBaseStylesheet();\n\n    if (styles.length !== 0) {\n      if (stylesheet.length !== 0) {\n        stylesheet += '\\n\\n';\n      }\n\n      stylesheet += createStylesheetFromRules(styles);\n    }\n\n    const extendedProcessed: IMessageFromBackground['extended'] = [];\n    if (extended.length !== 0) {\n      const extendedStyles: Map<string, string> = new Map();\n      for (const rule of extended) {\n        const ast = rule.getSelectorAST();\n        if (ast !== undefined) {\n          const attribute = rule.isRemove() ? undefined : rule.getStyleAttributeHash();\n\n          if (attribute !== undefined) {\n            extendedStyles.set(rule.getStyle(), attribute);\n          }\n\n          extendedProcessed.push({\n            ast,\n            remove: rule.isRemove(),\n            attribute,\n          });\n        }\n      }\n\n      if (extendedStyles.size !== 0) {\n        if (stylesheet.length !== 0) {\n          stylesheet += '\\n\\n';\n        }\n\n        stylesheet += [...extendedStyles.entries()]\n          .map(([style, attribute]) => `[${attribute}] { ${style} }`)\n          .join('\\n\\n');\n      }\n    }\n\n    return {\n      extended: extendedProcessed,\n      injections,\n      stylesheet,\n    };\n  }\n\n  /**\n   * Return the list of filters which can potentially be un-hidden by another\n   * rule currently contained in the cosmetic bucket.\n   */\n  private getGenericRules(): CosmeticFilter[] {\n    if (this.extraGenericRules === null) {\n      return this.lazyPopulateGenericRulesCache().genericRules;\n    }\n    return this.extraGenericRules;\n  }\n\n  /**\n   * The base stylesheet is made of generic filters (not specific to any\n   * hostname) which cannot be hidden (i.e.: there is currently no rule which\n   * might hide their selector). This means that it will never change and is\n   * the same for all sites. We generate it once and re-use it any-time we want\n   * to inject it.\n   */\n  private getBaseStylesheet(): string {\n    if (this.baseStylesheet === null) {\n      return this.lazyPopulateGenericRulesCache().baseStylesheet;\n    }\n    return this.baseStylesheet;\n  }\n\n  /**\n   * This is used to lazily generate both the list of generic rules which can\n   * *potentially be un-hidden* (i.e.: there exists at least one unhide rule\n   * for the selector) and a stylesheet containing all selectors which cannot\n   * be un-hidden. Since this list will not change between updates we can\n   * generate once and use many times.\n   */\n  private lazyPopulateGenericRulesCache(): {\n    baseStylesheet: string;\n    genericRules: CosmeticFilter[];\n  } {\n    if (this.baseStylesheet === null || this.extraGenericRules === null) {\n      // Collect all selectors which can be subjected to an unhide rule\n      const unHideRules = this.unhideIndex.getFilters();\n      const canBeHiddenSelectors: Set<string> = new Set();\n      for (const rule of unHideRules) {\n        canBeHiddenSelectors.add(rule.getSelector());\n      }\n\n      // Split generic rules into two groups:\n      // 1. Rules which cannot be hidden\n      // 2. Rules which can be hidden on some domains\n      //\n      // This allows to create a base stylesheet which we know will never\n      // change then keep a minority of rules in-memory which can potentially\n      // be hidden.\n      const genericRules = this.genericRules.getFilters();\n      const cannotBeHiddenRules: CosmeticFilter[] = [];\n      const canBeHiddenRules: CosmeticFilter[] = [];\n      for (const rule of genericRules) {\n        if (\n          rule.hasCustomStyle() ||\n          rule.isScriptInject() ||\n          rule.hasHostnameConstraint() ||\n          canBeHiddenSelectors.has(rule.getSelector())\n        ) {\n          canBeHiddenRules.push(rule);\n        } else {\n          cannotBeHiddenRules.push(rule);\n        }\n      }\n\n      this.baseStylesheet = createStylesheetFromRules(cannotBeHiddenRules);\n      this.extraGenericRules = canBeHiddenRules;\n    }\n\n    return {\n      baseStylesheet: this.baseStylesheet,\n      genericRules: this.extraGenericRules,\n    };\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../../config';\nimport { StaticDataView } from '../../data-view';\nimport NetworkFilter from '../../filters/network';\nimport Request from '../../request';\nimport { noopOptimizeNetwork, optimizeNetwork } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n\n/**\n * Accelerating data structure for network filters matching.\n */\nexport default class NetworkFilterBucket {\n  public static deserialize(buffer: StaticDataView, config: Config): NetworkFilterBucket {\n    const bucket = new NetworkFilterBucket({ config });\n\n    bucket.index = ReverseIndex.deserialize(\n      buffer,\n      NetworkFilter.deserialize,\n      config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n      config,\n    );\n\n    bucket.badFilters = FiltersContainer.deserialize(buffer, NetworkFilter.deserialize, config);\n\n    return bucket;\n  }\n\n  public index: ReverseIndex<NetworkFilter>;\n\n  // `badFilters` are filters specifying a $badfilter option. They can be used\n  // to disable completely another filter (usually to fix breakage). They are\n  // stored separately so that we can quickly check if matching filters (from\n  // `match` and `matchAll` methods) should be ignored or not.\n  public badFilters: FiltersContainer<NetworkFilter>;\n\n  // Lazy attribute containing IDs of $badfilter to quickly check which filters\n  // should be disabled (only one lookup is needed).\n  private badFiltersIds: Set<number> | null;\n\n  constructor({ filters = [], config }: { filters?: NetworkFilter[]; config: Config }) {\n    this.index = new ReverseIndex({\n      config,\n      deserialize: NetworkFilter.deserialize,\n      filters: [],\n      optimize: config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n    });\n\n    this.badFiltersIds = null;\n    this.badFilters = new FiltersContainer({\n      config,\n      deserialize: NetworkFilter.deserialize,\n      filters: [],\n    });\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  public getFilters(): NetworkFilter[] {\n    const filters: NetworkFilter[] = [];\n    return filters.concat(this.badFilters.getFilters(), this.index.getFilters());\n  }\n\n  public update(newFilters: NetworkFilter[], removedFilters: Set<number> | undefined): void {\n    const badFilters: NetworkFilter[] = [];\n    const remaining: NetworkFilter[] = [];\n    for (const filter of newFilters) {\n      if (filter.isBadFilter()) {\n        badFilters.push(filter);\n      } else {\n        remaining.push(filter);\n      }\n    }\n\n    this.badFilters.update(badFilters, removedFilters);\n    this.index.update(remaining, removedFilters);\n    this.badFiltersIds = null;\n  }\n\n  public getSerializedSize(): number {\n    return this.badFilters.getSerializedSize() + this.index.getSerializedSize();\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    this.index.serialize(buffer);\n    this.badFilters.serialize(buffer);\n  }\n\n  public matchAll(request: Request): NetworkFilter[] {\n    const filters: NetworkFilter[] = [];\n\n    this.index.iterMatchingFilters(request.getTokens(), (filter: NetworkFilter) => {\n      if (filter.match(request) && this.isFilterDisabled(filter) === false) {\n        filters.push(filter);\n      }\n      return true;\n    });\n\n    return filters;\n  }\n\n  public match(request: Request): NetworkFilter | undefined {\n    let match: NetworkFilter | undefined;\n\n    this.index.iterMatchingFilters(request.getTokens(), (filter: NetworkFilter) => {\n      if (filter.match(request) && this.isFilterDisabled(filter) === false) {\n        match = filter;\n        return false;\n      }\n      return true;\n    });\n\n    return match;\n  }\n\n  /**\n   * Given a matching filter, check if it is disabled by a $badfilter\n   */\n  private isFilterDisabled(filter: NetworkFilter): boolean {\n    // Lazily load information about bad filters in memory. The only thing we\n    // keep in memory is the list of IDs from $badfilter (ignoring the\n    // $badfilter option from mask). This allows to check if a matching filter\n    // should be ignored just by doing a lookup in a set of IDs.\n    if (this.badFiltersIds === null) {\n      const badFilters = this.badFilters.getFilters();\n\n      // Shortcut if there is no badfilter in this bucket\n      if (badFilters.length === 0) {\n        return false;\n      }\n\n      // Create in-memory list of disabled filter IDs\n      const badFiltersIds: Set<number> = new Set();\n      for (const badFilter of badFilters) {\n        badFiltersIds.add(badFilter.getIdWithoutBadFilter());\n      }\n      this.badFiltersIds = badFiltersIds;\n    }\n\n    return this.badFiltersIds.has(filter.getId());\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport type { IMessageFromBackground } from '@cliqz/adblocker-content';\n\nimport Config from '../config';\nimport { StaticDataView, sizeOfASCII, sizeOfByte } from '../data-view';\nimport { EventEmitter } from '../events';\nimport {\n  adsAndTrackingLists,\n  adsLists,\n  Fetch,\n  fetchLists,\n  fetchResources,\n  fullLists,\n} from '../fetch';\nimport { HTMLSelector } from '../html-filtering';\nimport CosmeticFilter from '../filters/cosmetic';\nimport NetworkFilter from '../filters/network';\nimport { block } from '../filters/dsl';\nimport { IListDiff, IRawDiff, parseFilters } from '../lists';\nimport Request from '../request';\nimport Resources from '../resources';\nimport CosmeticFilterBucket from './bucket/cosmetic';\nimport NetworkFilterBucket from './bucket/network';\n\nexport const ENGINE_VERSION = 432;\n\nfunction shouldApplyHideException(filters: NetworkFilter[]): boolean {\n  if (filters.length === 0) {\n    return false;\n  }\n\n  // Get $Xhide filter with highest priority:\n  // $Xhide,important > $Xhide > @@$Xhide\n  let genericHideFilter: NetworkFilter | undefined;\n  let currentScore = 0;\n  for (const filter of filters) {\n    // To encode priority between filters, we create a bitmask with the following:\n    // $important,Xhide = 100 (takes precedence)\n    // $Xhide           = 010 (exception to @@$Xhide)\n    // @@$Xhide         = 001 (forbids Xhide filters)\n    const score: number = (filter.isImportant() ? 4 : 0) | (filter.isException() ? 1 : 2);\n\n    // Highest `score` has precedence\n    if (score >= currentScore) {\n      currentScore = score;\n      genericHideFilter = filter;\n    }\n  }\n\n  if (genericHideFilter === undefined) {\n    return false;\n  }\n\n  // Check that there is at least one $generichide match and no exception\n  return genericHideFilter.isException();\n}\n\nexport interface BlockingResponse {\n  match: boolean;\n  redirect:\n    | undefined\n    | {\n        body: string;\n        contentType: string;\n        dataUrl: string;\n      };\n  exception: NetworkFilter | undefined;\n  filter: NetworkFilter | undefined;\n}\n\nexport interface Caching {\n  path: string;\n  read: (path: string) => Promise<Uint8Array>;\n  write: (path: string, buffer: Uint8Array) => Promise<void>;\n}\n\nexport default class FilterEngine extends EventEmitter<\n  | 'csp-injected'\n  | 'html-filtered'\n  | 'request-allowed'\n  | 'request-blocked'\n  | 'request-redirected'\n  | 'request-whitelisted'\n  | 'script-injected'\n  | 'style-injected'\n> {\n  private static fromCached<T extends typeof FilterEngine>(\n    this: T,\n    init: () => Promise<InstanceType<T>>,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    if (caching === undefined) {\n      return init();\n    }\n\n    const { path, read, write } = caching;\n    return read(path)\n      .then((buffer) => this.deserialize(buffer) as InstanceType<T>)\n      .catch(() => init().then((engine) => write(path, engine.serialize()).then(() => engine)));\n  }\n\n  public static empty<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    config: Partial<Config> = {},\n  ): T {\n    return new this({ config });\n  }\n\n  /**\n   * Create an instance of `FiltersEngine` (or subclass like `ElectronBlocker`,\n   * etc.), from the list of subscriptions provided as argument (e.g.:\n   * EasyList).\n   *\n   * Lists are fetched using the instance of `fetch` provided as a first\n   * argument. Optionally resources.txt and config can be provided.\n   */\n  public static fromLists<T extends typeof FilterEngine>(\n    this: T,\n    fetch: Fetch,\n    urls: string[],\n    config: Partial<Config> = {},\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromCached(() => {\n      const listsPromises = fetchLists(fetch, urls);\n      const resourcesPromise = fetchResources(fetch);\n\n      return Promise.all([listsPromises, resourcesPromise]).then(([lists, resources]) => {\n        const engine = this.parse(lists.join('\\n'), config);\n        if (resources !== undefined) {\n          engine.updateResources(resources, '' + resources.length);\n        }\n\n        return engine as InstanceType<T>;\n      });\n    }, caching);\n  }\n\n  /**\n   * Initialize blocker of *ads only*.\n   *\n   * Attempt to initialize a blocking engine using a pre-built version served\n   * from Cliqz's CDN. If this fails (e.g.: if no pre-built engine is available\n   * for this version of the library), then falls-back to using `fromLists(...)`\n   * method with the same subscriptions.\n   */\n  public static fromPrebuiltAdsOnly<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, adsLists, {}, caching);\n  }\n\n  /**\n   * Same as `fromPrebuiltAdsOnly(...)` but also contains rules to block\n   * tracking (i.e.: using extra lists such as EasyPrivacy and more).\n   */\n  public static fromPrebuiltAdsAndTracking<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, adsAndTrackingLists, {}, caching);\n  }\n\n  /**\n   * Same as `fromPrebuiltAdsAndTracking(...)` but also contains annoyances\n   * rules to block things like cookie notices.\n   */\n  public static fromPrebuiltFull<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, fullLists, {}, caching);\n  }\n\n  public static parse<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    filters: string,\n    options: Partial<Config> = {},\n  ): T {\n    const config = new Config(options);\n    return new this({\n      ...parseFilters(filters, config),\n      config,\n    });\n  }\n\n  public static deserialize<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    serialized: Uint8Array,\n  ): T {\n    const buffer = StaticDataView.fromUint8Array(serialized, {\n      enableCompression: false,\n    });\n\n    // Before starting deserialization, we make sure that the version of the\n    // serialized engine is the same as the current source code. If not, we\n    // start fresh and create a new engine from the lists.\n    const serializedEngineVersion = buffer.getUint16();\n    if (ENGINE_VERSION !== serializedEngineVersion) {\n      throw new Error(\n        `serialized engine version mismatch, expected ${ENGINE_VERSION} but got ${serializedEngineVersion}`,\n      );\n    }\n\n    // Create a new engine with same options\n    const config = Config.deserialize(buffer);\n\n    // Optionally turn compression ON\n    if (config.enableCompression) {\n      buffer.enableCompression();\n    }\n\n    // Also make sure that the built-in checksum is correct. This allows to\n    // detect data corruption and start fresh if the serialized version was\n    // altered.\n    if (config.integrityCheck) {\n      const currentPos = buffer.pos;\n      buffer.pos = serialized.length - 4;\n      const checksum = buffer.checksum();\n      const expected = buffer.getUint32();\n      if (checksum !== expected) {\n        throw new Error(\n          `serialized engine checksum mismatch, expected ${expected} but got ${checksum}`,\n        );\n      }\n      buffer.pos = currentPos;\n    }\n\n    const engine = new this({ config });\n\n    // Deserialize resources\n    engine.resources = Resources.deserialize(buffer);\n\n    // Deserialize lists\n    const lists = new Map();\n    const numberOfLists = buffer.getUint16();\n    for (let i = 0; i < numberOfLists; i += 1) {\n      lists.set(buffer.getASCII(), buffer.getASCII());\n    }\n    engine.lists = lists;\n\n    // Deserialize buckets\n    engine.importants = NetworkFilterBucket.deserialize(buffer, config);\n    engine.redirects = NetworkFilterBucket.deserialize(buffer, config);\n    engine.filters = NetworkFilterBucket.deserialize(buffer, config);\n    engine.exceptions = NetworkFilterBucket.deserialize(buffer, config);\n\n    engine.csp = NetworkFilterBucket.deserialize(buffer, config);\n    engine.cosmetics = CosmeticFilterBucket.deserialize(buffer, config);\n    engine.hideExceptions = NetworkFilterBucket.deserialize(buffer, config);\n\n    return engine;\n  }\n\n  public lists: Map<string, string>;\n\n  public csp: NetworkFilterBucket;\n  public hideExceptions: NetworkFilterBucket;\n  public exceptions: NetworkFilterBucket;\n  public importants: NetworkFilterBucket;\n  public redirects: NetworkFilterBucket;\n  public filters: NetworkFilterBucket;\n  public cosmetics: CosmeticFilterBucket;\n\n  public resources: Resources;\n  public readonly config: Config;\n\n  constructor({\n    // Optionally initialize the engine with filters\n    cosmeticFilters = [],\n    networkFilters = [],\n\n    config = new Config(),\n    lists = new Map(),\n  }: {\n    cosmeticFilters?: CosmeticFilter[];\n    networkFilters?: NetworkFilter[];\n    lists?: Map<string, string>;\n    config?: Partial<Config>;\n  } = {}) {\n    super(); // init super-class EventEmitter\n\n    this.config = new Config(config);\n\n    // Subscription management: disabled by default\n    this.lists = lists;\n\n    // $csp=\n    this.csp = new NetworkFilterBucket({ config: this.config });\n    // $elemhide\n    // $generichide\n    // $specifichide\n    this.hideExceptions = new NetworkFilterBucket({ config: this.config });\n    // @@filter\n    this.exceptions = new NetworkFilterBucket({ config: this.config });\n    // $important\n    this.importants = new NetworkFilterBucket({ config: this.config });\n    // $redirect\n    this.redirects = new NetworkFilterBucket({ config: this.config });\n    // All other filters\n    this.filters = new NetworkFilterBucket({ config: this.config });\n    // Cosmetic filters\n    this.cosmetics = new CosmeticFilterBucket({ config: this.config });\n\n    // Injections\n    this.resources = new Resources();\n\n    if (networkFilters.length !== 0 || cosmeticFilters.length !== 0) {\n      this.update({\n        newCosmeticFilters: cosmeticFilters,\n        newNetworkFilters: networkFilters,\n      });\n    }\n  }\n\n  /**\n   * Estimate the number of bytes needed to serialize this instance of\n   * `FiltersEngine` using the `serialize(...)` method. It is used internally\n   * by `serialize(...)` to allocate a buffer of the right size and you should\n   * not have to call it yourself most of the time.\n   *\n   * There are cases where we cannot estimate statically the exact size of the\n   * resulting buffer (due to alignement which need to be performed); this\n   * method will return a safe estimate which will always be at least equal to\n   * the real number of bytes needed, or bigger (usually of a few bytes only:\n   * ~20 bytes is to be expected).\n   */\n  public getSerializedSize(): number {\n    let estimatedSize: number =\n      sizeOfByte() + // engine version\n      this.config.getSerializedSize() +\n      this.resources.getSerializedSize() +\n      this.filters.getSerializedSize() +\n      this.exceptions.getSerializedSize() +\n      this.importants.getSerializedSize() +\n      this.redirects.getSerializedSize() +\n      this.csp.getSerializedSize() +\n      this.cosmetics.getSerializedSize() +\n      this.hideExceptions.getSerializedSize() +\n      4; // checksum\n\n    // Estimate size of `this.lists` which stores information of checksum for each list.\n    for (const [name, checksum] of this.lists) {\n      estimatedSize += sizeOfASCII(name) + sizeOfASCII(checksum);\n    }\n\n    return estimatedSize;\n  }\n\n  /**\n   * Creates a binary representation of the full engine. It can be stored\n   * on-disk for faster loading of the adblocker. The `deserialize` static\n   * method of Engine can be used to restore the engine.\n   */\n  public serialize(array?: Uint8Array): Uint8Array {\n    const buffer = StaticDataView.fromUint8Array(\n      array || new Uint8Array(this.getSerializedSize()),\n      this.config,\n    );\n\n    buffer.pushUint16(ENGINE_VERSION);\n\n    // Config\n    this.config.serialize(buffer);\n\n    // Resources (js, resources)\n    this.resources.serialize(buffer);\n\n    // Serialize the state of lists (names and checksums)\n    buffer.pushUint16(this.lists.size);\n    for (const [name, value] of Array.from(this.lists.entries()).sort()) {\n      buffer.pushASCII(name);\n      buffer.pushASCII(value);\n    }\n\n    // Filters buckets\n    this.importants.serialize(buffer);\n    this.redirects.serialize(buffer);\n    this.filters.serialize(buffer);\n    this.exceptions.serialize(buffer);\n\n    this.csp.serialize(buffer);\n    this.cosmetics.serialize(buffer);\n    this.hideExceptions.serialize(buffer);\n\n    // Optionally append a checksum at the end\n    if (this.config.integrityCheck) {\n      buffer.pushUint32(buffer.checksum());\n    }\n\n    return buffer.subarray();\n  }\n\n  /**\n   * Update engine with new filters or resources.\n   */\n  public loadedLists(): string[] {\n    return Array.from(this.lists.keys());\n  }\n\n  public hasList(name: string, checksum: string): boolean {\n    return this.lists.has(name) && this.lists.get(name) === checksum;\n  }\n\n  /**\n   * Update engine with `resources.txt` content.\n   */\n  public updateResources(data: string, checksum: string): boolean {\n    if (this.resources.checksum === checksum) {\n      return false;\n    }\n\n    this.resources = Resources.parse(data, { checksum });\n    return true;\n  }\n\n  public getFilters(): { networkFilters: NetworkFilter[]; cosmeticFilters: CosmeticFilter[] } {\n    const cosmeticFilters: CosmeticFilter[] = [];\n    const networkFilters: NetworkFilter[] = [];\n\n    return {\n      cosmeticFilters: cosmeticFilters.concat(this.cosmetics.getFilters()),\n      networkFilters: networkFilters.concat(\n        this.filters.getFilters(),\n        this.exceptions.getFilters(),\n        this.importants.getFilters(),\n        this.redirects.getFilters(),\n        this.csp.getFilters(),\n        this.hideExceptions.getFilters(),\n      ),\n    };\n  }\n\n  /**\n   * Update engine with new filters as well as optionally removed filters.\n   */\n  public update({\n    newNetworkFilters = [],\n    newCosmeticFilters = [],\n    removedCosmeticFilters = [],\n    removedNetworkFilters = [],\n  }: Partial<IListDiff>): boolean {\n    let updated: boolean = false;\n\n    // Update cosmetic filters\n    if (\n      this.config.loadCosmeticFilters &&\n      (newCosmeticFilters.length !== 0 || removedCosmeticFilters.length !== 0)\n    ) {\n      updated = true;\n      this.cosmetics.update(\n        newCosmeticFilters,\n        removedCosmeticFilters.length === 0 ? undefined : new Set(removedCosmeticFilters),\n        this.config,\n      );\n    }\n\n    // Update network filters\n    if (\n      this.config.loadNetworkFilters &&\n      (newNetworkFilters.length !== 0 || removedNetworkFilters.length !== 0)\n    ) {\n      updated = true;\n      const filters: NetworkFilter[] = [];\n      const csp: NetworkFilter[] = [];\n      const exceptions: NetworkFilter[] = [];\n      const importants: NetworkFilter[] = [];\n      const redirects: NetworkFilter[] = [];\n      const hideExceptions: NetworkFilter[] = [];\n\n      for (const filter of newNetworkFilters) {\n        // NOTE: it's important to check for $generichide, $elemhide,\n        // $specifichide and $csp before exceptions and important as we store\n        // all of them in the same filter bucket. The check for exceptions is\n        // done at match-time directly.\n        if (filter.isCSP()) {\n          csp.push(filter);\n        } else if (filter.isGenericHide() || filter.isSpecificHide()) {\n          hideExceptions.push(filter);\n        } else if (filter.isException()) {\n          exceptions.push(filter);\n        } else if (filter.isImportant()) {\n          importants.push(filter);\n        } else if (filter.isRedirect()) {\n          redirects.push(filter);\n        } else {\n          filters.push(filter);\n        }\n      }\n\n      const removedNetworkFiltersSet: Set<number> | undefined =\n        removedNetworkFilters.length === 0 ? undefined : new Set(removedNetworkFilters);\n\n      // Update buckets in-place\n      this.importants.update(importants, removedNetworkFiltersSet);\n      this.redirects.update(redirects, removedNetworkFiltersSet);\n      this.filters.update(filters, removedNetworkFiltersSet);\n\n      if (this.config.loadExceptionFilters === true) {\n        this.exceptions.update(exceptions, removedNetworkFiltersSet);\n      }\n\n      if (this.config.loadCSPFilters === true) {\n        this.csp.update(csp, removedNetworkFiltersSet);\n      }\n\n      this.hideExceptions.update(hideExceptions, removedNetworkFiltersSet);\n    }\n\n    return updated;\n  }\n\n  public updateFromDiff({ added, removed }: Partial<IRawDiff>): boolean {\n    const newCosmeticFilters: CosmeticFilter[] = [];\n    const newNetworkFilters: NetworkFilter[] = [];\n    const removedCosmeticFilters: CosmeticFilter[] = [];\n    const removedNetworkFilters: NetworkFilter[] = [];\n\n    if (removed !== undefined && removed.length !== 0) {\n      const { networkFilters, cosmeticFilters } = parseFilters(removed.join('\\n'), this.config);\n      Array.prototype.push.apply(removedCosmeticFilters, cosmeticFilters);\n      Array.prototype.push.apply(removedNetworkFilters, networkFilters);\n    }\n\n    if (added !== undefined && added.length !== 0) {\n      const { networkFilters, cosmeticFilters } = parseFilters(added.join('\\n'), this.config);\n      Array.prototype.push.apply(newCosmeticFilters, cosmeticFilters);\n      Array.prototype.push.apply(newNetworkFilters, networkFilters);\n    }\n\n    return this.update({\n      newCosmeticFilters,\n      newNetworkFilters,\n      removedCosmeticFilters: removedCosmeticFilters.map((f) => f.getId()),\n      removedNetworkFilters: removedNetworkFilters.map((f) => f.getId()),\n    });\n  }\n\n  /**\n   * Return a list of HTML filtering rules.\n   */\n  public getHtmlFilters({\n    // Page information\n    url,\n    hostname,\n    domain,\n  }: {\n    url: string;\n    hostname: string;\n    domain: string | null | undefined;\n  }): HTMLSelector[] {\n    const htmlSelectors: HTMLSelector[] = [];\n\n    if (this.config.enableHtmlFiltering === false || this.config.loadCosmeticFilters === false) {\n      return htmlSelectors;\n    }\n\n    const rules = this.cosmetics.getHtmlRules({\n      domain: domain || '',\n      hostname,\n    });\n\n    for (const rule of rules) {\n      const extended = rule.getExtendedSelector();\n      if (extended !== undefined) {\n        htmlSelectors.push(extended);\n      }\n    }\n\n    if (htmlSelectors.length !== 0) {\n      this.emit('html-filtered', htmlSelectors, url);\n    }\n\n    return htmlSelectors;\n  }\n\n  /**\n   * Given `hostname` and `domain` of a page (or frame), return the list of\n   * styles and scripts to inject in the page.\n   */\n  public getCosmeticsFilters({\n    // Page information\n    url,\n    hostname,\n    domain,\n\n    // DOM information\n    classes,\n    hrefs,\n    ids,\n\n    // Allows to specify which rules to return\n    getBaseRules = true,\n    getInjectionRules = true,\n    getExtendedRules = true,\n    getRulesFromDOM = true,\n    getRulesFromHostname = true,\n  }: {\n    url: string;\n    hostname: string;\n    domain: string | null | undefined;\n\n    classes?: string[];\n    hrefs?: string[];\n    ids?: string[];\n\n    getBaseRules?: boolean;\n    getInjectionRules?: boolean;\n    getExtendedRules?: boolean;\n    getRulesFromDOM?: boolean;\n    getRulesFromHostname?: boolean;\n  }): IMessageFromBackground {\n    if (this.config.loadCosmeticFilters === false) {\n      return {\n        active: false,\n        extended: [],\n        scripts: [],\n        styles: '',\n      };\n    }\n\n    let allowGenericHides = true;\n    let allowSpecificHides = true;\n\n    const exceptions = this.hideExceptions.matchAll(\n      Request.fromRawDetails({\n        domain: domain || '',\n        hostname,\n        url,\n\n        sourceDomain: '',\n        sourceHostname: '',\n        sourceUrl: '',\n      }),\n    );\n\n    const genericHides: NetworkFilter[] = [];\n    const specificHides: NetworkFilter[] = [];\n    for (const filter of exceptions) {\n      if (filter.isElemHide()) {\n        allowGenericHides = false;\n        allowSpecificHides = false;\n        break;\n      }\n\n      if (filter.isSpecificHide()) {\n        specificHides.push(filter);\n      } else if (filter.isGenericHide()) {\n        genericHides.push(filter);\n      }\n    }\n\n    if (allowGenericHides === true) {\n      allowGenericHides = shouldApplyHideException(genericHides) === false;\n    }\n\n    if (allowSpecificHides === true) {\n      allowSpecificHides = shouldApplyHideException(specificHides) === false;\n    }\n\n    // Lookup injections as well as stylesheets\n    const { injections, stylesheet, extended } = this.cosmetics.getCosmeticsFilters({\n      domain: domain || '',\n      hostname,\n\n      classes,\n      hrefs,\n      ids,\n\n      allowGenericHides,\n      allowSpecificHides,\n\n      getBaseRules,\n      getInjectionRules,\n      getExtendedRules,\n      getRulesFromDOM,\n      getRulesFromHostname,\n    });\n\n    // Perform interpolation for injected scripts\n    const scripts: string[] = [];\n    for (const injection of injections) {\n      const script = injection.getScript(this.resources.js);\n      if (script !== undefined) {\n        this.emit('script-injected', script, url);\n        scripts.push(script);\n      }\n    }\n\n    // Emit events\n    if (stylesheet.length !== 0) {\n      this.emit('style-injected', stylesheet, url);\n    }\n\n    return {\n      active: true,\n      extended,\n      scripts,\n      styles: stylesheet,\n    };\n  }\n\n  /**\n   * Given a `request`, return all matching network filters found in the engine.\n   */\n  public matchAll(request: Request): Set<NetworkFilter> {\n    const filters: NetworkFilter[] = [];\n    if (request.isSupported) {\n      Array.prototype.push.apply(filters, this.importants.matchAll(request));\n      Array.prototype.push.apply(filters, this.filters.matchAll(request));\n      Array.prototype.push.apply(filters, this.exceptions.matchAll(request));\n      Array.prototype.push.apply(filters, this.csp.matchAll(request));\n      Array.prototype.push.apply(filters, this.hideExceptions.matchAll(request));\n      Array.prototype.push.apply(filters, this.redirects.matchAll(request));\n    }\n\n    return new Set(filters);\n  }\n\n  /**\n   * Given a \"main_frame\" request, check if some content security policies\n   * should be injected in the page.\n   */\n  public getCSPDirectives(request: Request): string | undefined {\n    if (!this.config.loadNetworkFilters) {\n      return undefined;\n    }\n\n    if (request.isSupported !== true || request.isMainFrame() === false) {\n      return undefined;\n    }\n\n    const matches = this.csp.matchAll(request);\n\n    // No $csp filter found\n    if (matches.length === 0) {\n      return undefined;\n    }\n\n    // Collect all CSP directives and keep track of exceptions\n    const disabledCsp = new Set();\n    const enabledCsp = new Set();\n    for (const filter of matches) {\n      if (filter.isException()) {\n        if (filter.csp === undefined) {\n          // All CSP directives are disabled for this site\n          return undefined;\n        }\n        disabledCsp.add(filter.csp);\n      } else {\n        enabledCsp.add(filter.csp);\n      }\n    }\n\n    // Combine all CSPs (except the black-listed ones)\n    const csps: string | undefined =\n      Array.from(enabledCsp)\n        .filter((csp) => !disabledCsp.has(csp))\n        .join('; ') || undefined;\n\n    // Emit event\n    if (csps !== undefined) {\n      this.emit('csp-injected', csps, request);\n    }\n\n    return csps;\n  }\n\n  /**\n   * Decide if a network request (usually from WebRequest API) should be\n   * blocked, redirected or allowed.\n   */\n  public match(request: Request): BlockingResponse {\n    const result: BlockingResponse = {\n      exception: undefined,\n      filter: undefined,\n      match: false,\n      redirect: undefined,\n    };\n\n    if (!this.config.loadNetworkFilters) {\n      return result;\n    }\n\n    if (request.isSupported) {\n      // Check the filters in the following order:\n      // 1. $important (not subject to exceptions)\n      // 2. redirection ($redirect=resource)\n      // 3. normal filters\n      // 4. exceptions\n      result.filter = this.importants.match(request);\n\n      let redirectNone: NetworkFilter | undefined;\n      let redirectRule: NetworkFilter | undefined;\n\n      // If `result.filter` is `undefined`, it means there was no $important\n      // filter found so far. We look for a $redirect filter.  There is some\n      // extra logic to handle special cases like redirect-rule and\n      // redirect=none.\n      //\n      // * If redirect=none is found, then cancel all redirects.\n      // * Else if redirect-rule is found, only redirect if request would be blocked.\n      // * Else if redirect is found, redirect.\n      if (result.filter === undefined) {\n        const redirects = this.redirects.matchAll(request);\n        if (redirects.length !== 0) {\n          for (const filter of redirects) {\n            if (filter.getRedirect() === 'none') {\n              redirectNone = filter;\n            } else if (filter.isRedirectRule()) {\n              redirectRule = filter;\n            } else {\n              result.filter = filter;\n            }\n          }\n        }\n\n        // If `result.filter` is still `undefined`, it means that there was no\n        // redirection rule triggered for the request. We look for a normal\n        // match.\n        if (result.filter === undefined) {\n          result.filter = this.filters.match(request);\n\n          // If we found a match, and a `$redirect-rule` as found previously,\n          // then we transform the match into a redirect, following the\n          // semantics of redirect-rule.\n          if (redirectRule !== undefined && result.filter !== undefined) {\n            result.filter = redirectRule;\n          }\n        }\n\n        // If we found either a redirection rule or a normal match, then check\n        // for exceptions which could apply on the request and un-block it.\n        if (result.filter !== undefined) {\n          result.exception = this.exceptions.match(request);\n        }\n      }\n\n      // If there was a redirect match and no exception was found, then we\n      // proceed and process the redirect rule. This means two things:\n      //\n      // 1. Check if a redirect=none rule was found, which acts as exception.\n      // 2. If no exception was found, prepare `result.redirect` response.\n      if (\n        result.filter !== undefined &&\n        result.exception === undefined &&\n        result.filter.isRedirect()\n      ) {\n        if (redirectNone !== undefined) {\n          result.exception = redirectNone;\n        } else {\n          result.redirect = this.resources.getResource(result.filter.getRedirect());\n        }\n      }\n    }\n\n    result.match = result.exception === undefined && result.filter !== undefined;\n\n    // Emit events if we found a match\n    if (result.exception !== undefined) {\n      this.emit('request-whitelisted', request, result);\n    } else if (result.redirect !== undefined) {\n      this.emit('request-redirected', request, result);\n    } else if (result.filter !== undefined) {\n      this.emit('request-blocked', request, result);\n    } else {\n      this.emit('request-allowed', request, result);\n    }\n\n    return result;\n  }\n\n  public blockScripts() {\n    this.updateFromDiff({\n      added: [block().scripts().redirectTo('javascript').toString()],\n    });\n    return this;\n  }\n\n  public blockImages() {\n    this.updateFromDiff({\n      added: [block().images().redirectTo('png').toString()],\n    });\n    return this;\n  }\n\n  public blockMedias() {\n    this.updateFromDiff({\n      added: [block().medias().redirectTo('mp4').toString()],\n    });\n    return this;\n  }\n\n  public blockFrames() {\n    this.updateFromDiff({\n      added: [block().frames().redirectTo('html').toString()],\n    });\n    return this;\n  }\n\n  public blockFonts() {\n    this.updateFromDiff({\n      added: [block().fonts().toString()],\n    });\n    return this;\n  }\n\n  public blockStyles() {\n    this.updateFromDiff({\n      added: [block().styles().toString()],\n    });\n    return this;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n/*!\n * Copyright (c) 2008-2009 Bjoern Hoehrmann <bjoern@hoehrmann.de>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\n// From http://bjoern.hoehrmann.de/utf-8/decoder/dfa/\nconst utf8d = new Uint8Array([\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 00..1f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 20..3f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 40..5f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 60..7f\n  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9, // 80..9f\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7, // a0..bf\n  8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, // c0..df\n  0xa,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x4,0x3,0x3, // e0..ef\n  0xb,0x6,0x6,0x6,0x5,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8, // f0..ff\n  0x0,0x1,0x2,0x3,0x5,0x8,0x7,0x1,0x1,0x1,0x4,0x6,0x1,0x1,0x1,0x1, // s0..s0\n  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1, // s1..s2\n  1,2,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1, // s3..s4\n  1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,1,1,1,1,1,1, // s5..s6\n  1,3,1,1,1,1,1,3,1,3,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1, // s7..s8\n]);\n\nfunction isAscii(bytes: Uint8Array): boolean {\n  if (bytes.length === 0) {\n    return true;\n  }\n\n  for (let i = 0; i < bytes.length; i += 1) {\n    if (bytes[i] > 127) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isUTF8(bytes: Uint8Array): boolean {\n  if (bytes.length === 0) {\n    return true;\n  }\n\n  if (isAscii(bytes) === true) {\n    return true;\n  }\n\n  let state: number = 0;\n  for (let i = 0; i < bytes.length; i += 1) {\n    const type = utf8d[bytes[i]];\n    state = utf8d[256 + state * 16 + type];\n    if (state === 1 || state === undefined) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"names":["newNode","chars","Map","code","undefined","EMPTY_UINT8_ARRAY","Uint8Array","SmazCompress","[object Object]","codebook","maxSize","this","trie","strings","node","i","length","tok","root","j","c","charCodeAt","next","get","set","create","buffer","verbatim","str","bufferIndex","verbatimIndex","inputIndex","indexAfterMatch","len","flushVerbatim","slice","k","SmazDecompress","arr","byteLength","output","String","fromCharCode","stop","Smaz","compressor","decompressor","compress","getCompressedSize","decompress","Compression","cosmeticSelectorCodebook","networkCSPCodebook","networkRedirectCodebook","networkHostnameCodebook","networkFilterCodebook","networkRawCodebook","cosmeticRawCodebook","T","table","Int32Array","n","maxInt","base","regexNonASCII","regexSeparators","errors","invalid-input","not-basic","overflow","error","type","RangeError","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","Math","floor","decode","input","inputLength","bias","basic","lastIndexOf","push","index","oldi","w","codePoint","t","baseMinusT","out","splice","fromCodePoint","apply","encode","counter","value","extra","ucs2decode","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","join","toASCII","labels","replace","split","encoded","test","EMPTY_UINT32_ARRAY","Uint32Array","LITTLE_ENDIAN","Int8Array","Int16Array","promise","getCompressionSingleton","COMPRESSION","sizeOfLength","sizeOfBytes","array","align","sizeOfBytesWithLength","sizeOfASCII","sizeOfUTF8","encodedLength","sizeOfUint32Array","StaticDataView","enableCompression","Error","pos","options","fromUint8Array","capacity","compression","buf","start","end","C","L","crc32","checkSize","subarray","seekZero","bool","pushByte","Number","Boolean","getByte","byte","octet","pushUint8","getUint8","bytes","pushLength","align4","numberOfBytes","getLength","desiredSize","view","byteOffset","uint8","uint16","uint32","pushUint32","getUint32","raw","pushBytes","networkRedirect","pushASCII","getBytes","getASCII","networkHostname","networkCSP","networkFilter","cosmeticSelector","cosmeticRaw","pushUTF8","getUTF8","networkRaw","lengthShort","Config","debug","enableHtmlFiltering","enableInMemoryCache","enableMutationObserver","enableOptimizations","guessRequestTypeFromUrl","integrityCheck","loadCSPFilters","loadCosmeticFilters","loadExceptionFilters","loadExtendedSelectors","loadGenericCosmeticsFilters","loadNetworkFilters","getBool","pushBool","queueMicrotask","window","cb","Promise","resolve","then","catch","err","setTimeout","registerCallback","event","callback","listeners","listenersForEvent","unregisterCallback","indexOfCallback","indexOf","triggerCallback","args","size","listener","fetchWithRetry","fetch","url","retry","fetchWrapper","ex","reject","fetchResource","response","text","PREFIX","adsLists","adsAndTrackingLists","fullLists","fetchLists","urls","all","map","fetchResources","NetworkBuilder","Set","has","add","blockRequestsWithType","redirect","infix","prefix","suffix","hostname","parts","option","block","RECURSIVE_PSEUDO_CLASSES","TOKENS","attribute","id","class","comma","combinator","pseudo-element","pseudo-class","TOKENS_WITH_PARENS","TOKENS_WITH_STRINGS","TRIM_TOKENS","TOKENS_FOR_RESTORE","Object","assign","splitOnMatch","pattern","lastIndex","match","exec","from","content","before","after","groups","RegExp","source","GRAMMAR","name","operator","namespace","caseSensitive","argument","restoreNested","tokens","regex","types","token","isEscaped","backslashes","gobbleQuotes","quote","gobbleParens","stack","char","selector","replacement","opening","gobble","offset","repeat","tokenize","trim","doubleQuotes","selectorWithoutDoubleQuotes","singleQuotes","selectorWithoutQuotes","parens","selectorWithoutParens","strarr","tokenizer","filter","a","every","tokenizeBy","nestTokens","list","some","selectors","temp","sub","left","right","isAST","compound","walk","o","parent","subtree","parse","recursive","ast","EXTENDED_PSEUDO_CLASSES","PSEUDO_CLASSES","PSEUDO_ELEMENTS","SelectorType","classifySelector","Normal","foundSupportedExtendedSelector","Invalid","argumentType","Extended","EXTENSIONS","extractHostname","urlIsValidHostname","hasUpper","startsWith","indexOfProtocol","protocolSize","c0","c1","c2","c3","c4","lowerCaseCode","indexOfIdentifier","indexOfClosingBracket","indexOfPort","toLowerCase","lastDotIndex","lastCharCode","isValidAscii","DEFAULT_OPTIONS","allowIcannDomains","allowPrivateDomains","detectIp","mixedInputs","validHosts","validateHostname","setDefaultsImpl","parseImpl","step","suffixLookup","partialOptions","result","setDefaults","isValidHostname","isIp","hasColon","isProbablyIpv6","numberOfDots","isProbablyIpv4","publicSuffix","domain","vhost","endsWith","shareSameDomainSuffix","publicSuffixIndex","lastDotBeforeSuffixIndex","extractDomainWithSuffix","getDomain","subdomain","getSubdomain","domainWithoutSuffix","binSearch","elt","low","high","mid","midVal","BUFFER","last","isIcann","isPrivate","fastPathLookup","matchIndex","matchKind","matchLabels","numberOfHashes","maximumNumberOfLabels","hash","hashHostnameLabelsBackward","packed","label","labelStart","TOKENS_BUFFER","HASH_SEED","bitCount","getBit","mask","setBit","clearBit","fastHashBetween","begin","fastHash","hashStrings","fastStartsWith","haystack","needle","ceil","fastStartsWithFrom","isDigit","ch","isAlpha","isAllowedCode","isAlphaExtended","isCyrillic","tokenizeInPlace","skipFirstToken","skipLastToken","min","remaining","inside","full","tokenizeNoSkipInPlace","tokenizeNoSkip","reset","binLookup","hasUnicodeRe","hasUnicode","TLDTS_OPTIONS","NORMALIZED_TYPE_TOKEN","beacon","csp_report","cspviolationreport","document","eventsource","font","image","imageset","mainFrame","main_frame","manifest","media","object","object_subrequest","other","ping","preflight","script","signedexchange","speculative","stylesheet","subFrame","sub_frame","texttrack","web_manifest","websocket","xhr","xml_dtd","xmlhttprequest","xslt","hashHostnameBackward","getHashesFromLabelsBackward","startOfDomain","getEntityHashesFromLabelsBackward","hostnameWithoutPublicSuffix","indexOfDot","getHostnameWithoutPublicSuffix","getHostnameHashesFromLabelsBackward","Request","requestId","tabId","sourceDomain","sourceHostname","_originalRequestDetails","sourceHostnameHashes","sourceEntityHashes","isThirdParty","isFirstParty","isSupported","isHttp","isHttps","indexOfComa","sourceUrl","parsed","hostnameHashes","entityHashes","currentType","ext","endOfPath","indexOfFragment","indexOfQuery","startOfExt","extname","IMAGE_EXTENSIONS","MEDIA_EXTENSIONS","STYLE_EXTENSIONS","SCRIPT_EXTENSIONS","DOCUMENT_EXTENSIONS","FONT_EXTENSIONS","guessUrlType","Domains","entities","hostnames","notEntities","notHostnames","negation","entity","sort","optionalParts","getUint32Array","notHostname","notEntity","getPos","pushUint32Array","setByte","estimate","extractHTMLSelectorFromRule","rule","currentParsingDepth","startOfSelectorIndex","prev","tagShouldBeRemoved","tag","plainPatterns","regexpPatterns","EMPTY_TOKENS","DEFAULT_HIDDING_STYLE","isSimpleSelector","nextCode","isSimpleHrefSelector","isValidCss","div","createElement","matches","validSelectorRe","CosmeticFilter","domains","rawLine","style","line","sharpIndex","afterSharpIndex","suffixStartIndex","indexOfStyle","selectorType","isUnicode","getCosmeticSelector","deserialize","getRawCosmetic","pushCosmeticSelector","serialize","pushRawCosmetic","sizeOfCosmeticSelector","getSerializedSize","sizeOfRawCosmetic","isUnhide","isScriptInject","hasHostnameConstraint","isIdSelector","isClassSelector","endOfSelector","isHrefSelector","getSelector","hrefIndex","hrefEnd","js","scriptName","scriptArguments","firstPart","s","updateId","computeFilterId","getStyle","parseCssSelector","HTTP_HASH","HTTPS_HASH","FROM_ANY","REQUEST_TYPE_TO_MASK","getListOfRequestTypes","fromDocument","fromImage","fromMedia","fromObject","fromOther","fromPing","fromScript","fromStylesheet","fromSubdocument","fromWebsocket","fromXmlHttpRequest","fromFont","csp","denyallow","compileRegex","isLeftAnchor","isRightAnchor","isFullRegex","MATCH_ALL","NetworkFilter","cptMaskPositive","cptMaskNegative","filterIndexStart","filterIndexEnd","optionsIndex","rawOption","optionValue","indexOfEqual","optionMask","firstSeparator","separatorCode","setNetworkMask","indexOfSeparator","indexOfWildcard","checkIsRegex","getNetworkCSP","getNetworkFilter","getNetworkHostname","getRawNetwork","getNetworkRedirect","request","isCptAllowed","fromHttps","fromHttp","firstParty","thirdParty","getHostnameHashes","getEntityHashes","checkOptions","getFilter","isHostnameAnchor","filterHostname","getHostname","isFollowedByWildcard","isAnchoredByHostname","isRegex","getRegex","requestHostname","hasFilter","checkPattern","pushNetworkCSP","pushNetworkFilter","pushNetworkHostname","pushRawNetwork","pushNetworkRedirect","sizeOfNetworkCSP","sizeOfNetworkFilter","sizeOfNetworkHostname","sizeOfRawNetwork","sizeOfNetworkRedirect","isException","hasHostname","fromAny","numberOfCptOptions","getCptMask","getListOfRequestTypesNegated","isImportant","isRedirectRule","getRedirect","isRedirect","isCSP","isElemHide","isSpecificHide","isGenericHide","isBadFilter","getMask","isPlain","precedingCh","tokenizeWithWildcardsInPlace","tokenizeRegexInPlace","empty","cpt","detectFilterType","firstCharCode","secondCharCode","dollarIndex","afterDollarIndex","afterDollarCharCode","afterSharpCharCode","parseFilter","filterType","parseFilters","config","networkFilters","cosmeticFilters","lines","nextLine","getFilters","concat","CONTENT_TYPE","contentType","aliases","body","MIME_TO_RESOURCE","resources","fake","flv","gif","html","ico","jpg","json","mp3","mp4","pdf","png","svg","txt","wav","webm","webp","wmv","alias","getResourceForMime","mime","Resources","checksum","numberOfResources","getUint16","forEach","data","typeToResource","chunks","chunk","resource","firstNewLine","key","entries","resourcesByName","dataUrl","btoa","Buffer","toString","estimatedSize","pushUint16","escape","setWithDefault","bucket","groupBy","filters","criteria","grouped","Array","values","splitBy","condition","positive","negative","OPTIMIZATIONS","description","fusion","groupByCriteria","getId","select","patterns","f","noopOptimizeNetwork","noopOptimizeCosmetic","optimizeNetwork","fused","toFuse","group","nextPow2","v","UID","EMPTY_BUCKET","MAX_SAFE_INTEGER","ReverseIndex","optimize","deserializeFilter","update","tokensLookupIndexSize","bucketsIndexSize","numberOfFilters","tokensLookupIndex","getUint32ArrayView","bucketsIndex","filtersIndexStart","updateInternals","setPos","getNextId","iterBucket","newFilters","removedFilters","cache","clear","totalNumberOfTokens","totalNumberOfIndexedFilters","filtersTokens","estimatedBufferSize","f1","f2","histogram","max","multiTokens","getTokens","suffixes","allocate","filterIndex","bestToken","minCount","tokenCount","indexInBucketsIndex","filtersForMask","startOfBucket","endOfBucket","filtersIndices","lastRequestSeen","EMPTY_FILTERS","FiltersContainer","container","bufferSizeEstimation","selected","currentFilters","storedFiltersRemoved","numberOfExistingFilters","storedFiltersAdded","createStylesheet","rules","maximumNumberOfSelectors","styleStr","createStylesheetFromRulesWithCustomStyles","selectorsPerStyle","stylesheets","selectorsPerStyleArray","createStylesheetFromRules","hasCustomStyle","createLookupTokens","hostnamesHashes","entitiesHashes","CosmeticFilterBucket","genericRules","classesIndex","hostnameIndex","hrefsIndex","htmlIndex","idsIndex","unhideIndex","baseStylesheet","extraGenericRules","classSelectors","genericHideRules","hostnameSpecificRules","hrefSelectors","htmlRules","idSelectors","unHideRules","isHtmlFiltering","isExtended","hostnameTokens","iterMatchingFilters","disabledRules","classes","hrefs","ids","allowGenericHides","allowSpecificHides","getBaseRules","getInjectionRules","getExtendedRules","getRulesFromDOM","getRulesFromHostname","getGenericRules","sorted","compactTokens","arrays","totalSize","concatTypedArrays","href","extended","injections","styles","injectionsDisabled","getBaseStylesheet","extendedProcessed","extendedStyles","getSelectorAST","isRemove","getStyleAttributeHash","remove","lazyPopulateGenericRulesCache","canBeHiddenSelectors","cannotBeHiddenRules","canBeHiddenRules","NetworkFilterBucket","badFiltersIds","badFilters","isFilterDisabled","badFilter","getIdWithoutBadFilter","ENGINE_VERSION","shouldApplyHideException","genericHideFilter","currentScore","score","utf8d","onListeners","onceListeners","delete","lists","super","hideExceptions","exceptions","importants","redirects","cosmetics","newCosmeticFilters","newNetworkFilters","init","caching","path","read","write","engine","fromCached","listsPromises","resourcesPromise","updateResources","fetchImpl","fromLists","serialized","serializedEngineVersion","currentPos","expected","numberOfLists","keys","removedCosmeticFilters","removedNetworkFilters","updated","removedNetworkFiltersSet","added","removed","prototype","htmlSelectors","getHtmlRules","getExtendedSelector","emit","active","scripts","matchAll","fromRawDetails","genericHides","specificHides","getCosmeticsFilters","injection","getScript","isMainFrame","disabledCsp","enabledCsp","csps","exception","redirectNone","redirectRule","getResource","updateFromDiff","redirectTo","images","medias","frames","fonts","_","extractSelectorsFromRules","tags","rest","endOfLastTag","endOfTagIndex","indexOfClosingTag","lastClosingTagIndex","indexOfNextTag","extractTagsFromHtml","toRemove","filteredHtml","reverse","removeTagsFromHtml","selectTagsToRemove","prevRevision","newRevision","debugConfig","prevRevisionFilters","prevRevisionIds","newRevisionFilters","newRevisionIds","isAscii","state","details","diffs","addedCumul","removedCumul"],"mappings":"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AGT,OAAOyB,SCvBEI,EAIXpC,YAAqBC,EAA6BC,EAAU,KAAvCC,cAAAF,EACnBE,KAAKkC,WAAa,IAAItC,EAAaE,EAAUC,GAC7CC,KAAKmC,aAAe,IAAIT,EAAe5B,GAGlCD,SAASoB,GACd,OAAOjB,KAAKkC,WAAWE,SAASnB,GAG3BpB,kBAAkBoB,GACvB,OAAOjB,KAAKkC,WAAWG,kBAAkBpB,GAGpCpB,WAAWkB,GAChB,OAAOf,KAAKmC,aAAaG,WAAWvB,UCbzB,CACb,4CACA,2CACA,0CACA,uCACA,qCACA,mCACA,kCACA,iCACA,+BACA,8BACA,6BACA,4BACA,2BACA,yBACA,wBACA,sBACA,qBACA,oBACA,mBACA,mBACA,mBACA,kBACA,gBACA,gBACA,eACA,eACA,cACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,OC9Pa,CACb,qJACA,oFACA,yDACA,+CACA,sCACA,oCACA,oCACA,kCACA,iCACA,iCACA,+BACA,8BACA,8BACA,8BACA,2BACA,wBACA,sBACA,sBACA,qBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,iBACA,gBACA,gBACA,cACA,cACA,cACA,aACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,OC1Ja,CACb,oCACA,4BACA,2BACA,wBACA,uBACA,uBACA,oBACA,mBACA,kBACA,mBACA,kBACA,gBACA,eACA,cACA,aACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,OC9Pa,CACb,6BACA,6BACA,yBACA,oBACA,oBACA,mBACA,iBACA,iBACA,cACA,aACA,aa,CACb,oCACA,mCACA,8BACA,2BACA,uBACA,sBACA,gBACA,eACA,aACA,aACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,SACA,SACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,OC/Ea,CACb,iCACA,gCACA,gCACA,gCACA,0BACA,yBACA,yBACA,wBACA,uBACA,uBACA,oBACA,oBACA,mBACA,kBACA,kBACA,iBACA,iBACA,iBACA,kBACA,eACA,cACA,cACA,cACA,cACA,aACA,aACA,YACA,YACA,YACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,OC9Pa,CACb,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,8BACA,6BACA,4BACA,4BACA,2BACA,2BACA,uBACA,oBACA,mBACA,kBACA,iBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,cACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,WCpPmBwB,EAArB1C,cACkBG,sBAAyB,IAAIiC,EAAKO,GAClCxC,gBAAmB,IAAIiC,EAAKQ,GAC5BzC,qBAAwB,IAAIiC,EAAKS,GACjC1C,qBAAwB,IAAIiC,EAAKU,GACjC3C,mBAAsB,IAAIiC,EAAKW,GAC/B5C,gBAAmB,IAAIiC,EAAKY,GAC5B7C,iBAAoB,IAAIiC,EAAKa,ICtB/C,MAAMC,EAAgB,MACpB,IAAItC,EAAY,EAChB,MAAMuC,EAAoB,IAAIC,WAAW,KAEzC,IAAK,IAAIC,EAAY,EAAS,MAANA,EAAWA,GAAK,EACtCzC,EAAIyC,EACJzC,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CuC,EAAME,GAAKzC,EAGb,OAAOuC,GAjBa,GCqBtB,MAAMG,EAAS,WAGTC,EAAO,GAUPC,EAAgB,aAChBC,EAAkB,4BAIlBC,EAEF,CACFC,gBAAiB,gBACjBC,YAAa,iDACbC,SAAY,mDAcd,SAASC,EAAMC,GACb,MAAM,IAAIC,WAAWN,EAAOK,IA0E9B,SAASE,EAAaC,EAAeC,GAGnC,OAAOD,EAAQ,GAAK,IAAMA,EAAQ,GAAK,EAAI,KAAgB,IAATC,EAAa,EAAI,IAAM,GAQ3E,SAASC,EAAMC,EAAeC,EAAmBC,GAC/C,IAAI3C,EAAI,EAGR,IAFAyC,EAAQE,EAAYC,KAAKC,MAAMJ,EAtHpB,KAsHoCA,GAAS,EACxDA,GAASG,KAAKC,MAAMJ,EAAQC,GACGD,EAAQ,IAA6BzC,GAAK2B,EACvEc,EAAQG,KAAKC,MAAMJ,EArGDd,IAuGpB,OAAOiB,KAAKC,MAAM7C,EAAK,GAAsByC,GAAUA,EA5H5C,cAsIGK,EAAOC,GAErB,MAAM3C,EAAS,GACT4C,EAAcD,EAAMnE,OAC1B,IAAID,EAAI,EACJ8C,EAxIW,IAyIXwB,EA1Ic,GAgJdC,EAAQH,EAAMI,YA9IF,KA+IZD,EAAQ,IACVA,EAAQ,GAGV,IAAK,IAAInE,EAAI,EAAGA,EAAImE,IAASnE,EAEvBgE,EAAM9D,WAAWF,IAAM,KACzBmD,EAAM,aAER9B,EAAOgD,KAAKL,EAAM9D,WAAWF,IAM/B,IAAK,IAAIsE,EAAQH,EAAQ,EAAIA,EAAQ,EAAI,EAAGG,EAAQL,GAAyC,CAM3F,MAAMM,EAAO3E,EACb,IAAK,IAAI4E,EAAI,EAAGvD,EAAI2B,GAA2B3B,GAAK2B,EAAM,CACpD0B,GAASL,GACXd,EAAM,iBAGR,MAAMI,GA5FUkB,EA4FWT,EAAM9D,WAAWoE,MA3FhC,GAAO,GACdG,EAAY,GAEjBA,EAAY,GAAO,GACdA,EAAY,GAEjBA,EAAY,GAAO,GACdA,EAAY,GAEd7B,GAoFCW,GAASX,GAAQW,EAAQM,KAAKC,OAAOnB,EAAS/C,GAAK4E,KACrDrB,EAAM,YAGRvD,GAAK2D,EAAQiB,EACb,MAAME,EAAIzD,GAAKiD,EAvLR,EAuLsBjD,GAAKiD,EAtL3B,GAAA,GAsLgDjD,EAAIiD,EAE3D,GAAIX,EAAQmB,EACV,MAGF,MAAMC,EAAa/B,EAAO8B,EACtBF,EAAIX,KAAKC,MAAMnB,EAASgC,IAC1BxB,EAAM,YAGRqB,GAAKG,EAGP,MAAMC,EAAMvD,EAAOxB,OAAS,EAC5BqE,EAAOT,EAAM7D,EAAI2E,EAAMK,EAAc,IAATL,GAIxBV,KAAKC,MAAMlE,EAAIgF,GAAOjC,EAASD,GACjCS,EAAM,YAGRT,GAAKmB,KAAKC,MAAMlE,EAAIgF,GACpBhF,GAAKgF,EAGLvD,EAAOwD,OAAOjF,IAAK,EAAG8C,GA9H1B,IAAsB+B,EAiIpB,OAAOnD,OAAOwD,cAAcC,MAAM,KAAM1D,YAU1B2D,EAAOvE,GACrB,MAAMY,EAAS,GAGT2C,EAjLR,SAAoBvD,GAClB,MAAMY,EAAS,GACf,IAAI4D,EAAU,EACd,MAAMpF,EAASY,EAAIZ,OACnB,KAAOoF,EAAUpF,GAAQ,CACvB,MAAMqF,EAAQzE,EAAIP,WAAW+E,KAC7B,GAAIC,GAAS,OAAUA,GAAS,OAAUD,EAAUpF,EAAQ,CAE1D,MAAMsF,EAAQ1E,EAAIP,WAAW+E,KACJ,QAAZ,MAARE,GAEH9D,EAAOgD,OAAe,KAARa,IAAkB,KAAe,KAARC,GAAiB,QAIxD9D,EAAOgD,KAAKa,GACZD,UAGF5D,EAAOgD,KAAKa,GAGhB,OAAO7D,EA2JO+D,CAAW3E,GAGnBwD,EAAcD,EAAMnE,OAG1B,IAAI6C,EApOW,IAqOXgB,EAAQ,EACRQ,EAvOc,GA0OlB,IAAK,IAAItE,EAAI,EAAGA,EAAIoE,EAAMnE,OAAQD,GAAK,EAAG,CACxC,MAAMyF,EAAerB,EAAMpE,GACvByF,EAAe,KACjBhE,EAAOgD,KAAK/C,OAAOC,aAAa8D,IAIpC,MAAMC,EAAcjE,EAAOxB,OAC3B,IAAI0F,EAAiBD,EAWrB,IALIA,GACFjE,EAAOgD,KAvPO,KA2PTkB,EAAiBtB,GAAa,CAGnC,IAAIuB,EAAI7C,EACR,IAAK,IAAI/C,EAAI,EAAGA,EAAIoE,EAAMnE,OAAQD,GAAK,EAAG,CACxC,MAAMyF,EAAerB,EAAMpE,GACvByF,GAAgB3C,GAAK2C,EAAeG,IACtCA,EAAIH,GAMR,MAAMI,EAAwBF,EAAiB,EAC3CC,EAAI9C,EAAImB,KAAKC,OAAOnB,EAASe,GAAS+B,IACxCtC,EAAM,YAGRO,IAAU8B,EAAI9C,GAAK+C,EACnB/C,EAAI8C,EAEJ,IAAK,IAAI5F,EAAI,EAAGA,EAAIoE,EAAMnE,OAAQD,GAAK,EAAG,CACxC,MAAMyF,EAAerB,EAAMpE,GAI3B,GAHIyF,EAAe3C,KAAOgB,EAAQf,GAChCQ,EAAM,YAEJkC,IAAiB3C,EAAG,CAEtB,IAAIgD,EAAIhC,EACR,IAAK,IAAIzC,EAAI2B,GAA2B3B,GAAK2B,EAAM,CACjD,MAAM8B,EAAIzD,GAAKiD,EA/RZ,EA+R0BjD,GAAKiD,EA9R/B,GAAA,GA8RoDjD,EAAIiD,EAC3D,GAAIwB,EAAIhB,EACN,MAEF,MAAMiB,EAAUD,EAAIhB,EACdC,EAAa/B,EAAO8B,EAC1BrD,EAAOgD,KAAK/C,OAAOC,aAAa+B,EAAaoB,EAAKiB,EAAUhB,EAAa,KACzEe,EAAI7B,KAAKC,MAAM6B,EAAUhB,GAG3BtD,EAAOgD,KAAK/C,OAAOC,aAAa+B,EAAaoC,EAAG,KAChDxB,EAAOT,EAAMC,EAAO+B,EAAuBF,IAAmBD,GAC9D5B,EAAQ,IACN6B,KAIJ7B,IACAhB,EAEJ,OAAOrB,EAAOuE,KAAK,aAoCLC,EAAQ7B,GAEtB,MAAM8B,EAAS9B,EAAM+B,QAAQjD,EAAiB,KAAQkD,MAAM,KACtDC,EAAoB,GAC1B,IAAK,IAAIrG,EAAI,EAAGA,EAAIkG,EAAOjG,OAAQD,GAAK,EACtCqG,EAAQ5B,KAAKxB,EAAcqD,KAAKJ,EAAOlG,IAAM,OAASoF,EAAOc,EAAOlG,IAAMkG,EAAOlG,IAEnF,OAAOqG,EAAQL,KAAK,KC1Wf,MAAM1G,EAAoB,IAAIC,WAAW,GACnCgH,EAAqB,IAAIC,YAAY,GAG5CC,EAA0E,IAAjD,IAAIC,UAAU,IAAIC,WAAW,CAAC,IAAIhG,QAAQ,GAGzE,ICfIiG,EDeAC,EAA6C,KAC/C,MAAMC,EAAc,IAAI3E,EAExB,OADA0E,EAA0B,IAAMC,EACzBA,YAyBOC,EAAa9G,GAC3B,OAAOA,GAAU,IAAM,EAAI,WAQb+G,EAAYC,EAAmBC,GAC7C,OAAOC,EAAsBF,EAAMhH,OAAQiH,YAQ7BC,EAAsBlH,EAAgBiH,GAMpD,OAAQA,EAAQ,EAAI,GAAKjH,EAAS8G,EAAa9G,YAMjCmH,EAAYvG,GAC1B,OAAOA,EAAIZ,OAAS8G,EAAalG,EAAIZ,iBAMvBoH,EAAWxG,GACzB,MAAMyG,EAAgBlC,EAAOvE,GAAKZ,OAClC,OAAOqH,EAAgBP,EAAaO,YAMtBC,EAAkBN,GAChC,OAAOA,EAAMzF,WAAauF,EAAaE,EAAMhH,cAiFlCuH,EA0BX/H,YAAYkB,GAAoB8G,kBAAEA,IAChC,IAAsB,IAAlBhB,EAIF,MAAM,IAAIiB,MAAM,4DAGQ,IAAtBD,GACF7H,KAAK6H,oBAGP7H,KAAKe,OAASA,EACdf,KAAK+H,IAAM,EAnCNlI,aAAamI,GAClB,OAAOJ,EAAeK,eAAevI,EAAmBsI,GAMnDnI,sBAAsBwH,EAAmBW,GAC9C,OAAO,IAAIJ,EAAeP,EAAOW,GAM5BnI,gBAAgBqI,EAAkBF,GACvC,OAAO,IAAIJ,EAAe,IAAIjI,WAAWuI,GAAWF,GAuB/CnI,oBACLG,KAAKmI,YAAclB,IAGdpH,WACL,gBF1M0BuI,EAAiBC,EAAeC,GAC5D,IAAIC,GAAY,EAChB,MAAMC,EAAYF,EAAM,EACxB,IAAIlI,EAAYiI,EAChB,KAAOjI,EAAIoI,GACTD,EAAKA,IAAM,EAAKxF,EAAmB,KAAhBwF,EAAIH,EAAIhI,OAC3BmI,EAAKA,IAAM,EAAKxF,EAAmB,KAAhBwF,EAAIH,EAAIhI,OAC3BmI,EAAKA,IAAM,EAAKxF,EAAmB,KAAhBwF,EAAIH,EAAIhI,OAC3BmI,EAAKA,IAAM,EAAKxF,EAAmB,KAAhBwF,EAAIH,EAAIhI,OAC3BmI,EAAKA,IAAM,EAAKxF,EAAmB,KAAhBwF,EAAIH,EAAIhI,OAC3BmI,EAAKA,IAAM,EAAKxF,EAAmB,KAAhBwF,EAAIH,EAAIhI,OAC3BmI,EAAKA,IAAM,EAAKxF,EAAmB,KAAhBwF,EAAIH,EAAIhI,OAC3BmI,EAAKA,IAAM,EAAKxF,EAAmB,KAAhBwF,EAAIH,EAAIhI,OAG7B,KAAOA,EAAIoI,EAAI,GACbD,EAAKA,IAAM,EAAKxF,EAAmB,KAAhBwF,EAAIH,EAAIhI,OAG7B,QAAa,EAALmI,KAAY,EEuLXE,CAAMzI,KAAKe,OAAQ,EAAGf,KAAK+H,KAG7BlI,gBACL,OAAOG,KAAK+H,IAAM/H,KAAKe,OAAOa,WAGzB/B,OAAOkI,GACZ/H,KAAK+H,IAAMA,EAGNlI,SACL,OAAOG,KAAK+H,IAGPlI,WACLG,KAAK+H,IAAM,EAGNlI,QAEL,OADAG,KAAK0I,YACE1I,KAAKe,OAAOS,MAAM,EAAGxB,KAAK+H,KAG5BlI,WACL,OAAIG,KAAK+H,MAAQ/H,KAAKe,OAAOa,WACpB5B,KAAKe,QAGdf,KAAK0I,YACE1I,KAAKe,OAAO4H,SAAS,EAAG3I,KAAK+H,MAM/BlI,SACLG,KAAK+H,IAAa/H,KAAK+H,IAvOX,GAAK,EA0OZlI,IAAIkB,GACTf,KAAKe,OAAS,IAAIpB,WAAWoB,GAC7Bf,KAAK4I,WAGA/I,SAASgJ,GACd7I,KAAK8I,SAASC,OAAOF,IAGhBhJ,UACL,OAAOmJ,QAAQhJ,KAAKiJ,WAGfpJ,QAAQkI,EAAamB,GAC1BlJ,KAAKe,OAAOgH,GAAOmB,EAGdrJ,SAASsJ,GACdnJ,KAAKoJ,UAAUD,GAGVtJ,UACL,OAAOG,KAAKqJ,WAGPxJ,UAAUyJ,EAAmBhC,GAAiB,GACnDtH,KAAKuJ,WAAWD,EAAMjJ,SAER,IAAViH,GACFtH,KAAKwJ,SAGPxJ,KAAKe,OAAOF,IAAIyI,EAAOtJ,KAAK+H,KAC5B/H,KAAK+H,KAAOuB,EAAM1H,WAGb/B,SAASyH,GAAiB,GAC/B,MAAMmC,EAAgBzJ,KAAK0J,aAEb,IAAVpC,GACFtH,KAAKwJ,SAGP,MAAMF,EAAQtJ,KAAKe,OAAO4H,SAAS3I,KAAK+H,IAAK/H,KAAK+H,IAAM0B,GAGxD,OAFAzJ,KAAK+H,KAAO0B,EAELH,EAQFzJ,mBAAmB8J,GAKxB,GAHA3J,KAAKwJ,SAGe,IAAhBG,EACF,OAAOhD,EAIT,MAAMiD,EAAO,IAAIhD,YACf5G,KAAKe,OAAOA,OACZf,KAAK+H,IAAM/H,KAAKe,OAAO8I,WACvBF,GAGF,OADA3J,KAAK+H,KAAqB,EAAd4B,EACLC,EAGF/J,UAAUiK,GACf9J,KAAKe,OAAOf,KAAK+H,OAAS+B,EAGrBjK,WACL,OAAOG,KAAKe,OAAOf,KAAK+H,OAGnBlI,WAAWkK,GAChB/J,KAAKe,OAAOf,KAAK+H,OAASgC,IAAW,EACrC/J,KAAKe,OAAOf,KAAK+H,OAASgC,EAGrBlK,YACL,OAASG,KAAKe,OAAOf,KAAK+H,QAAU,EAAK/H,KAAKe,OAAOf,KAAK+H,UAAY,EAGjElI,WAAWmK,GAChBhK,KAAKe,OAAOf,KAAK+H,OAASiC,IAAW,GACrChK,KAAKe,OAAOf,KAAK+H,OAASiC,IAAW,GACrChK,KAAKe,OAAOf,KAAK+H,OAASiC,IAAW,EACrChK,KAAKe,OAAOf,KAAK+H,OAASiC,EAGrBnK,YACL,OACKG,KAAKe,OAAOf,KAAK+H,QAAU,KAAQ,IAClC/H,KAAKe,OAAOf,KAAK+H,QAAU,GAC1B/H,KAAKe,OAAOf,KAAK+H,QAAU,EAC5B/H,KAAKe,OAAOf,KAAK+H,UACrB,EAIGlI,gBAAgB8B,GACrB3B,KAAKuJ,WAAW5H,EAAItB,QAEpB,IAAK,MAAM6C,KAAKvB,EACd3B,KAAKiK,WAAW/G,GAIbrD,iBACL,MAAMQ,EAASL,KAAK0J,YACd/H,EAAM,IAAIiF,YAAYvG,GAE5B,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,GAAK,EAC/BuB,EAAIvB,GAAKJ,KAAKkK,YAEhB,OAAOvI,EAGF9B,SAASsK,GACd,MAAMlJ,EAAMuE,EAAO2E,GACnBnK,KAAKuJ,WAAWtI,EAAIZ,QAEpB,IAAK,IAAID,EAAI,EAAGA,EAAIa,EAAIZ,OAAQD,GAAK,EACnCJ,KAAKe,OAAOf,KAAK+H,OAAS9G,EAAIP,WAAWN,GAItCP,UACL,MAAM+B,EAAa5B,KAAK0J,YAExB,OADA1J,KAAK+H,KAAOnG,EACL2C,EACLzC,OAAOC,aAAawD,MAClB,KAEAvF,KAAKe,OAAO4H,SAAS3I,KAAK+H,IAAMnG,EAAY5B,KAAK+H,OAKhDlI,UAAUoB,GACfjB,KAAKuJ,WAAWtI,EAAIZ,QAEpB,IAAK,IAAID,EAAI,EAAGA,EAAIa,EAAIZ,OAAQD,GAAK,EACnCJ,KAAKe,OAAOf,KAAK+H,OAAS9G,EAAIP,WAAWN,GAItCP,WACL,MAAM+B,EAAa5B,KAAK0J,YAIxB,OAHA1J,KAAK+H,KAAOnG,EAGLE,OAAOC,aAAawD,MAAM,KAAMvF,KAAKe,OAAO4H,SAAS3I,KAAK+H,IAAMnG,EAAY5B,KAAK+H,MAGnFlI,oBAAoBoB,QACAxB,IAArBO,KAAKmI,YACPnI,KAAKoK,UAAUpK,KAAKmI,YAAYkC,gBAAgBjI,SAASnB,IAEzDjB,KAAKsK,UAAUrJ,GAIZpB,qBACL,YAAyBJ,IAArBO,KAAKmI,YACAnI,KAAKmI,YAAYkC,gBAAgB/H,WAAWtC,KAAKuK,YAEnDvK,KAAKwK,WAGP3K,oBAAoBoB,QACAxB,IAArBO,KAAKmI,YACPnI,KAAKoK,UAAUpK,KAAKmI,YAAYsC,gBAAgBrI,SAASnB,IAEzDjB,KAAKsK,UAAUrJ,GAIZpB,qBACL,YAAyBJ,IAArBO,KAAKmI,YACAnI,KAAKmI,YAAYsC,gBAAgBnI,WAAWtC,KAAKuK,YAEnDvK,KAAKwK,WAGP3K,eAAeoB,QACKxB,IAArBO,KAAKmI,YACPnI,KAAKoK,UAAUpK,KAAKmI,YAAYuC,WAAWtI,SAASnB,IAEpDjB,KAAKsK,UAAUrJ,GAIZpB,gBACL,YAAyBJ,IAArBO,KAAKmI,YACAnI,KAAKmI,YAAYuC,WAAWpI,WAAWtC,KAAKuK,YAE9CvK,KAAKwK,WAGP3K,kBAAkBoB,QACExB,IAArBO,KAAKmI,YACPnI,KAAKoK,UAAUpK,KAAKmI,YAAYwC,cAAcvI,SAASnB,IAEvDjB,KAAKsK,UAAUrJ,GAIZpB,mBACL,YAAyBJ,IAArBO,KAAKmI,YACAnI,KAAKmI,YAAYwC,cAAcrI,WAAWtC,KAAKuK,YAEjDvK,KAAKwK,WAGP3K,qBAAqBoB,QACDxB,IAArBO,KAAKmI,YACPnI,KAAKoK,UAAUpK,KAAKmI,YAAYyC,iBAAiBxI,SAASnB,IAE1DjB,KAAKsK,UAAUrJ,GAIZpB,sBACL,YAAyBJ,IAArBO,KAAKmI,YACAnI,KAAKmI,YAAYyC,iBAAiBtI,WAAWtC,KAAKuK,YAEpDvK,KAAKwK,WAGP3K,gBAAgBoB,QACIxB,IAArBO,KAAKmI,YACPnI,KAAKoK,UAAUpK,KAAKmI,YAAY0C,YAAYzI,SAASoD,EAAOvE,KAE5DjB,KAAK8K,SAAS7J,GAIXpB,iBACL,YAAyBJ,IAArBO,KAAKmI,YACA5D,EAAOvE,KAAKmI,YAAY0C,YAAYvI,WAAWtC,KAAKuK,aAEtDvK,KAAK+K,UAGPlL,eAAeoB,QACKxB,IAArBO,KAAKmI,YACPnI,KAAKoK,UAAUpK,KAAKmI,YAAY6C,WAAW5I,SAASoD,EAAOvE,KAE3DjB,KAAK8K,SAAS7J,GAIXpB,gBACL,YAAyBJ,IAArBO,KAAKmI,YACA5D,EAAOvE,KAAKmI,YAAY6C,WAAW1I,WAAWtC,KAAKuK,aAErDvK,KAAK+K,UAGNlL,YACN,GAAiB,IAAbG,KAAK+H,KAAa/H,KAAK+H,IAAM/H,KAAKe,OAAOa,WAC3C,MAAM,IAAIkG,MACR,6BAA6B9H,KAAKe,OAAOa,4BAA4B5B,KAAK+H,aAMxElI,WAAWQ,GACbA,GAAU,IACZL,KAAKoJ,UAAU/I,IAEfL,KAAKoJ,UAAU,KACfpJ,KAAKiK,WAAW5J,IAIZR,YACN,MAAMoL,EAAcjL,KAAKqJ,WACzB,OAAuB,MAAhB4B,EAAsBjL,KAAKkK,YAAce,SE9hB/BC,EAmCnBrL,aAAYsL,MACVA,GAAQ,EAAKtD,kBACbA,GAAoB,EAAKuD,oBACzBA,GAAsB,EAAKC,oBAC3BA,GAAsB,EAAIC,uBAC1BA,GAAyB,EAAIC,oBAC7BA,GAAsB,EAAIC,wBAC1BA,GAA0B,EAAKC,eAC/BA,GAAiB,EAAIC,eACrBA,GAAiB,EAAIC,oBACrBA,GAAsB,EAAIC,qBAC1BA,GAAuB,EAAIC,sBAC3BA,GAAwB,EAAKC,4BAC7BA,GAA8B,EAAIC,mBAClCA,GAAqB,GACF,IACnB/L,KAAKmL,MAAQA,EACbnL,KAAK6H,kBAAoBA,EACzB7H,KAAKoL,oBAAsBA,EAC3BpL,KAAKqL,oBAAsBA,EAC3BrL,KAAKsL,uBAAyBA,EAC9BtL,KAAKuL,oBAAsBA,EAC3BvL,KAAKwL,wBAA0BA,EAC/BxL,KAAKyL,eAAiBA,EACtBzL,KAAK0L,eAAiBA,EACtB1L,KAAK2L,oBAAsBA,EAC3B3L,KAAK4L,qBAAuBA,EAC5B5L,KAAK6L,sBAAwBA,EAC7B7L,KAAK8L,4BAA8BA,EACnC9L,KAAK+L,mBAAqBA,EA/DrBlM,mBAAmBkB,GACxB,OAAO,IAAImK,EAAO,CAChBC,MAAOpK,EAAOiL,UACdnE,kBAAmB9G,EAAOiL,UAC1BZ,oBAAqBrK,EAAOiL,UAC5BX,oBAAqBtK,EAAOiL,UAC5BV,uBAAwBvK,EAAOiL,UAC/BT,oBAAqBxK,EAAOiL,UAC5BR,wBAAyBzK,EAAOiL,UAChCP,eAAgB1K,EAAOiL,UACvBN,eAAgB3K,EAAOiL,UACvBL,oBAAqB5K,EAAOiL,UAC5BJ,qBAAsB7K,EAAOiL,UAC7BH,sBAAuB9K,EAAOiL,UAC9BF,4BAA6B/K,EAAOiL,UACpCD,mBAAoBhL,EAAOiL,YAmDxBnM,oBAGL,OAAO,GAGFA,UAAUkB,GACfA,EAAOkL,SAASjM,KAAKmL,OACrBpK,EAAOkL,SAASjM,KAAK6H,mBACrB9G,EAAOkL,SAASjM,KAAKoL,qBACrBrK,EAAOkL,SAASjM,KAAKqL,qBACrBtK,EAAOkL,SAASjM,KAAKsL,wBACrBvK,EAAOkL,SAASjM,KAAKuL,qBACrBxK,EAAOkL,SAASjM,KAAKwL,yBACrBzK,EAAOkL,SAASjM,KAAKyL,gBACrB1K,EAAOkL,SAASjM,KAAK0L,gBACrB3K,EAAOkL,SAASjM,KAAK2L,qBACrB5K,EAAOkL,SAASjM,KAAK4L,sBACrB7K,EAAOkL,SAASjM,KAAK6L,uBACrB9K,EAAOkL,SAASjM,KAAK8L,6BACrB/K,EAAOkL,SAASjM,KAAK+L,qBDrFlB,MAAMG,EACO,oBAAXC,QAA2D,mBAA1BA,OAAOD,eAC1CE,GAAiBD,OAAOD,eAAeE,GAEvCA,IACEpF,IAAYA,EAAUqF,QAAQC,YAAYC,KAAKH,GAAII,OAAOC,GACzDC,YAAW,KACT,MAAMD,IACL,KEKb,SAASE,EACPC,EACAC,EACAC,GAEA,IAAIC,EAAoBD,EAAUlM,IAAIgM,QAEZnN,IAAtBsN,IACFA,EAAoB,GACpBD,EAAUjM,IAAI+L,EAAOG,IAGvBA,EAAkBlI,KAAKgI,GAMzB,SAASG,EACPJ,EACAC,EACAC,GAEA,MAAMC,EAAoBD,EAAUlM,IAAIgM,GACxC,QAA0BnN,IAAtBsN,EAAiC,CACnC,MAAME,EAAkBF,EAAkBG,QAAQL,IACzB,IAArBI,GACFF,EAAkB1H,OAAO4H,EAAiB,IAShD,SAASE,EACPP,EACAQ,EACAN,GAGA,GAAuB,IAAnBA,EAAUO,KACZ,OAAO,EAGT,MAAMN,EAAoBD,EAAUlM,IAAIgM,GACxC,YAA0BnN,IAAtBsN,IACFb,GAAe,KACb,IAAK,MAAMoB,KAAYP,EACrBO,KAAYF,OAGT,YCxDKG,EAAeC,EAAcC,GAC3C,IAAIC,EAAQ,EAMZ,MAAMC,EAAe,IACZH,EAAMC,GAAKjB,OAAOoB,IACvB,GAAIF,EAAQ,EAEV,OADAA,GAAS,EACF,IAAIrB,SAAQ,CAACC,EAASuB,KAC3BnB,YAAW,KACTiB,IAAepB,KAAKD,GAASE,MAAMqB,KAClC,QAIP,MAAMD,KAIV,OAAOD,IAGT,SAASG,EAAcN,EAAcC,GACnC,OAAOF,EAAeC,EAAOC,GAAKlB,MAAMwB,GAAaA,EAASC,SAGhE,MAAMC,EACJ,yFAEWC,EAAW,CACtB,GAAGD,0BACH,GAAGA,iCACH,GAAGA,8BACH,GAAGA,iCACH,GAAGA,8BACH,GAAGA,8BACH,GAAGA,mCACH,GAAGA,qCACH,GAAGA,+BAGQE,EAAsB,IAC9BD,EACH,GAAGD,6BACH,GAAGA,+BAGQG,EAAY,IAAID,EAAqB,GAAGF,2CAKrCI,EAAWb,EAAcc,GACvC,OAAOjC,QAAQkC,IAAID,EAAKE,KAAKf,GAAQK,EAAcN,EAAOC,eAO5CgB,EAAejB,GAC7B,OAAOM,EAAcN,EAAO,GAAGS,iCC1EjC,MAAMS,EAAN7O,cACUG,aAA4B,IAAI2O,IAEhC3O,iBAA6BP,EAC7BO,gBAA4BP,EAC5BO,iBAA6BP,EAE7BO,mBAA+BP,EAE/BI,sBAAsBqF,GAC5B,GAAIlF,KAAKgI,QAAQ4G,IAAI1J,GACnB,MAAM,IAAI4C,MAAM,yBAAyB5C,KAI3C,OADAlF,KAAKgI,QAAQ6G,IAAI3J,GACVlF,KAGFH,SACL,OAAOG,KAAK8O,sBAAsB,SAG7BjP,UACL,OAAOG,KAAK8O,sBAAsB,UAG7BjP,SACL,OAAOG,KAAK8O,sBAAsB,SAG7BjP,QACL,OAAOG,KAAK8O,sBAAsB,QAG7BjP,SACL,OAAOG,KAAK8O,sBAAsB,SAG7BjP,SACL,OAAOG,KAAK8O,sBAAsB,OAG7BjP,WAAWkP,GAChB,QAAsBtP,IAAlBO,KAAK+O,SACP,MAAM,IAAIjH,MAAM,wBAAwB9H,KAAK+O,YAG/C,OADA/O,KAAK+O,SAAW,YAAYA,IACrB/O,KAGFH,YAAYmP,GACjB,QAAmBvP,IAAfO,KAAKgP,MACP,MAAM,IAAIlH,MAAM,6BAA6B9H,KAAKgP,SAGpD,OADAhP,KAAKgP,MAAQA,EACNhP,KAGFH,cAAcoP,GACnB,QAAoBxP,IAAhBO,KAAKiP,OACP,MAAM,IAAInH,MAAM,4BAA4B9H,KAAKiP,UAGnD,OADAjP,KAAKiP,OAAS,IAAIA,IACXjP,KAGFH,YAAYqP,GACjB,QAAoBzP,IAAhBO,KAAKkP,OACP,MAAM,IAAIpH,MAAM,4BAA4B9H,KAAKkP,UAGnD,OADAlP,KAAKkP,OAAS,GAAGA,KACVlP,KAGFH,aAAasP,GAClB,QAAoB1P,IAAhBO,KAAKiP,OACP,MAAM,IAAInH,MAAM,uDAAuD9H,KAAKiP,UAG9E,OADAjP,KAAKiP,OAAS,KAAKE,KACZnP,KAGFH,WACL,MAAMuP,EAAkB,QAEJ3P,IAAhBO,KAAKiP,QACPG,EAAMvK,KAAK7E,KAAKiP,aAGCxP,IAAfO,KAAKgP,OACPI,EAAMvK,KAAK7E,KAAKgP,YAGEvP,IAAhBO,KAAKkP,QACPE,EAAMvK,KAAK7E,KAAKkP,QAGlB,MAAMlH,EAAoB,CAAC,aAE3B,GAA0B,IAAtBhI,KAAKgI,QAAQqF,KACf,IAAK,MAAMgC,KAAUrP,KAAKgI,QACxBA,EAAQnD,KAAKwK,GAQjB,YAJsB5P,IAAlBO,KAAK+O,UACP/G,EAAQnD,KAAK7E,KAAK+O,UAGb,GAAoB,IAAjBK,EAAM/O,OAAe,IAAM+O,EAAMhJ,KAAK,QAAQ4B,EAAQ5B,KAAK,iBAIzDkJ,IACd,OAAO,IAAIZ,ECjFN,MAAMa,EAA2B,IAAIZ,IAAI,CAC9C,MACA,MACA,MACA,eACA,KACA,SACA,KACA,UACA,MACA,UAGIa,GAAuC,CAC3CC,UAAW,kJACXC,GAAI,8CACJC,MAAO,+CACPC,MAAO,WACPC,WAAY,iBACZC,iBAAkB,sDAClBC,eAAgB,8DAChBnM,KAAM,uEAGFoM,GAAqC,IAAIrB,IAAI,CAAC,eAAgB,mBAC9DsB,GAAsC,IAAItB,IAAI,IAAIqB,GAAoB,cACtEE,GAA8B,IAAIvB,IAAI,CAAC,aAAc,UAErDwB,GAAmDC,OAAOC,OAAO,GAAIb,IAW3E,SAASc,GACPC,EACAtP,GAEAsP,EAAQC,UAAY,EACpB,MAAMC,EAAQF,EAAQG,KAAKzP,GAE3B,GAAc,OAAVwP,EACF,OAGF,MAAME,EAAOF,EAAM3L,MAAQ,EACrB8L,EAAUH,EAAM,GAChBI,EAAS5P,EAAIO,MAAM,EAAGmP,EAAO,GAC7BG,EAAQ7P,EAAIO,MAAMmP,EAAOC,EAAQvQ,OAAS,GAEhD,MAAO,CAACwQ,EAAQ,CAACD,EAASH,EAAMM,QAAU,IAAKD,GA1BjDX,GAAmB,kBAAoBa,OACrCxB,GAAO,kBAAkByB,OAAO1K,QAAQ,kBAAmB,oBAC3D,MAEF4J,GAAmB,gBAAkBa,OACnCxB,GAAO,gBAAgByB,OAAO1K,QAAQ,kBAAmB,mBACzD,MAuBF,MAAM2K,GAAU,CAEbjQ,IACC,MAAMwP,EAAQH,GAAad,GAAOC,UAAWxO,GAC7C,QAAcxB,IAAVgR,EACF,OAGF,MAAOI,GAASD,GAASO,KAAEA,EAAIC,SAAEA,EAAQ1L,MAAEA,EAAK2L,UAAEA,EAASC,cAAEA,IAAkBR,GAASL,EACxF,YAAahR,IAAT0R,EAIG,CACLN,EACA,CACEjN,KAAM,YACNgN,QAAAA,EACAvQ,OAAQuQ,EAAQvQ,OAChBgR,UAAAA,EACAC,cAAAA,EACAvJ,IAAK,GACLoJ,KAAAA,EACAC,SAAAA,EACA1L,MAAAA,GAEFoL,QAjBF,GAsBD7P,IACC,MAAMwP,EAAQH,GAAad,GAAOE,GAAIzO,GACtC,QAAcxB,IAAVgR,EACF,OAGF,MAAOI,GAASD,GAASO,KAAEA,IAASL,GAASL,EAC7C,YAAahR,IAAT0R,EAIG,CACLN,EACA,CACEjN,KAAM,KACNgN,QAAAA,EACAvQ,OAAQuQ,EAAQvQ,OAChB0H,IAAK,GACLoJ,KAAAA,GAEFL,QAbF,GAkBD7P,IACC,MAAMwP,EAAQH,GAAad,GAAOG,MAAO1O,GACzC,QAAcxB,IAAVgR,EACF,OAGF,MAAOI,GAASD,GAASO,KAAEA,IAASL,GAASL,EAC7C,YAAahR,IAAT0R,EAIG,CACLN,EACA,CACEjN,KAAM,QACNgN,QAAAA,EACAvQ,OAAQuQ,EAAQvQ,OAChB0H,IAAK,GACLoJ,KAAAA,GAEFL,QAbF,GAkBD7P,IACC,MAAMwP,EAAQH,GAAad,GAAOI,MAAO3O,GACzC,QAAcxB,IAAVgR,EACF,OAGF,MAAOI,GAASD,GAAUE,GAASL,EAEnC,MAAO,CACLI,EACA,CACEjN,KAAM,QACNgN,QAAAA,EACAvQ,OAAQuQ,EAAQvQ,OAChB0H,IAAK,IAEP+I,IAKH7P,IACC,MAAMwP,EAAQH,GAAad,GAAOK,WAAY5O,GAC9C,QAAcxB,IAAVgR,EACF,OAGF,MAAOI,GAASD,GAAUE,GAASL,EAEnC,MAAO,CACLI,EACA,CACEjN,KAAM,aACNgN,QAAAA,EACAvQ,OAAQuQ,EAAQvQ,OAChB0H,IAAK,IAEP+I,IAKH7P,IACC,MAAMwP,EAAQH,GAAad,GAAO,kBAAmBvO,GACrD,QAAcxB,IAAVgR,EACF,OAGF,MAAOI,GAASD,GAASO,KAAEA,IAASL,GAASL,EAE7C,YAAahR,IAAT0R,EAIG,CACLN,EACA,CACEjN,KAAM,iBACNgN,QAAAA,EACAvQ,OAAQuQ,EAAQvQ,OAChB0H,IAAK,GACLoJ,KAAAA,GAEFL,QAbF,GAkBD7P,IACC,MAAMwP,EAAQH,GAAad,GAAO,gBAAiBvO,GACnD,QAAcxB,IAAVgR,EACF,OAIF,MAAOI,GAASD,GAASO,KAAEA,EAAII,SAAEA,IAAaT,GAASL,EAEvD,YAAahR,IAAT0R,EAIG,CACLN,EACA,CACEjN,KAAM,eACNgN,QAAAA,EACAvQ,OAAQuQ,EAAQvQ,OAChB0H,IAAK,GACLoJ,KAAAA,EACAI,SAAAA,GAEFT,QAdF,GAmBD7P,IACC,MAAMwP,EAAQH,GAAad,GAAO5L,KAAM3C,GACxC,QAAcxB,IAAVgR,EACF,OAGF,MAAOI,GAASD,GAASO,KAAEA,EAAIE,UAAEA,IAAcP,GAASL,EAExD,MAAO,CACLI,EACA,CACEjN,KAAM,OACNgN,QAAAA,EACAvQ,OAAQuQ,EAAQvQ,OAChBgR,UAAAA,EACAtJ,IAAK,GACLoJ,KAAAA,GAEFL,KA2CN,SAASU,GAAcC,EAAevR,EAAkBwR,EAAeC,GAErE,IAAK,MAAM1Q,KAAOf,EAChB,IAAK,MAAM0R,KAASH,EAClB,GAAIE,EAAM/C,IAAIgD,EAAMhO,OAASgO,EAAM7J,IAAI,GAAK9G,EAAIoH,OAASpH,EAAIoH,MAAQuJ,EAAM7J,IAAI,GAAI,CACjF,MAAM6I,EAAUgB,EAAMhB,QAGtB,GAFAgB,EAAMhB,QAAUgB,EAAMhB,QAAQrK,QAAQmL,EAAOzQ,EAAIA,KAE7C2Q,EAAMhB,UAAYA,EAAS,CAG7BT,GAAmByB,EAAMhO,MAAM4M,UAAY,EAC3C,MAAMC,EAAQN,GAAmByB,EAAMhO,MAAM8M,KAAKkB,EAAMhB,SAC1C,OAAVH,GACFL,OAAOC,OAAOuB,EAAOnB,EAAMM,mBAQvBc,GAAU5Q,EAAa6D,GACrC,IAAIgN,EAAc,EAGlB,IADAhN,GAAS,EACFA,GAAS,GAAoB,OAAf7D,EAAI6D,IACvBgN,GAAe,EACfhN,GAAS,EAGX,OAAOgN,EAAc,GAAM,WAGbC,GAAa/D,EAAcgE,EAAkB3J,GAE3D,IAAIC,EAAMD,EAAQ,EAGlB,MAA6C,KAArCC,EAAM0F,EAAKd,QAAQ8E,EAAO1J,MAAyC,IAAzBuJ,GAAU7D,EAAM1F,IAChEA,GAAO,EAGT,IAAa,IAATA,EAKJ,OAAO0F,EAAKxM,MAAM6G,EAAOC,EAAM,YAGjB2J,GAAajE,EAAc3F,GACzC,IAAI6J,EAAQ,EAEZ,IAAK,IAAI9R,EAAIiI,EAAOjI,EAAI4N,EAAK3N,OAAQD,IAAK,CACxC,MAAM+R,EAAOnE,EAAK5N,GAElB,GAAa,MAAT+R,EACFD,GAAS,OACJ,GAAa,MAATC,EAAc,CACvB,KAAID,EAAQ,GAIV,OAHAA,GAAS,EAOb,GAAc,IAAVA,EACF,OAAOlE,EAAKxM,MAAM6G,EAAOjI,EAAI,aAQnBmG,GACd6L,EACAC,EACAC,EACAC,GAEA,MAAMrS,EAAmB,GAEzB,IAAIsS,EAAS,EAEb,MAAyD,KAAjDA,EAASJ,EAASlF,QAAQoF,EAASE,KAAiB,CAC1D,MAAMvR,EAAMsR,EAAOH,EAAUI,GAC7B,QAAY/S,IAARwB,EACF,MAGFf,EAAQ2E,KAAK,CAAE5D,IAAAA,EAAKoH,MAAOmK,IAC3BJ,EAAW,GAAGA,EAAS5Q,MAAM,EAAGgR,EAAS,KAAKH,EAAYI,OACxDxR,EAAIZ,OAAS,KACX+R,EAAS5Q,MAAMgR,EAASvR,EAAIZ,OAAS,KACzCmS,GAAUvR,EAAIZ,OAGhB,MAAO,CAACH,EAASkS,YAGHM,GAASN,GACvB,GAAwB,iBAAbA,EACT,MAAO,GAMT,GAAwB,KAFxBA,EAAWA,EAASO,QAEPtS,OACX,MAAO,GAIT,MAAOuS,EAAcC,GAA+BtM,GAClD6L,EACA,IACA,KACA,CAACpE,EAAc3F,IAAkB0J,GAAa/D,EAAM,IAAK3F,MAGpDyK,EAAcC,GAAyBxM,GAC5CsM,EACA,IACA,KACA,CAAC7E,EAAc3F,IAAkB0J,GAAa/D,EAAM,IAAK3F,MAIpD2K,EAAQC,GAAyB1M,GAAQwM,EAAuB,IAAK,IAAKd,IAG3ER,EA5KR,SAAoBzD,GAClB,IAAKA,EACH,MAAO,GAGT,MAAMkF,EAAyB,CAAClF,GAChC,IAAK,MAAMmF,KAAajC,GACtB,IAAK,IAAI9Q,EAAI,EAAGA,EAAI8S,EAAO7S,OAAQD,IAAK,CACtC,MAAMa,EAAMiS,EAAO9S,GACnB,GAAmB,iBAARa,EAAkB,CAC3B,MAAMwP,EAAQ0C,EAAUlS,QACVxB,IAAVgR,GACFyC,EAAO7N,OAAOjF,EAAG,KAAOqQ,EAAyB2C,QAAQC,GAAmB,IAAbA,EAAEhT,WAMzE,IAAImS,EAAS,EACb,IAAK,MAAMZ,KAASsB,EACG,iBAAVtB,IACTA,EAAM7J,IAAM,CAACyK,EAAQA,EAASZ,EAAMvR,QAChC6P,GAAYtB,IAAIgD,EAAMhO,QACxBgO,EAAMhB,QAAUgB,EAAMhB,QAAQ+B,QAAU,MAI5CH,GAAUZ,EAAMvR,OAGlB,OAAY6S,EC5MEI,OAAO1B,GAA2B,iBAAVA,ID6M7BsB,EAIF,GAyIQK,CAAWN,GAO1B,OAJAzB,GAAcC,EAAQuB,EAAQ,SAAUhD,IACxCwB,GAAcC,EAAQmB,EAAc,OAAQ3C,IAC5CuB,GAAcC,EAAQqB,EAAc,OAAQ7C,IAErCwB,EAIT,SAAS+B,GACP/B,GACAgC,KAAEA,GAAO,GAAsC,IAE/C,IAAa,IAATA,GAAiBhC,EAAOiC,MAAMxO,GAAiB,UAAXA,EAAEtB,OAAmB,CAC3D,MAAM+P,EAAmB,GACnBC,EAAc,GAEpB,IAAK,IAAIxT,EAAI,EAAGA,EAAIqR,EAAOpR,OAAQD,GAAK,EAAG,CACzC,MAAMwR,EAAQH,EAAOrR,GACrB,GAAmB,UAAfwR,EAAMhO,KAAkB,CAC1B,GAAoB,IAAhBgQ,EAAKvT,OACP,MAAM,IAAIyH,MAAM,sBAAwB1H,GAG1C,MAAMyT,EAAML,GAAWI,EAAM,CAAEH,MAAM,SACzBhU,IAARoU,GACFF,EAAU9O,KAAKgP,GAEjBD,EAAKvT,OAAS,OAEduT,EAAK/O,KAAK+M,GAId,GAAoB,IAAhBgC,EAAKvT,OACP,MAAM,IAAIyH,MAAM,kBACX,CACL,MAAM+L,EAAML,GAAWI,EAAM,CAAEH,MAAM,SACzBhU,IAARoU,GACFF,EAAU9O,KAAKgP,GAInB,MAAO,CAAEjQ,KAAM,OAAQ6P,KAAME,GAG/B,IAAK,IAAIvT,EAAIqR,EAAOpR,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC3C,MAAMwR,EAAQH,EAAOrR,GAErB,GAAmB,eAAfwR,EAAMhO,KAAuB,CAC/B,MAAMkQ,EAAON,GAAW/B,EAAOjQ,MAAM,EAAGpB,IAClC2T,EAAQP,GAAW/B,EAAOjQ,MAAMpB,EAAI,IAC1C,QAAcX,IAAVsU,EACF,OAGF,GACoB,MAAlBnC,EAAMhB,SACY,MAAlBgB,EAAMhB,SACY,MAAlBgB,EAAMhB,SACY,MAAlBgB,EAAMhB,QAEN,OAGF,MAAO,CACLhN,KAAM,UACNiM,WAAY+B,EAAMhB,QAClBkD,KAAAA,EACAC,MAAAA,IAKN,GAAsB,IAAlBtC,EAAOpR,OAIX,gBCtaAoR,GAEA,OAAOA,EAAO6B,OAAO1B,GAAyB,UAAfA,EAAMhO,MAAmC,eAAfgO,EAAMhO,ODoa3DoQ,CAAMvC,GACc,IAAlBA,EAAOpR,OACFoR,EAAO,GAIT,CACL7N,KAAM,WACNqQ,SAAU,IAAIxC,SARlB,EAgBF,SAASyC,GACP/T,EACA0M,EACAsH,EACAC,GAEA,QAAa3U,IAATU,EAAJ,CAIA,GAAkB,YAAdA,EAAKyD,KACPsQ,GAAK/T,EAAK2T,KAAMjH,EAAUsH,EAAGhU,GAC7B+T,GAAK/T,EAAK4T,MAAOlH,EAAUsH,EAAGhU,QACzB,GAAkB,aAAdA,EAAKyD,KACd,IAAK,MAAMV,KAAK/C,EAAK8T,SACnBC,GAAKhR,EAAG2J,EAAUsH,EAAGhU,OAGT,iBAAdA,EAAKyD,WACYnE,IAAjBU,EAAKkU,cACC5U,IAAN0U,GACW,iBAAXA,EAAEvQ,WACYnE,IAAd0U,EAAEE,SAEFH,GAAK/T,EAAKkU,QAASxH,EAAUsH,EAAGhU,GAGlC0M,EAAS1M,EAAMiU,aASDE,GACdlC,GACAmC,UAAEA,GAAY,EAAId,KAAEA,GAAO,GAAwB,IAEnD,MAAMhC,EAASiB,GAASN,GAExB,GAAsB,IAAlBX,EAAOpR,OACT,OAGF,MAAMmU,EAAMhB,GAAW/B,EAAQ,CAAEgC,KAAAA,IAejC,OAbkB,IAAdc,GACFL,GAAKM,GAAMrU,IAEO,iBAAdA,EAAKyD,MACLzD,EAAKoR,eACS9R,IAAdU,EAAKgR,MACL5B,EAAyBX,IAAIzO,EAAKgR,QAElChR,EAAKkU,QAAUC,GAAMnU,EAAKoR,SAAU,CAAEgD,WAAW,EAAMd,MAAM,QAK5De,EE9mBF,MAAMC,GAA0B,IAAI9F,IAAI,CAI7C,MACA,WACA,OAaW+F,GAAiB,IAAI/F,IAAI,CACpC,SACA,MACA,WACA,QACA,UACA,UACA,UACA,MACA,WACA,QACA,UACA,QACA,cACA,gBACA,QACA,gBACA,eACA,aACA,OACA,eACA,QACA,WACA,gBACA,UACA,KACA,OACA,aACA,eACA,OACA,OACA,UAIA,MACA,YACA,iBACA,mBACA,cACA,aACA,eACA,WACA,eACA,oBACA,YACA,aACA,WACA,QACA,OACA,QACA,SACA,QACA,UACA,UAOWgG,GAAkB,IAAIhG,IAAI,CAAC,QAAS,SAAU,eAAgB,eAE3E,IAAYiG,YAMIC,GAAiBzC,GAE/B,IAA+B,IAA3BA,EAASlF,QAAQ,KACnB,OAAO0H,GAAaE,OAGtB,MAAMrD,EAASiB,GAASN,GAGxB,IAAI2C,GAAiC,EACrC,IAAK,MAAMnD,KAASH,EAClB,GAAmB,iBAAfG,EAAMhO,KAAyB,CACjC,MAAMuN,KAAEA,GAASS,EACjB,IAA0C,IAAtC6C,GAAwB7F,IAAIuC,GAC9B4D,GAAiC,OAC5B,IAAiC,IAA7BL,GAAe9F,IAAIuC,KAAiD,IAA9BwD,GAAgB/F,IAAIuC,GACnE,OAAOyD,GAAaI,QAItB,IACqC,IAAnCD,QACmBtV,IAAnBmS,EAAML,WACiC,IAAvChC,EAAyBX,IAAIuC,GAC7B,CACA,MAAM8D,EAAeJ,GAAiBjD,EAAML,UAC5C,GAAI0D,IAAiBL,GAAaI,QAChC,OAAOC,EACEA,IAAiBL,GAAaM,WACvCH,GAAiC,IAMzC,OAAuC,IAAnCA,EACKH,GAAaM,SAGfN,GAAaE,QA7CtB,SAAYF,GACVA,uBACAA,2BACAA,yBAHF,CAAYA,KAAAA,QC5FL,MAAMO,GAAa,IAAIxG,IAAI,CAAC,MAAO,OAAQ,UCArCwG,GAAa,IAAIxG,IAAI,CAChC,MACA,MACA,OACA,MACA,OACA,UCNWwG,GAAa,IAAIxG,IAAI,CAChC,OACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,OACA,MACA,OACA,SC7BWwG,GAAa,IAAIxG,IAAI,CAChC,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QCTWwG,GAAa,IAAIxG,IAAI,CAAC,KAAM,KAAM,MAAO,QCAzCwG,GAAa,IAAIxG,IAAI,CAAC,MAAO,kBCIlByG,GACtB3H,EACA4H,GAEA,IAAIhN,EAAgB,EAChBC,EAAcmF,EAAIpN,OAClBiV,GAAoB,EAGxB,IAA2B,IAAvBD,EAA8B,CAEhC,IAAgC,IAA5B5H,EAAI8H,WAAW,SACjB,OAAO,KAIT,KAAOlN,EAAQoF,EAAIpN,QAAUoN,EAAI/M,WAAW2H,IAAU,IACpDA,GAAS,EAIX,KAAOC,EAAMD,EAAQ,GAAKoF,EAAI/M,WAAW4H,EAAM,IAAM,IACnDA,GAAO,EAIT,GAC4B,KAA1BmF,EAAI/M,WAAW2H,IACe,KAA9BoF,EAAI/M,WAAW2H,EAAQ,GAEvBA,GAAS,MACJ,CACL,MAAMmN,EAAkB/H,EAAIP,QAAQ,KAAM7E,GAC1C,IAAyB,IAArBmN,EAAwB,CAI1B,MAAMC,EAAeD,EAAkBnN,EACjCqN,EAAKjI,EAAI/M,WAAW2H,GACpBsN,EAAKlI,EAAI/M,WAAW2H,EAAQ,GAC5BuN,EAAKnI,EAAI/M,WAAW2H,EAAQ,GAC5BwN,EAAKpI,EAAI/M,WAAW2H,EAAQ,GAC5ByN,EAAKrI,EAAI/M,WAAW2H,EAAQ,GAElC,GACmB,IAAjBoN,GACO,MAAPC,GACO,MAAPC,GACO,MAAPC,GACO,MAAPC,GACO,MAAPC,QAGK,GACY,IAAjBL,GACO,MAAPC,GACO,MAAPC,GACO,MAAPC,GACO,MAAPC,QAGK,GACY,IAAjBJ,GACO,MAAPC,GACO,MAAPC,GACO,MAAPC,QAGK,GACY,IAAjBH,GACO,MAAPC,GACO,MAAPC,QAKA,IAAK,IAAIvV,EAAIiI,EAAOjI,EAAIoV,EAAiBpV,GAAK,EAAG,CAC/C,MAAM2V,EAAoC,GAApBtI,EAAI/M,WAAWN,GACrC,IAK8B,IAJ1B2V,GAAiB,IAAMA,GAAiB,KACzCA,GAAiB,IAAMA,GAAiB,IACvB,KAAlBA,GACkB,KAAlBA,GACoB,KAAlBA,GAEF,OAAO,KAOb,IADA1N,EAAQmN,EAAkB,EACO,KAA1B/H,EAAI/M,WAAW2H,IACpBA,GAAS,GAQf,IAAI2N,GAA6B,EAC7BC,GAAiC,EACjCC,GAAuB,EAC3B,IAAK,IAAI9V,EAAIiI,EAAOjI,EAAIkI,EAAKlI,GAAK,EAAG,CACnC,MAAMZ,EAAeiO,EAAI/M,WAAWN,GACpC,GACW,KAATZ,GACS,KAATA,GACS,KAATA,EACA,CACA8I,EAAMlI,EACN,MACkB,KAATZ,EAETwW,EAAoB5V,EACF,KAATZ,EAETyW,EAAwB7V,EACN,KAATZ,EAET0W,EAAc9V,EACLZ,GAAQ,IAAMA,GAAQ,KAC/B8V,GAAW,GAcf,IARyB,IAAvBU,GACAA,EAAoB3N,GACpB2N,EAAoB1N,IAEpBD,EAAQ2N,EAAoB,GAIA,KAA1BvI,EAAI/M,WAAW2H,GACjB,OAA+B,IAA3B4N,EACKxI,EAAIjM,MAAM6G,EAAQ,EAAG4N,GAAuBE,cAE9C,MACmB,IAAjBD,GAAsBA,EAAc7N,GAAS6N,EAAc5N,IAEpEA,EAAM4N,GAKV,KAAO5N,EAAMD,EAAQ,GAAiC,KAA5BoF,EAAI/M,WAAW4H,EAAM,IAC7CA,GAAO,EAGT,MAAM6G,EACM,IAAV9G,GAAeC,IAAQmF,EAAIpN,OAASoN,EAAIjM,MAAM6G,EAAOC,GAAOmF,EAE9D,OAAI6H,EACKnG,EAASgH,cAGXhH,cC/IgBA,GACvB,GAAIA,EAAS9O,OAAS,IACpB,OAAO,EAGT,GAAwB,IAApB8O,EAAS9O,OACX,OAAO,EAGT,IAA6D,KArBzCb,EAqBa2P,EAASzO,WAAW,KAnB1C,IAAMlB,GAAQ,KAASA,GAAQ,IAAMA,GAAQ,IAAOA,EAAO,KAoBpE,OAAO,EAtBX,IAAsBA,EA0BpB,IAAI4W,GAAwB,EACxBC,GAAwB,EAC5B,MAAM/U,EAAM6N,EAAS9O,OAErB,IAAK,IAAID,EAAI,EAAGA,EAAIkB,EAAKlB,GAAK,EAAG,CAC/B,MAAMZ,EAAO2P,EAASzO,WAAWN,GACjC,GAAa,KAATZ,EAAuB,CACzB,GAEEY,EAAIgW,EAAe,IAEF,KAAjBC,GAEiB,KAAjBA,GAEiB,KAAjBA,EAEA,OAAO,EAGTD,EAAehW,OACV,IAEL,KAjDN,SAAsBZ,GACpB,OACGA,GAAQ,IAAMA,GAAQ,KAASA,GAAQ,IAAMA,GAAQ,IAAOA,EAAO,IA8CjD8W,CAAa9W,IAAkB,KAATA,GAAwB,KAATA,GAItD,OAAO,EAGT6W,EAAe7W,EAGjB,OAEE8B,EAAM8U,EAAe,GAAK,IAIT,KAAjBC,EC3CJ,MAAME,GApBN,UAAyBC,kBACvBA,GAAoB,EAAIC,oBACxBA,GAAsB,EAAKC,SAC3BA,GAAW,EAAItB,gBACfA,GAAkB,EAAIuB,YACtBA,GAAc,EAAIC,WAClBA,EAAa,KAAIC,iBACjBA,GAAmB,IAEnB,MAAO,CACLL,kBAAAA,EACAC,oBAAAA,EACAC,SAAAA,EACAtB,gBAAAA,EACAuB,YAAAA,EACAC,WAAAA,EACAC,iBAAAA,GAIoCC,CAAgB,aC2CxCC,GACdtJ,EACAuJ,EACAC,EAKAC,EACAC,GAEA,MAAMnP,WDpDoBA,GAC1B,YAAgBvI,IAAZuI,EACKuO,GAxBX,UAAyBC,kBACvBA,GAAoB,EAAIC,oBACxBA,GAAsB,EAAKC,SAC3BA,GAAW,EAAItB,gBACfA,GAAkB,EAAIuB,YACtBA,GAAc,EAAIC,WAClBA,EAAa,KAAIC,iBACjBA,GAAmB,IAEnB,MAAO,CACLL,kBAAAA,EACAC,oBAAAA,EACAC,SAAAA,EACAtB,gBAAAA,EACAuB,YAAAA,EACAC,WAAAA,EACAC,iBAAAA,GAWqBC,CAAgB9O,GC+CGoP,CAAYF,GAKtD,MAAmB,iBAARzJ,EACF0J,IAauB,IAA5BnP,EAAQoN,gBACV+B,EAAOhI,SAAW1B,GACe,IAAxBzF,EAAQ2O,YACjBQ,EAAOhI,SAAWiG,GAAgB3H,EAAK4J,GAAgB5J,IAEvD0J,EAAOhI,SAAWiG,GAAgB3H,GAAK,OAGrCuJ,GAA8C,OAApBG,EAAOhI,WAKZ,IAArBnH,EAAQ0O,WACVS,EAAOG,KChFX,SAAwBnI,GACtB,GAAIA,EAAS9O,OAAS,EACpB,OAAO,EAGT,IAAIgI,EAAwB,MAAhB8G,EAAS,GAAa,EAAI,EAClC7G,EAAM6G,EAAS9O,OASnB,GAP0B,MAAtB8O,EAAS7G,EAAM,KACjBA,GAAO,GAMLA,EAAMD,EAAQ,GAChB,OAAO,EAGT,IAAIkP,GAAoB,EAExB,KAAOlP,EAAQC,EAAKD,GAAS,EAAG,CAC9B,MAAM7I,EAAO2P,EAASzO,WAAW2H,GAEjC,GAAa,KAAT7I,EACF+X,GAAW,OACN,GAIL,IAHE/X,GAAQ,IAAMA,GAAQ,IACrBA,GAAQ,IAAMA,GAAQ,KACtBA,GAAQ,IAAMA,GAAQ,IAGzB,OAAO,EAIX,OAAO+X,EASAC,CADoBrI,EDoCNgI,EAAOhI,WCjH9B,SAAwBA,GAEtB,GAAIA,EAAS9O,OAAS,EACpB,OAAO,EAIT,GAAI8O,EAAS9O,OAAS,GACpB,OAAO,EAGT,IAAIoX,EAAe,EAEnB,IAAK,IAAIrX,EAAI,EAAGA,EAAI+O,EAAS9O,OAAQD,GAAK,EAAG,CAC3C,MAAMZ,EAAO2P,EAASzO,WAAWN,GAEjC,GAAa,KAATZ,EACFiY,GAAgB,OACX,GAAIjY,EAAO,IAAgBA,EAAO,GACvC,OAAO,EAIX,OACmB,IAAjBiY,GAC2B,KAA3BtI,EAASzO,WAAW,IACyB,KAA7CyO,EAASzO,WAAWyO,EAAS9O,OAAS,GAoDLqX,CAAevI,IDoC5B,IAAhBgI,EAAOG,MANJH,GAcsB,IAA7BnP,EAAQ6O,mBACoB,IAA5B7O,EAAQoN,kBAC6B,IAArCiC,GAAgBF,EAAOhI,WAEvBgI,EAAOhI,SAAW,KACXgI,IAITF,EAAaE,EAAOhI,SAAUnH,EAASmP,OACnCH,GAAuD,OAAxBG,EAAOQ,aACjCR,GAITA,EAAOS,gBEhFP1I,EACAC,EACAnH,GAGA,GAA2B,OAAvBA,EAAQ4O,WAAqB,CAC/B,MAAMA,EAAa5O,EAAQ4O,WAC3B,IAAK,IAAIxW,EAAI,EAAGA,EAAIwW,EAAWvW,OAAQD,GAAK,EAAG,CAC7C,MAAMyX,EAAQjB,EAAWxW,GACzB,IAA+D,IAzDrE,SAA+B+O,EAAkB0I,GAC/C,QAAI1I,EAAS2I,SAASD,KAElB1I,EAAS9O,SAAWwX,EAAMxX,QACuB,MAAjD8O,EAASA,EAAS9O,OAASwX,EAAMxX,OAAS,IAqDtB0X,CAAsB5I,EAAU0I,GAClD,OAAOA,GASb,OAAI3I,EAAO7O,SAAW8O,EAAS9O,OACtB,KAtDX,SACE8O,EACAwI,GAgBA,MAAMK,EAAoB7I,EAAS9O,OAASsX,EAAatX,OAAS,EAC5D4X,EAA2B9I,EAASvK,YAAY,IAAKoT,GAG3D,OAAkC,IAA9BC,EACK9I,EAIFA,EAAS3N,MAAMyW,EAA2B,GAmC1BC,CAAwB/I,EAAUD,GFoDzCiJ,CAAUhB,EAAOQ,aAAcR,EAAOhI,SAAUnH,OAC5DgP,GAA0C,OAAlBG,EAAOS,OAC1BT,GAITA,EAAOiB,mBGhJ4BjJ,EAAkByI,GAErD,OAAIA,EAAOvX,SAAW8O,EAAS9O,OACtB,GAGF8O,EAAS3N,MAAM,GAAIoW,EAAOvX,OAAS,GH0IvBgY,CAAalB,EAAOhI,SAAUgI,EAAOS,YACpDZ,IAKJG,EAAOmB,qBInJsCV,EJoJ3CT,EAAOS,OIpJoD1I,EJqJ3DiI,EAAOQ,aIjJFC,EAAOpW,MAAM,GAAI0N,EAAO7O,OAAS,KJ2I/B8W,UCpEkBhI,EG3EkByI,EAAgB1I,SCHhD,IAAItaCQ/unF,SAAS2R,GACP5W,EACA6W,EACAnQ,EACAC,GAEA,GAAID,GAASC,EACX,OAAO,EAGT,IAAImQ,EAAMpQ,EACNqQ,EAAOpQ,EAAM,EAEjB,KAAOmQ,GAAOC,GAAM,CAClB,MAAMC,EAAOF,EAAMC,IAAU,EACvBE,EAASjX,EAAIgX,GACnB,GAAIC,EAASJ,EACXC,EAAME,EAAM,MACP,CAAA,KAAIC,EAASJ,GAGlB,OAAO,EAFPE,EAAOC,EAAM,GAMjB,OAAO,EAMT,MAAME,GAAS,IAAIjS,YAAY,aA2DPqQ,GACtB9H,EACAnH,EACA5C,GAEA,IAA+C,aCvG/C+J,EACAnH,EACA5C,GAIA,IAAoC,IAAhC4C,EAAQyO,qBAAiCtH,EAAS9O,OAAS,EAAG,CAChE,MAAMyY,EAAe3J,EAAS9O,OAAS,EACjCwV,EAAa1G,EAASzO,WAAWoY,GACjClD,EAAazG,EAASzO,WAAWoY,EAAO,GACxCnD,EAAaxG,EAASzO,WAAWoY,EAAO,GACxCpD,EAAavG,EAASzO,WAAWoY,EAAO,GAE9C,GACS,MAAPjD,GACO,MAAPD,GACO,KAAPD,GACO,KAAPD,EAKA,OAHAtQ,EAAI2T,SAAU,EACd3T,EAAI4T,WAAY,EAChB5T,EAAIuS,aAAe,OACZ,EACF,GACE,MAAP9B,GACO,MAAPD,GACO,MAAPD,GACO,KAAPD,EAKA,OAHAtQ,EAAI2T,SAAU,EACd3T,EAAI4T,WAAY,EAChB5T,EAAIuS,aAAe,OACZ,EACF,GACE,MAAP9B,GACO,MAAPD,GACO,MAAPD,GACO,KAAPD,EAKA,OAHAtQ,EAAI2T,SAAU,EACd3T,EAAI4T,WAAY,EAChB5T,EAAIuS,aAAe,OACZ,EACF,GACE,MAAP9B,GACO,MAAPD,GACO,MAAPD,GACO,KAAPD,EAKA,OAHAtQ,EAAI2T,SAAU,EACd3T,EAAI4T,WAAY,EAChB5T,EAAIuS,aAAe,OACZ,EACF,GACE,MAAP9B,GACO,MAAPD,GACO,MAAPD,GACO,KAAPD,EAKA,OAHAtQ,EAAI2T,SAAU,EACd3T,EAAI4T,WAAY,EAChB5T,EAAIuS,aAAe,OACZ,EACF,GACE,MAAP9B,GACO,MAAPD,GACO,KAAPD,EAKA,OAHAvQ,EAAI2T,SAAU,EACd3T,EAAI4T,WAAY,EAChB5T,EAAIuS,aAAe,MACZ,EAIX,OAAO,ED4BHsB,CAAe9J,EAAUnH,EAAS5C,GACpC,OAGF,MAAMoR,kBAAEA,EAAiBC,oBAAEA,GAAwBzO,EAGnD,IAAIkR,GAAc,EACdC,IACAC,EAAc,EAGdtU,EAAQ,EAEZ,MAAMuU,EAnER,SACElK,EACAmK,GAEA,IAAIC,EAAO,KACPzU,EAAQ,EAGZ,IAAK,IAAI1E,EAAI+O,EAAS9O,OAAS,EAAGD,GAAK,EAAGA,GAAK,EAAG,CAChD,MAAMZ,EAAO2P,EAASzO,WAAWN,GAEjC,GAAa,KAATZ,IACFqZ,GAAO/T,GAAS,GAAKyU,IAAS,EAC9BV,GAAsB,GAAd/T,GAAS,IAAU1E,EAAI,EAC/B0E,GAAS,EAELA,IAAUwU,GACZ,OAAOxU,EAKXyU,EAAe,GAAPA,EAAa/Z,EAQvB,OAJAqZ,GAAO/T,GAAS,GAAKyU,IAAS,EAC9BV,GAAsB,GAAd/T,GAAS,IAAU,EAC3BA,GAAS,EAEFA,EAqCgB0U,CACrBrK,EACAsK,GAAO,IAGT,IAAK,IAAIC,EAAQ,EAAGA,EAAQL,EAAgBK,GAAS,EAAG,CACtD,MAAMH,EAAOV,GAAOa,GAAS,GACvBC,EAAad,GAAsB,GAAda,GAAS,IAsBpC,IAAIjJ,KAMsB,IAAtB+F,IACF/F,EAAQ8H,GAAUkB,GAAQF,EAAMzU,EAAQ,EAAGA,EAAQ2U,GAAO3U,GAAS,GAC/D,KAGNA,GAAS2U,GAAO3U,GAAS,GAGG,IAAxB2R,OAAgChG,IAClCA,EAAQ8H,GAAUkB,GAAQF,EAAMzU,EAAQ,EAAGA,EAAQ2U,GAAO3U,GAAS,GAC/D,KAGNA,GAAS2U,GAAO3U,GAAS,GAOD,IAAtB0R,OACA/F,GACyC,MAAxC0I,KAED1I,EAAQ8H,GAAUkB,GAAQF,EAAMzU,EAAQ,EAAGA,EAAQ2U,GAAO3U,GAAS,GAC/D,MAGNA,GAAS2U,GAAO3U,GAAS,GAIC,IAAxB2R,OACAhG,GACyC,MAAxC0I,KAED1I,EAAQ8H,GAAUkB,GAAQF,EAAMzU,EAAQ,EAAGA,EAAQ2U,GAAO3U,GAAS,GAC/D,MAGNA,GAAS2U,GAAO3U,GAAS,GAOD,IAAtB0R,OACA/F,GACyC,MAAxC0I,IACDC,GAAeM,IAEfjJ,EAAQ8H,GAAUkB,GAAQF,EAAMzU,EAAQ,EAAGA,EAAQ2U,GAAO3U,GAAS,GAC/D,KAGNA,GAAS2U,GAAO3U,GAAS,GAIC,IAAxB2R,OACAhG,GACyC,MAAxC0I,IACDC,GAAeM,IAEfjJ,EAAQ8H,GAAUkB,GAAQF,EAAMzU,EAAQ,EAAGA,EAAQ2U,GAAO3U,GAAS,GAC/D,MAGNA,GAAS2U,GAAO3U,GAAS,MAQrB2L,IACF0I,EAAY1I,EACZ2I,EAAcM,GAA6C,OAAnCjJ,GAAuC,EAAI,GACnEyI,EAAaS,GAIjBvU,EAAI2T,QAA+C,MAApCI,GACf/T,EAAI4T,UAAmD,MAAtCG,GA8BjB/T,EAAIuS,cA3BgB,IAAhBuB,EASyC,MAAxCC,GAQuC,OAAvCA,GAUchK,EAAS3N,MAAM0X,GAR9BE,GAAeC,EACXlK,EACAA,EAAS3N,MAAMqX,GAAkC,GAAzBO,EAAc,GAAM,KAX/BjK,EAAS3N,MAAMqX,GAAkC,GAAzBO,EAAc,GAAM,KAR1C,IAAnBC,EAAuBlK,EAAWA,EAAS3N,MAAMqX,GAAO,aErO9CvE,GAAM7G,EAAazF,EAA6B,IAC9D,OAAO+O,GAAUtJ,IAAewJ,GAAcjP,ERoBvC,CACL4P,OAAQ,KACRU,oBAAqB,KACrBnJ,SAAU,KACV4J,QAAS,KACTzB,KAAM,KACN0B,UAAW,KACXrB,aAAc,KACdS,UAAW,OSER,MAAMwB,GAAgB,UA7B3B/Z,YAAYwN,GAFLrN,SAAc,EAGnBA,KAAKe,OAAS,IAAI6F,YAAYyG,GAGzBxN,QACLG,KAAK+H,IAAM,EAGNlI,QACL,OAAOG,KAAKe,OAAOS,MAAM,EAAGxB,KAAK+H,KAG5BlI,KAAK+R,GACV5R,KAAKe,OAAOf,KAAK+H,OAAS6J,EAGrB/R,QACL,OAAoB,IAAbG,KAAK+H,IAGPlI,OACL,OAAOG,KAAK+H,MAAQ/H,KAAKe,OAAOV,OAG3BR,YACL,OAAOG,KAAKe,OAAOV,OAASL,KAAK+H,MAIS,MCrCjC8R,GAAY,cAOTC,GAAS5W,GAGvB,OAAuC,WADvCA,GAAS,WADTA,GAAUA,GAAK,EAAK,cACKA,GAAK,EAAK,aACpBA,GAAK,GAAM,YAA2B,YAGvC6W,GAAO7W,EAAW8W,GAChC,SAAU9W,EAAI8W,YAGAC,GAAO/W,EAAW8W,GAChC,OAAO9W,EAAI8W,WAGGE,GAAShX,EAAW8W,GAClC,OAAO9W,GAAK8W,WAGEG,GAAgBlZ,EAAamZ,EAAe9R,GAC1D,IAAIiR,EAAOM,GAEX,IAAK,IAAIzZ,EAAIga,EAAOha,EAAIkI,EAAKlI,GAAK,EAChCmZ,EAAe,GAAPA,EAAatY,EAAIP,WAAWN,GAGtC,OAAOmZ,IAAS,WAGFc,GAASpZ,GACvB,MAAmB,iBAARA,GAIQ,IAAfA,EAAIZ,OAHCwZ,GAOFM,GAAgBlZ,EAAK,EAAGA,EAAIZ,iBAGrBia,GAAYpa,GAC1B,MAAMiX,EAAS,IAAIvQ,YAAY1G,EAAQG,QACvC,IAAIyE,EAAQ,EACZ,IAAK,MAAM7D,KAAOf,EAChBiX,EAAOrS,KAAWuV,GAASpZ,GAE7B,OAAOkW,WAIOoD,GAAeC,EAAkBC,GAC/C,GAAID,EAASna,OAASoa,EAAOpa,OAC3B,OAAO,EAGT,MAAMqa,EAAOD,EAAOpa,OACpB,IAAK,IAAID,EAAI,EAAGA,EAAIsa,EAAMta,GAAK,EAC7B,GAAIoa,EAASpa,KAAOqa,EAAOra,GACzB,OAAO,EAIX,OAAO,WAGOua,GAAmBH,EAAkBC,EAAgBpS,GACnE,GAAImS,EAASna,OAASgI,EAAQoS,EAAOpa,OACnC,OAAO,EAGT,MAAMqa,EAAOrS,EAAQoS,EAAOpa,OAC5B,IAAK,IAAID,EAAIiI,EAAOjI,EAAIsa,EAAMta,GAAK,EACjC,GAAIoa,EAASpa,KAAOqa,EAAOra,EAAIiI,GAC7B,OAAO,EAIX,OAAO,WAGOuS,GAAQC,GAGtB,OAAOA,GAAM,IAAMA,GAAM,YAGXC,GAAQD,GAKtB,OAAQA,GAAM,IAAMA,GAAM,KAASA,GAAM,IAAMA,GAAM,GA+BvD,SAASE,GAAcF,GACrB,OACEC,GAAQD,IAAOD,GAAQC,IAAc,KAAPA,GA9BlC,SAAyBA,GAavB,OAAOA,GAAM,KAAOA,GAAM,IAiB6BG,CAAgBH,IAdzE,SAAoBA,GASlB,OAAOA,GAAM,MAAQA,GAAM,KAKmDI,CAAWJ,YAsD3EK,GACd3K,EACA4K,EACAC,EACAra,GAEA,MAAMO,EAAM+C,KAAKgX,IAAI9K,EAAQlQ,OAA6B,EAArBU,EAAOua,aAC5C,IAAIC,GAAS,EACTlT,EAAQ,EACRkR,EAAOM,GAEX,IAAK,IAAIzZ,EAAI,EAAGA,EAAIkB,EAAKlB,GAAK,EAAG,CAC/B,MAAMya,EAAKtK,EAAQ7P,WAAWN,IACJ,IAAtB2a,GAAcF,KACD,IAAXU,IACFhC,EAAOM,GACP0B,GAAS,EACTlT,EAAQjI,GAEVmZ,EAAe,GAAPA,EAAasB,IACD,IAAXU,IACTA,GAAS,EAEPnb,EAAIiI,EAAQ,KACQ,IAAnB8S,GAAsC,IAAV9S,IAE7BtH,EAAO8D,KAAK0U,IAAS,KAMd,IAAXgC,IACkB,IAAlBH,GACA7K,EAAQlQ,OAASgI,EAAQ,IACP,IAAlBtH,EAAOya,QAEPza,EAAO8D,KAAK0U,IAAS,YAITkC,GAAsBlL,EAAiBxP,GACrD,MAAMO,EAAM+C,KAAKgX,IAAI9K,EAAQlQ,OAA6B,EAArBU,EAAOua,aAC5C,IAAIC,GAAS,EACTlT,EAAQ,EACRkR,EAAOM,GAEX,IAAK,IAAIzZ,EAAI,EAAGA,EAAIkB,EAAKlB,GAAK,EAAG,CAC/B,MAAMya,EAAKtK,EAAQ7P,WAAWN,IACJ,IAAtB2a,GAAcF,KACD,IAAXU,IACFhC,EAAOM,GACP0B,GAAS,EACTlT,EAAQjI,GAEVmZ,EAAe,GAAPA,EAAasB,IACD,IAAXU,IACTA,GAAS,EACLnb,EAAIiI,EAAQ,GACdtH,EAAO8D,KAAK0U,IAAS,KAKZ,IAAXgC,GAAmBhL,EAAQlQ,OAASgI,EAAQ,IAAuB,IAAlBtH,EAAOya,QAC1Dza,EAAO8D,KAAK0U,IAAS,YAITmC,GAAenL,GAG7B,OAFAqJ,GAAc+B,QACdF,GAAsBlL,EAASqJ,IACxBA,GAAcpY,iBAsIPoa,GAAUja,EAAkB6W,GAC1C,OAAgC,aAxBR7W,EAAkB6W,GAC1C,GAAmB,IAAf7W,EAAItB,OACN,OAAQ,EAGV,IAAIoY,EAAM,EACNC,EAAO/W,EAAItB,OAAS,EAExB,KAAOoY,GAAOC,GAAM,CAClB,MAAMC,EAAOF,EAAMC,IAAU,EACvBE,EAASjX,EAAIgX,GACnB,GAAIC,EAASJ,EACXC,EAAME,EAAM,MACP,CAAA,KAAIC,EAASJ,GAGlB,OAAOG,EAFPD,EAAOC,EAAM,GAMjB,OAAQ,EAIDJ,CAAU5W,EAAK6W,GAGxB,MAAMqD,GAAe,4BACLC,GAAW7a,GACzB,OAAO4a,GAAanV,KAAKzF,GCxY3B,MAAM8a,GAAgB,CACpB3G,iBAAiB,EACjBuB,aAAa,EACbE,kBAAkB,GAgEPmF,GAAwD,CACnEC,OAAQ5B,GAAS,eACjB6B,WAAY7B,GAAS,YACrB8B,mBAAoB9B,GAAS,2BAC7B+B,SAAU/B,GAAS,iBACnBgC,YAAahC,GAAS,cACtB7M,MAAO6M,GAAS,YAChBiC,KAAMjC,GAAS,aACfkC,MAAOlC,GAAS,cAChBmC,SAAUnC,GAAS,cACnBoC,UAAWpC,GAAS,iBACpBqC,WAAYrC,GAAS,iBACrBsC,SAAUtC,GAAS,cACnBuC,MAAOvC,GAAS,cAChBwC,OAAQxC,GAAS,eACjByC,kBAAmBzC,GAAS,eAC5B0C,MAAO1C,GAAS,cAChB2C,KAAM3C,GAAS,aACf4C,UAAW5C,GAAS,kBACpB6C,OAAQ7C,GAAS,eACjB8C,eAAgB9C,GAAS,uBACzB+C,YAAa/C,GAAS,cACtBgD,WAAYhD,GAAS,mBACrBiD,SAAUjD,GAAS,oBACnBkD,UAAWlD,GAAS,oBACpBmD,UAAWnD,GAAS,cACpBoD,aAAcpD,GAAS,cACvBqD,UAAWrD,GAAS,kBACpBsD,IAAKtD,GAAS,YACduD,QAASvD,GAAS,cAClBwD,eAAgBxD,GAAS,YACzByD,KAAMzD,GAAS,wBAGD0D,GAAqB5O,GACnC,IAAIoK,EAAOM,GACX,IAAK,IAAIrZ,EAAI2O,EAAS9O,OAAS,EAAGG,GAAK,EAAGA,GAAK,EAC7C+Y,EAAe,GAAPA,EAAapK,EAASzO,WAAWF,GAE3C,OAAO+Y,IAAS,WAGFyE,GACd7O,EACA7G,EACA2V,GAEArE,GAAc+B,QACd,IAAIpC,EAAOM,GAGX,IAAK,IAAIzZ,EAAIkI,EAAM,EAAGlI,GAAK,EAAGA,GAAK,EAAG,CACpC,MAAMZ,EAAO2P,EAASzO,WAAWN,GAGpB,KAATZ,GAAyBY,EAAI6d,GAC/BrE,GAAc/U,KAAK0U,IAAS,GAI9BA,EAAe,GAAPA,EAAa/Z,EAIvB,OADAoa,GAAc/U,KAAK0U,IAAS,GACrBK,GAAcpY,iBAqBP0c,GAAkC/O,EAAkByI,GAClE,MAAMuG,WAbuChP,EAAkByI,GAC/D,IAAIuG,EAA6C,KAEjD,MAAMC,EAAaxG,EAAO1K,QAAQ,KAClC,IAAoB,IAAhBkR,EAAmB,CACrB,MAAMzG,EAAeC,EAAOpW,MAAM4c,EAAa,GAC/CD,EAA8BhP,EAAS3N,MAAM,GAAImW,EAAatX,OAAS,GAGzE,OAAO8d,EAI6BE,CAA+BlP,EAAUyI,GAC7E,OAAoC,OAAhCuG,EACKH,GACLG,EACAA,EAA4B9d,OAC5B8d,EAA4B9d,QAGzBsG,WAGO2X,GACdnP,EACAyI,GAEA,OAAOoG,GAA4B7O,EAAUA,EAAS9O,OAAQ8O,EAAS9O,OAASuX,EAAOvX,cA8CpEke,GAwEnB1e,aAAY2e,UACVA,EAASC,MACTA,EAAK7a,KAELA,EAAIgU,OAEJA,EAAMzI,SACNA,EAAQ1B,IACRA,EAAGiR,aAEHA,EAAYC,eACZA,EAAcC,wBAEdA,IA2BA,GA5CM5e,iBAAkCP,EAClCO,yBAA0CP,EAC1CO,uBAAwCP,EAiB9CO,KAAK4e,wBAA0BA,EAC/B5e,KAAK0P,GAAK8O,EACVxe,KAAKye,MAAQA,EACbze,KAAK4D,KAAOA,EAEZ5D,KAAKyN,IAAMA,EACXzN,KAAKmP,SAAWA,EAChBnP,KAAK4X,OAASA,EAEd5X,KAAK6e,qBACuB,IAA1BF,EAAete,OACXsG,EACA2X,GAAoCK,EAAgBD,GAE1D1e,KAAK8e,mBACuB,IAA1BH,EAAete,OACXsG,EACAuX,GAAkCS,EAAgBD,GAGxD1e,KAAK+e,aAtJT,SACE5P,EACAyI,EACA+G,EACAD,EACA9a,GAEA,MAAa,eAATA,GAAkC,cAATA,IAEA,IAAlBgU,EAAOvX,QAAwC,IAAxBqe,EAAare,OACtCuX,IAAW8G,EACS,IAAlB9G,EAAOvX,QAA0C,IAA1Bse,EAAete,OACxCuX,IAAW+G,EACe,IAAxBD,EAAare,QAAoC,IAApB8O,EAAS9O,QACxC8O,IAAauP,GAwIAK,CAAa5P,EAAUyI,EAAQ+G,EAAgBD,EAAc9a,GACjF5D,KAAKgf,cAAgBhf,KAAK+e,aAG1B/e,KAAKif,aAAc,EACD,cAAdjf,KAAK4D,MAAwB5D,KAAKyN,IAAI8H,WAAW,QAAUvV,KAAKyN,IAAI8H,WAAW,QACjFvV,KAAKkf,QAAS,EACdlf,KAAKmf,SAAU,EACfnf,KAAK4D,KAAO,YACZ5D,KAAKif,aAAc,OACd,GAAIjf,KAAKyN,IAAI8H,WAAW,SAC7BvV,KAAKkf,QAAS,EACdlf,KAAKmf,SAAU,OACV,GAAInf,KAAKyN,IAAI8H,WAAW,UAC7BvV,KAAKmf,SAAU,EACfnf,KAAKkf,QAAS,OACT,GAAIlf,KAAKyN,IAAI8H,WAAW,SAAU,CACvCvV,KAAKkf,QAAS,EACdlf,KAAKmf,SAAU,EAGf,MAAMC,EAAcpf,KAAKyN,IAAIP,QAAQ,MAChB,IAAjBkS,IACFpf,KAAKyN,IAAMzN,KAAKyN,IAAIjM,MAAM,EAAG4d,SAG/Bpf,KAAKkf,QAAS,EACdlf,KAAKmf,SAAU,EACfnf,KAAKif,aAAc,EAnIhBpf,uBAAsB2e,UAC3BA,EAAY,IAAGC,MACfA,EAAQ,EAAChR,IACTA,EAAM,GAAE0B,SACRA,EAAQyI,OACRA,EAAMyH,UACNA,EAAY,GAAEV,eACdA,EAAcD,aACdA,EAAY9a,KACZA,EAAO,aAAYgb,wBACnBA,IAIA,GAFAnR,EAAMA,EAAI0I,mBAEO1W,IAAb0P,QAAqC1P,IAAXmY,EAAsB,CAClD,MAAM0H,EAAShL,GAAM7G,EAAKsO,IAC1B5M,EAAWA,GAAYmQ,EAAOnQ,UAAY,GAC1CyI,EAASA,GAAU0H,EAAO1H,QAAU,GAItC,QAAuBnY,IAAnBkf,QAAiDlf,IAAjBif,EAA4B,CAC9D,MAAMY,EAAShL,GAAMqK,GAAkBD,GAAgBW,EAAWtD,IAClE4C,EAAiBA,GAAkBW,EAAOnQ,UAAY,GACtDuP,EAAeA,GAAgBY,EAAO1H,QAAU+G,GAAkB,GAGpE,OAAO,IAAIJ,GAAQ,CACjBC,UAAAA,EACAC,MAAAA,EAEA7G,OAAAA,EACAzI,SAAAA,EACA1B,IAAAA,EAEAiR,aAAAA,EACAC,eAAAA,EACAU,UAAAA,EAEAzb,KAAAA,EAEAgb,wBAAAA,IA8FG/e,oBAQL,YAP4BJ,IAAxBO,KAAKuf,iBACPvf,KAAKuf,eACsB,IAAzBvf,KAAKmP,SAAS9O,OACVsG,EACA2X,GAAoCte,KAAKmP,SAAUnP,KAAK4X,SAGzD5X,KAAKuf,eAGP1f,kBAQL,YAP0BJ,IAAtBO,KAAKwf,eACPxf,KAAKwf,aACsB,IAAzBxf,KAAKmP,SAAS9O,OACVsG,EACAuX,GAAkCle,KAAKmP,SAAUnP,KAAK4X,SAGvD5X,KAAKwf,aAGP3f,YACL,QAAoBJ,IAAhBO,KAAKyR,OAAsB,CAC7BmI,GAAc+B,QAEd,IAAK,MAAMpC,KAAQvZ,KAAK6e,qBACtBjF,GAAc/U,KAAK0U,GAIrBK,GAAc/U,KAAKmX,GAAsBhc,KAAK4D,OAE9C6X,GAAsBzb,KAAKyN,IAAKmM,IAEhC5Z,KAAKyR,OAASmI,GAAcpY,QAG9B,OAAOxB,KAAKyR,OAGP5R,cACL,MAAqB,eAAdG,KAAK4D,MAAuC,cAAd5D,KAAK4D,KAGrC/D,aACL,MAAqB,cAAdG,KAAK4D,MAAsC,aAAd5D,KAAK4D,KASpC/D,qBACL,MAAM4f,EAAczf,KAAK4D,KAKzB,OAJA5D,KAAK4D,cCvZ8B6J,GACrC,MAAMiS,WCnBgBjS,GACtB,IAAIkS,EAAYlS,EAAIpN,OAGpB,MAAMuf,EAAkBnS,EAAIP,QAAQ,MACX,IAArB0S,IACFD,EAAYC,GAGd,MAAMC,EAAepS,EAAIP,QAAQ,MACX,IAAlB2S,GAAuBA,EAAeF,IACxCA,EAAYE,GAGd,IAAIC,EAAaH,EAAY,EACzBngB,EAAO,EACX,KAAOsgB,GAAc,IACnBtgB,EAAOiO,EAAI/M,WAAWof,GAIc,IAFhCtgB,GAAQ,IAAMA,GAAQ,IACrBA,GAAQ,IAAMA,GAAQ,KACtBA,GAAQ,IAAMA,GAAQ,KALLsgB,GAAc,GAWtC,OAAa,KAATtgB,GAAesgB,EAAa,GAAKH,EAAYG,GAAc,GACtD,GAGFrS,EAAIjM,MAAMse,EAAa,EAAGH,GDZrBI,CAAQtS,GAGpB,OACEuS,GAAiBpR,IAAI8Q,IACrBjS,EAAI8H,WAAW,gBACf9H,EAAI8H,WAAW,2BAER,QAKP0K,GAAiBrR,IAAI8Q,IACrBjS,EAAI8H,WAAW,gBACf9H,EAAI8H,WAAW,eAER,QAIL2K,GAAiBtR,IAAI8Q,IAAQjS,EAAI8H,WAAW,iBACvC,aAKP4K,GAAkBvR,IAAI8Q,IACrBjS,EAAI8H,WAAW,WACb9H,EAAI8H,WAAW,gCACd9H,EAAI8H,WAAW,gCACf9H,EAAI8H,WAAW,kCACf9H,EAAI8H,WAAW,kCACf9H,EAAI8H,WAAW,yBACf9H,EAAI8H,WAAW,yBACf9H,EAAI8H,WAAW,4BACf9H,EAAI8H,WAAW,4BACf9H,EAAI8H,WAAW,4BACf9H,EAAI8H,WAAW,4BACf9H,EAAI8H,WAAW,4BACf9H,EAAI8H,WAAW,4BACf9H,EAAI8H,WAAW,sBACf9H,EAAI8H,WAAW,yBACf9H,EAAI8H,WAAW,2BACf9H,EAAI8H,WAAW,4BACnB9H,EAAI8H,WAAW,4CACf9H,EAAI8H,WAAW,4CAER,SAKP6K,GAAoBxR,IAAI8Q,IACxBjS,EAAI8H,WAAW,mBACf9H,EAAI8H,WAAW,2BACf9H,EAAI8H,WAAW,mCACf9H,EAAI8H,WAAW,kCAER,WAIL8K,GAAgBzR,IAAI8Q,IAAQjS,EAAI8H,WAAW,cACtC,OAGF,QDmVO+K,CAAatgB,KAAKyN,KAC1BgS,IAAgBzf,KAAK4D,OACvB5D,KAAKyR,YAAShS,GAETO,KAAK4D,YGhaH2c,GAuEX1gB,aAAY2gB,SACVA,EAAQC,UACRA,EAASC,YACTA,EAAWC,aACXA,IAQA3gB,KAAKwgB,SAAWA,EAChBxgB,KAAKygB,UAAYA,EAGjBzgB,KAAK0gB,YAAcA,EACnB1gB,KAAK2gB,aAAeA,EAvFf9gB,aAAauP,GAClB,GAAqB,IAAjBA,EAAM/O,OACR,OAGF,MAAMmgB,EAAqB,GACrBE,EAAwB,GACxBD,EAAsB,GACtBE,EAAyB,GAE/B,IAAK,IAAIxR,KAAYC,EAAO,CACtB0M,GAAW3M,KACbA,EAAW9I,EAAQ8I,IAGrB,MAAMyR,EAA+C,MAA3BzR,EAASzO,WAAW,GACxCmgB,EACyC,KAA7C1R,EAASzO,WAAWyO,EAAS9O,OAAS,IACO,KAA7C8O,EAASzO,WAAWyO,EAAS9O,OAAS,GAElCgI,EAAgBuY,EAAW,EAAI,EAC/BtY,EAAcuY,EAAS1R,EAAS9O,OAAS,EAAI8O,EAAS9O,OAEtDkZ,EAAOwE,IACE,IAAb6C,IAAgC,IAAXC,EAAkB1R,EAAS3N,MAAM6G,EAAOC,GAAO6G,GAGlEyR,EACEC,EACFH,EAAY7b,KAAK0U,GAEjBoH,EAAa9b,KAAK0U,GAGhBsH,EACFL,EAAS3b,KAAK0U,GAEdkH,EAAU5b,KAAK0U,GAKrB,OAAO,IAAIgH,GAAQ,CACjBC,SAA8B,IAApBA,EAASngB,OAAe,IAAIuG,YAAY4Z,GAAUM,YAASrhB,EACrEghB,UAAgC,IAArBA,EAAUpgB,OAAe,IAAIuG,YAAY6Z,GAAWK,YAASrhB,EACxEihB,YAAoC,IAAvBA,EAAYrgB,OAAe,IAAIuG,YAAY8Z,GAAaI,YAASrhB,EAC9EkhB,aAAsC,IAAxBA,EAAatgB,OAAe,IAAIuG,YAAY+Z,GAAcG,YAASrhB,IAI9EI,mBAAmBkB,GACxB,MAAMggB,EAAgBhgB,EAAOsI,WAG7B,OAAO,IAAIkX,GAAQ,CACjBC,SAAkC,IAAP,EAAhBO,GAA2BhgB,EAAOigB,sBAAmBvhB,EAChEghB,UAAmC,IAAP,EAAhBM,GAA2BhgB,EAAOigB,sBAAmBvhB,EACjEihB,YAAqC,IAAP,EAAhBK,GAA2BhgB,EAAOigB,sBAAmBvhB,EACnEkhB,aAAsC,IAAP,EAAhBI,GAA2BhgB,EAAOigB,sBAAmBvhB,IAgCjEI,SAAS0Z,GACd,MAAMkH,UAAEA,EAASD,SAAEA,EAAQG,aAAEA,EAAYD,YAAEA,GAAgB1gB,KAE3D,QAAkBP,IAAdghB,EACF,IAAK,MAAMtR,KAAYsR,EACrBlH,EAAe,GAAPA,EAAapK,EAIzB,QAAiB1P,IAAb+gB,EACF,IAAK,MAAMK,KAAUL,EACnBjH,EAAe,GAAPA,EAAasH,EAIzB,QAAqBphB,IAAjBkhB,EACF,IAAK,MAAMM,KAAeN,EACxBpH,EAAe,GAAPA,EAAa0H,EAIzB,QAAoBxhB,IAAhBihB,EACF,IAAK,MAAMQ,KAAaR,EACtBnH,EAAe,GAAPA,EAAa2H,EAIzB,OAAO3H,EAGF1Z,UAAUkB,GAEf,MAAM+D,EAAQ/D,EAAOogB,SACrBpgB,EAAOqI,UAAU,GAGjB,IAAI2X,EAAgB,OAEEthB,IAAlBO,KAAKwgB,WACPO,GAAiB,EACjBhgB,EAAOqgB,gBAAgBphB,KAAKwgB,gBAGP/gB,IAAnBO,KAAKygB,YACPM,GAAiB,EACjBhgB,EAAOqgB,gBAAgBphB,KAAKygB,iBAGLhhB,IAArBO,KAAK0gB,cACPK,GAAiB,EACjBhgB,EAAOqgB,gBAAgBphB,KAAK0gB,mBAGJjhB,IAAtBO,KAAK2gB,eACPI,GAAiB,EACjBhgB,EAAOqgB,gBAAgBphB,KAAK2gB,eAG9B5f,EAAOsgB,QAAQvc,EAAOic,GAGjBlhB,oBACL,IAAIyhB,EAAmB,EAkBvB,YAhBsB7hB,IAAlBO,KAAKwgB,WACPc,GAAY3Z,EAAkB3H,KAAKwgB,gBAGd/gB,IAAnBO,KAAKygB,YACPa,GAAY3Z,EAAkB3H,KAAKygB,iBAGXhhB,IAAtBO,KAAK2gB,eACPW,GAAY3Z,EAAkB3H,KAAK2gB,oBAGZlhB,IAArBO,KAAK0gB,cACPY,GAAY3Z,EAAkB3H,KAAK0gB,cAG9BY,EAGFzhB,MAAM0f,EAA6BC,GAExC,QAA0B/f,IAAtBO,KAAK2gB,aACP,IAAK,MAAMpH,KAAQgG,EACjB,GAAI3D,GAAU5b,KAAK2gB,aAAcpH,GAC/B,OAAO,EAMb,QAAyB9Z,IAArBO,KAAK0gB,YACP,IAAK,MAAMnH,KAAQiG,EACjB,GAAI5D,GAAU5b,KAAK0gB,YAAanH,GAC9B,OAAO,EAMb,QAAuB9Z,IAAnBO,KAAKygB,gBAA6ChhB,IAAlBO,KAAKwgB,SAAwB,CAC/D,QAAuB/gB,IAAnBO,KAAKygB,UACP,IAAK,MAAMlH,KAAQgG,EACjB,GAAI3D,GAAU5b,KAAKygB,UAAWlH,GAC5B,OAAO,EAKb,QAAsB9Z,IAAlBO,KAAKwgB,SACP,IAAK,MAAMjH,KAAQiG,EACjB,GAAI5D,GAAU5b,KAAKwgB,SAAUjH,GAC3B,OAAO,EAKb,OAAO,EAGT,OAAO,YCrNKgI,GAA4BC,GAC1C,IAAmC,IAA/BA,EAAKjM,WAAW,WAClB,OAGF,MAAMtG,EAAS,aACT0E,EAAsB,GAE5B,IAAI7O,EAAQ,EAKZ,KAAO0c,EAAKjM,WAAWtG,EAAQnK,IAAQ,CACrCA,GAASmK,EAAO5O,OAChB,IAAIohB,EAAsB,EAC1B,MAAMC,EAAuB5c,EAC7B,IAAI6c,GAAQ,EACZ,KAAO7c,EAAQ0c,EAAKnhB,QAAkC,IAAxBohB,EAA2B3c,GAAS,EAAG,CACnE,MAAMtF,EAAOgiB,EAAK9gB,WAAWoE,GAEhB,KAAT6c,IACW,KAATniB,IACFiiB,GAAuB,GAGZ,KAATjiB,IACFiiB,GAAuB,IAI3BE,EAAOniB,EAGTmU,EAAU9O,KAAK2c,EAAKhgB,MAAMkgB,EAAsB5c,EAAQ,IAG1D,OAAIA,IAAU0c,EAAKnhB,OAIZ,CAAC,SAAUsT,QAJlB,EAuHF,SAASiO,GACPC,EACAC,EACAC,GAEA,IAAK,MAAMxR,KAAWuR,EACpB,IAA8B,IAA1BD,EAAI3U,QAAQqD,GACd,OAAO,EAIX,IAAK,MAAMA,KAAWwR,EACpB,IAA0B,IAAtBxR,EAAQ7J,KAAKmb,GACf,OAAO,EAIX,OAAO,ECnJT,MAAMG,GAA8B,CAACrb,GACxBsb,GAAgC,4BAM7C,SAASC,GAAiB9P,GACxB,IAAK,IAAIhS,EAAI,EAAGA,EAAIgS,EAAS/R,OAAQD,GAAK,EAAG,CAC3C,MAAMZ,EAAe4S,EAAS1R,WAAWN,GACzC,KAEa,KAATZ,GACS,KAATA,GACCA,GAAQ,IAAMA,GAAQ,IACtBA,GAAQ,IAAMA,GAAQ,IACtBA,GAAQ,IAAMA,GAAQ,KAEzB,CACA,GAAIY,EAAIgS,EAAS/R,OAAS,EAAG,CAI3B,MAAM8hB,EAAW/P,EAAS1R,WAAWN,EAAI,GACzC,GACW,KAATZ,GACS,KAATA,GACS,KAATA,GACU,KAATA,IACe,KAAb2iB,GACc,KAAbA,GACa,MAAbA,GACa,KAAbA,GACa,KAAbA,GAEJ,OAAO,EAGX,OAAO,GAIX,OAAO,EAOT,SAASC,GAAqBhQ,EAAkB/J,GAC9C,OACE+J,EAASmD,WAAW,UAAWlN,IAC/B+J,EAASmD,WAAW,UAAWlN,IAC/B+J,EAASmD,WAAW,SAAUlN,GASlC,MAAMga,GAAa,MACjB,MAAMC,EACgB,oBAAblG,SACHA,SAASmG,cAAc,OACvB,CACEC,QAAS,QAKXC,EAAkB,iBAExB,OAAO,SAAwBrQ,GAC7B,GAAIqQ,EAAgB/b,KAAK0L,GACvB,OAAO,EAGT,IARc,CAACA,IAAqCkQ,EAAIE,QAAQpQ,IAS9DoQ,CAAQpQ,GACR,MAAOxE,GACP,OAAO,EAGT,OAAO,IAvBQ,SAwEE8U,GA6NnB7iB,aAAYma,KACVA,EAAI5H,SACJA,EAAQuQ,QACRA,EAAOC,QACPA,EAAOC,MACPA,IAQA7iB,KAAKga,KAAOA,EACZha,KAAKoS,SAAWA,EAChBpS,KAAK2iB,QAAUA,EACf3iB,KAAK6iB,MAAQA,EAEb7iB,KAAK0P,QAAKjQ,EACVO,KAAK4iB,QAAUA,EA1OV/iB,aAAaijB,EAAc3X,GAAiB,GAIjD,IACIiH,EACAuQ,EACAE,EAHA7I,EAAO,EAIX,MAAM+I,EAAaD,EAAK5V,QAAQ,KAG1B8V,EAAkBD,EAAa,EACrC,IAAIE,EAAmBD,EAAkB,EAoBzC,GATIF,EAAKziB,OAAS2iB,IACc,MAA1BF,EAAKE,IACPhJ,EAAOC,GAAOD,KACdiJ,GAAoB,GACe,MAA1BH,EAAKE,KACdC,GAAoB,IAIpBA,GAAoBH,EAAKziB,OAC3B,OAAO,KAiBT,GAJI0iB,EAAa,IACfJ,EAAUpC,GAAQjM,MAAMwO,EAAKthB,MAAM,EAAGuhB,GAAYvc,MAAM,OAGtDsc,EAAKhL,SAAS,aAEhBkC,EAAOC,GAAOD,MACdA,EAAOC,GAAOD,OACd8I,EAAOA,EAAKthB,MAAM,GAAI,QACjB,GACLshB,EAAKziB,OAAS4iB,GAAoB,GAClCH,EAAKhL,SAAS,OACiC,IAA/CgL,EAAK5V,QAAQ,UAAW+V,GACxB,CAEA,MAAMC,EAAeJ,EAAK5V,QAAQ,UAAW+V,GAC7CJ,EAAQC,EAAKthB,MAAM0hB,EAAe,GAAI,GACtCJ,EAAOA,EAAKthB,MAAM,EAAG0hB,GAIvB,GAA0C,KAAtCJ,EAAKpiB,WAAWuiB,GAAoC,CACtD,IACyE,IAAvEtI,GAAmBmI,EAAM,mBAAoBG,EAAmB,IAC3B,KAArCH,EAAKpiB,WAAWoiB,EAAKziB,OAAS,GAE9B,OAAO,KAcT,GADA+R,EAAW0Q,EAAKthB,MAAMyhB,EAAkBH,EAAKziB,aACCZ,IAA1C8hB,GAA4BnP,GAC9B,OAAO,UAEJ,GACL0Q,EAAKziB,OAAS4iB,EAAmB,GACK,KAAtCH,EAAKpiB,WAAWuiB,IAChBtI,GAAmBmI,EAAM,OAAQG,GACjC,CAEA,SACexjB,IAAZkjB,QACwBljB,IAAtBkjB,EAAQlC,gBAAgDhhB,IAArBkjB,EAAQnC,YACN,IAAxCzG,GAAOC,KAEP,OAAO,KAST,GANAA,EAAOC,GAAOD,KACd5H,EAAW0Q,EAAKthB,MAAMyhB,EAAmB,EAAGH,EAAKziB,OAAS,IAKd,IAAxC0Z,GAAOC,MAA8D,IAApB5H,EAAS/R,OAC5D,OAAO,SAEJ,CACL+R,EAAW0Q,EAAKthB,MAAMyhB,GACtB,MAAME,EAAetO,GAAiBzC,GACtC,GAAI+Q,IAAiBvO,GAAaM,SAChC8E,EAAOC,GAAOD,YACT,GAAImJ,IAAiBvO,GAAaI,UAAYqN,GAAWjQ,GAG9D,OAAO,KAKX,QAAgB3S,IAAZkjB,IAAmE,IAA1C5I,GAAOC,OAClC,OAAO,KAGT,QAAiBva,IAAb2S,IAEE0J,GAAW1J,KACb4H,EAAOC,GAAOD,OAKgC,IAA9CD,GAAOC,OACiC,IAAxCD,GAAOC,QACmC,IAA1CD,GAAOC,SACsB,IAA7B5H,EAASmD,WAAW,MACpB,CACA,MAAMG,EAAKtD,EAAS1R,WAAW,GACzBiV,EAAKvD,EAAS1R,WAAW,GACzBkV,EAAKxD,EAAS1R,WAAW,IAKmB,IAA9CqZ,GAAOC,OACE,KAAPtE,GAAuBwM,GAAiB9P,GAC1C4H,EAAOC,GAAOD,KACE,KAAPtE,GAAuBwM,GAAiB9P,GACjD4H,EAAOC,GAAOD,OAEP,KAAPtE,GACO,KAAPC,GACO,MAAPC,GACAwM,GAAqBhQ,EAAU,IAIxB,KAAPsD,GACO,MAAPC,GACAyM,GAAqBhQ,EAAU,MAJ/B4H,EAAOC,GAAOD,QAYtB,OAAO,IAAI0I,GAAe,CACxB1I,KAAAA,EACA4I,SAAmB,IAAVzX,EAAiB2X,OAAOrjB,EACjC2S,SAAAA,EACAyQ,MAAAA,EACAF,QAAAA,IAQG9iB,mBAAmBkB,GACxB,MAAMiZ,EAAOjZ,EAAOsI,WACd+Z,EAAYrJ,GAAOC,KACnB+G,EAAgBhgB,EAAOsI,WACvB+I,EAAWgR,EAAYriB,EAAOgK,UAAYhK,EAAOsiB,sBAGvD,OAAO,IAAIX,GAAe,CAExB1I,KAAAA,EACA5H,SAAAA,EAGAuQ,QAAiC,IAAP,EAAhB5B,GAA2BR,GAAQ+C,YAAYviB,QAAUtB,EACnEmjB,QAAiC,IAAP,EAAhB7B,GAA2BhgB,EAAOwiB,sBAAmB9jB,EAC/DojB,MAA+B,IAAP,EAAhB9B,GAA2BhgB,EAAOyJ,gBAAa/K,IAqCpDI,mBACL,OAAO,EAGFA,kBACL,OAAO,EAeFA,UAAUkB,GAEfA,EAAOqI,UAAUpJ,KAAKga,MACtB,MAAMlV,EAAQ/D,EAAOogB,SACrBpgB,EAAOqI,UAAU,GAEbpJ,KAAKojB,YACPriB,EAAO+J,SAAS9K,KAAKoS,UAErBrR,EAAOyiB,qBAAqBxjB,KAAKoS,UAInC,IAAI2O,EAAgB,OAECthB,IAAjBO,KAAK2iB,UACP5B,GAAiB,EACjB/gB,KAAK2iB,QAAQc,UAAU1iB,SAGJtB,IAAjBO,KAAK4iB,UACP7B,GAAiB,EACjBhgB,EAAO2iB,gBAAgB1jB,KAAK4iB,eAGXnjB,IAAfO,KAAK6iB,QACP9B,GAAiB,EACjBhgB,EAAOuJ,UAAUtK,KAAK6iB,QAGxB9hB,EAAOsgB,QAAQvc,EAAOic,GAQjBlhB,kBAAkBsI,GACvB,IAAImZ,EAAmB,EAoBvB,OAlBIthB,KAAKojB,YACP9B,GAAY7Z,EAAWzH,KAAKoS,UAE5BkP,YlCzViCrgB,EAAakH,GAClD,OAAuB,IAAhBA,EACHZ,EACEN,IAA0B2D,iBAAiBvI,kBAAkBpB,IAC7D,GAEFuG,EAAYvG,GkCmVA0iB,CAAuB3jB,KAAKoS,SAAUjK,QAG/B1I,IAAjBO,KAAK2iB,UACPrB,GAAYthB,KAAK2iB,QAAQiB,0BAGNnkB,IAAjBO,KAAK4iB,UACPtB,YlC/U4BrgB,EAAakH,GAC7C,OAAuB,IAAhBA,EACHZ,EACEN,IAA0B4D,YAAYxI,kBAAkBmD,EAAOvE,KAC/D,GAEFwG,EAAWxG,GkCyUC4iB,CAAkB7jB,KAAK4iB,QAASza,SAG3B1I,IAAfO,KAAK6iB,QACPvB,GAAY9Z,EAAYxH,KAAK6iB,QAGxBvB,EAOFzhB,WACL,QAAqBJ,IAAjBO,KAAK4iB,QACP,OAAO5iB,KAAK4iB,QAGd,IAAIxP,EAAS,GAoBb,YAlBqB3T,IAAjBO,KAAK2iB,UACPvP,GAAU,eAGRpT,KAAK8jB,WACP1Q,GAAU,MAEVA,GAAU,KAGRpT,KAAK+jB,kBACP3Q,GAAU,OACVA,GAAUpT,KAAKoS,SACfgB,GAAU,KAEVA,GAAUpT,KAAKoS,SAGVgB,EAGFvT,MAAMsP,EAAkByI,GAE7B,OAAqC,IAAjC5X,KAAKgkB,4BAKJ7U,GAAYnP,KAAKgkB,gCAIDvkB,IAAjBO,KAAK2iB,SAIA3iB,KAAK2iB,QAAQlS,MACE,IAApBtB,EAAS9O,OACLsG,EACA2X,GAAoCnP,EAAUyI,GAC9B,IAApBzI,EAAS9O,OACLsG,EACAuX,GAAkC/O,EAAUyI,KAW/C/X,YACL,MAAM4R,EAAwB,GAO9B,QAAqBhS,IAAjBO,KAAK2iB,QAAuB,CAC9B,MAAMlC,UAAEA,EAASD,SAAEA,GAAaxgB,KAAK2iB,QAErC,QAAkBljB,IAAdghB,EACF,IAAK,MAAMtR,KAAYsR,EACrBhP,EAAO5M,KAAK,IAAI+B,YAAY,CAACuI,KAIjC,QAAiB1P,IAAb+gB,EACF,IAAK,MAAMK,KAAUL,EACnB/O,EAAO5M,KAAK,IAAI+B,YAAY,CAACia,KAMnC,GAAsB,IAAlBpP,EAAOpR,SAAoC,IAApBL,KAAK8jB,WAC9B,GAAI9jB,KAAKikB,gBAAkBjkB,KAAKkkB,kBAAmB,CAajD,IAAIC,EAAgB,EACpB,MAAM/R,EAAWpS,KAAKoS,SACtB,KAAO+R,EAAgB/R,EAAS/R,OAAQ8jB,GAAiB,EAAG,CAC1D,MAAM3kB,EAAO4S,EAAS1R,WAAWyjB,GACjC,GACW,KAAT3kB,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEA,MAIJ,MAAMmC,EAAM,IAAIiF,YAAY,GAC5BjF,EAAI,GAAKwY,GAAgB/H,EAAU,EAAG+R,GACtC1S,EAAO5M,KAAKlD,QACP,IAA8B,IAA1B3B,KAAKokB,iBAA2B,CACzC,MAAMhS,EAAmBpS,KAAKqkB,cAG9B,IAAIC,EAAYlS,EAASlF,QAAQ,QACjC,IAAmB,IAAfoX,EACF,OAAOtC,GAETsC,GAAa,EAIb,IAAInJ,GAA0B,EAC1BC,GAAyB,EACU,KAAnChJ,EAAS1R,WAAW4jB,IAEtBnJ,GAAiB,EACjBmJ,GAAa,GAC+B,KAAnClS,EAAS1R,WAAW4jB,GAE7BA,GAAa,EAEblJ,GAAgB,EAGlBkJ,GAAa,EAGb,MAAMC,EAAUnS,EAASlF,QAAQ,IAAKoX,GACtC,IAAiB,IAAbC,EAIF,OAAOvC,GAGTvQ,EAAO5M,cNtXb0L,EACA4K,EACAC,GAIA,OAFAxB,GAAc+B,QACdT,GAAgB3K,EAAS4K,EAAgBC,EAAexB,IACjDA,GAAcpY,QMiXbkR,CAAS1S,KAAKoS,SAAS5Q,MAAM8iB,EAAWC,GAAUpJ,EAAgBC,IAKxE,OAAsB,IAAlB3J,EAAOpR,OACF2hB,GAGFvQ,EAGF5R,UAAU2kB,GACf,IAAIC,EAAazkB,KAAKqkB,cAClBK,EAA4B,GAChC,IAAiC,IAA7BD,EAAWvX,QAAQ,KAAa,CAClC,MAAMkC,EAAQqV,EAAWje,MAAM,KAC/B,GAAqB,IAAjB4I,EAAM/O,OACR,OAGF,MAAMskB,EAAYvV,EAAM,GACxB,QAAkB3P,IAAdklB,EACF,OAGFF,EAAaE,EACbD,EAAkBtV,EAAM5N,MAAM,GAAGgN,KAAKoW,GAAMA,EAAEjS,SAGhD,IAAIuK,EAASsH,EAAG5jB,IAAI6jB,GACpB,QAAehlB,IAAXyd,EAAsB,CACxB,IAAK,IAAI9c,EAAI,EAAGA,EAAIskB,EAAgBrkB,OAAQD,GAAK,EAC/C8c,EAASA,EAAO3W,QAAQ,KAAKnG,EAAI,MAAOskB,EAAgBtkB,IAG1D,OAAO8c,GAMJrd,wBACL,YAAwBJ,IAAjBO,KAAK2iB,QAGP9iB,QAIL,YAHgBJ,IAAZO,KAAK0P,KACP1P,KAAK0P,GAjjBX,SACEsK,EACA5H,EACAuQ,EACAE,GAEA,IAAItJ,EAAO,OAAcS,EAEzB,QAAiBva,IAAb2S,EACF,IAAK,IAAIhS,EAAI,EAAGA,EAAIgS,EAAS/R,OAAQD,GAAK,EACxCmZ,EAAe,GAAPA,EAAanH,EAAS1R,WAAWN,GAQ7C,QAJgBX,IAAZkjB,IACFpJ,EAAOoJ,EAAQkC,SAAStL,SAGZ9Z,IAAVojB,EACF,IAAK,IAAIziB,EAAI,EAAGA,EAAIyiB,EAAMxiB,OAAQD,GAAK,EACrCmZ,EAAe,GAAPA,EAAasJ,EAAMniB,WAAWN,GAI1C,OAAOmZ,IAAS,EAyhBFuL,CAAgB9kB,KAAKga,KAAMha,KAAKoS,SAAUpS,KAAK2iB,QAAS3iB,KAAK6iB,QAElE7iB,KAAK0P,GAGP7P,iBACL,YAAsBJ,IAAfO,KAAK6iB,MAGPhjB,WACL,OAAOG,KAAK6iB,OAASZ,GAGhBpiB,wBACL,MAAO,IAAIwa,GAASra,KAAK+kB,cAGpBllB,cACL,OAAOG,KAAKoS,SAGPvS,iBACL,OAAOmlB,GAAiBhlB,KAAKqkB,eAGxBxkB,sBACL,OAAO0hB,GAA4BvhB,KAAKoS,UAGnCvS,aACL,OAAOka,GAAO/Z,KAAKga,UAGdna,WACL,OAAOka,GAAO/Z,KAAKga,SAGdna,WACL,OAAOka,GAAO/Z,KAAKga,QAGdna,iBACL,OAAOka,GAAO/Z,KAAKga,QAGdna,QACL,OAAiC,IAA1BG,KAAK+jB,iBAGPlkB,eACL,OAAOka,GAAO/Z,KAAKga,SAGdna,kBACL,OAAOka,GAAO/Z,KAAKga,QAGdna,iBACL,OAAOka,GAAO/Z,KAAKga,SAGdna,YACL,OAAOka,GAAO/Z,KAAKga,QAGdna,kBACL,OAAOG,KAAKqkB,cAAc9O,WAAW,KAShC1V,wBACL,YAAoCJ,eAA7BO,MAAAA,YAAAA,KAAM2iB,8BAASlC,iBAAuDhhB,eAA5BO,MAAAA,YAAAA,KAAM2iB,8BAASnC,WCtuBpE,MAAMyE,GAAY5K,GAAS,QACrB6K,GAAa7K,GAAS,SAiH5B,MAAM8K,GACJ,MAiBIC,GAAmE,CACvEnJ,WACAG,WACAD,uBACA3O,WACA8O,OACAC,SACAC,YACAC,YACAC,aACAE,SACAC,UACAC,qBACAE,SACAE,WACAG,gBACAC,cACAC,eACAG,eACAC,SACAE,oBAGA3B,eACAG,gBACAM,aACAI,UACAE,cACAE,mBACAC,gBACAI,cACAC,iBACAG,YACAE,UAyDF,SAASuH,GAAsBjS,GAC7B,MAAMzB,EAAuB,GAkD7B,OAhDIyB,EAAOkS,gBACT3T,EAAM9M,KAAK,YAGTuO,EAAOmS,aACT5T,EAAM9M,KAAK,SAGTuO,EAAOoS,aACT7T,EAAM9M,KAAK,SAGTuO,EAAOqS,cACT9T,EAAM9M,KAAK,UAGTuO,EAAOsS,aACT/T,EAAM9M,KAAK,SAGTuO,EAAOuS,YACThU,EAAM9M,KAAK,QAGTuO,EAAOwS,cACTjU,EAAM9M,KAAK,UAGTuO,EAAOyS,kBACTlU,EAAM9M,KAAK,cAGTuO,EAAO0S,mBACTnU,EAAM9M,KAAK,aAGTuO,EAAO2S,iBACTpU,EAAM9M,KAAK,aAGTuO,EAAO4S,sBACTrU,EAAM9M,KAAK,OAGTuO,EAAO6S,YACTtU,EAAM9M,KAAK,QAGN8M,EAGT,SAASmT,GACPoB,EACAlM,EACA5G,EACAjE,EACAwT,EACAwD,EACApX,GAEA,IAAIwK,EAAO,OAAcS,EAEzB,QAAYva,IAARymB,EACF,IAAK,IAAI9lB,EAAI,EAAGA,EAAI8lB,EAAI7lB,OAAQD,GAAK,EACnCmZ,EAAe,GAAPA,EAAa2M,EAAIxlB,WAAWN,GAYxC,QARgBX,IAAZkjB,IACFpJ,EAAOoJ,EAAQkC,SAAStL,SAGR9Z,IAAd0mB,IACF5M,EAAO4M,EAAUtB,SAAStL,SAGb9Z,IAAX2T,EACF,IAAK,IAAIhT,EAAI,EAAGA,EAAIgT,EAAO/S,OAAQD,GAAK,EACtCmZ,EAAe,GAAPA,EAAanG,EAAO1S,WAAWN,GAI3C,QAAiBX,IAAb0P,EACF,IAAK,IAAI/O,EAAI,EAAGA,EAAI+O,EAAS9O,OAAQD,GAAK,EACxCmZ,EAAe,GAAPA,EAAapK,EAASzO,WAAWN,GAI7C,QAAiBX,IAAbsP,EACF,IAAK,IAAI3O,EAAI,EAAGA,EAAI2O,EAAS1O,OAAQD,GAAK,EACxCmZ,EAAe,GAAPA,EAAaxK,EAASrO,WAAWN,GAI7C,OAAOmZ,IAAS,EAQlB,SAAS6M,GACPhT,EACAiT,EACAC,EACAC,GAEA,OAAoB,IAAhBA,EACK,IAAIvV,OAAOoC,EAAO5R,MAAM,EAAG4R,EAAO/S,OAAS,GAAI,MAUxD+S,GAHAA,GAHAA,EAASA,EAAO7M,QAAQ,sBAAuB,SAG/BA,QAAQ,MAAO,OAGfA,QAAQ,MAAO,uBAG3B+f,IACFlT,EAAS,GAAGA,MAGViT,IACFjT,EAAS,IAAIA,KAGR,IAAIpC,OAAOoC,IAGpB,MAAMoT,GAAY,IAAIxV,OAAO,UAERyV,GA2fnB5mB,aAAYqmB,IACVA,EAAG9S,OACHA,EAAMjE,SACNA,EAAQ6K,KACRA,EAAI2I,QACJA,EAAOwD,UACPA,EAASvD,QACTA,EAAO7T,SACPA,EAAQ2C,MACRA,IAYA1R,KAAKkmB,IAAMA,EACXlmB,KAAKoT,OAASA,EACdpT,KAAKmP,SAAWA,EAChBnP,KAAKga,KAAOA,EACZha,KAAK2iB,QAAUA,EACf3iB,KAAKmmB,UAAYA,EACjBnmB,KAAK+O,SAAWA,EAEhB/O,KAAK4iB,QAAUA,EAEf5iB,KAAK0P,QAAKjQ,EACVO,KAAK0R,MAAQA,EA1hBR7R,aAAaijB,EAAc3X,GAAiB,GAEjD,IAWIgE,EACAwT,EACAwD,EACApX,EACAmX,EAfAlM,EACF,MAOE0M,EAA0B,EAC1BC,EAA0BxB,GAS1ByB,EAA2B,EAC3BC,EAAyB/D,EAAKziB,OAGP,KAAvByiB,EAAKpiB,WAAW,IAA8C,KAAvBoiB,EAAKpiB,WAAW,KACzDkmB,GAAoB,EACpB5M,EAAOC,GAAOD,cAQhB,MAAM8M,EAAuBhE,EAAKle,YAAY,KAC9C,IAAsB,IAAlBkiB,GAA6D,KAAtChE,EAAKpiB,WAAWomB,EAAe,GAAqB,CAE7ED,EAAiBC,EAKjB,IAAK,MAAMC,KAAajE,EAAKthB,MAAMslB,EAAe,GAAGtgB,MAAM,KAAM,CAC/D,MAAMoa,EAAuC,MAA5BmG,EAAUrmB,WAAW,GACtC,IAAI2O,GAAsB,IAAbuR,EAAoBmG,EAAUvlB,MAAM,GAAKulB,EAGlDC,EAAsB,GAC1B,MAAMC,EAAuB5X,EAAOnC,QAAQ,KAM5C,QALsB,IAAlB+Z,IACFD,EAAc3X,EAAO7N,MAAMylB,EAAe,GAC1C5X,EAASA,EAAO7N,MAAM,EAAGylB,IAGnB5X,GACN,IAAK,YACH8W,EAAY5F,GAAQjM,MAAM0S,EAAYxgB,MAAM,MAC5C,MAEF,IAAK,SAEH,GACgC,MAA9BwgB,EAAYtmB,WAAW,IAC4B,MAAnDsmB,EAAYtmB,WAAWsmB,EAAY3mB,OAAS,GAE5C,OAAO,KAGTsiB,EAAUpC,GAAQjM,MAAM0S,EAAYxgB,MAAM,MAC1C,MAEF,IAAK,YACHwT,EAAOC,GAAOD,UACd,MACF,IAAK,YAEH,GAAI4G,EACF,OAAO,KAGT5G,EAAOC,GAAOD,WACd,MACF,IAAK,aAEH,GAAI4G,EACF,OAAO,KAIT,MACF,IAAK,KACL,IAAK,cAGD5G,EAAOE,GAASF,EAFd4G,eAOJ,MACF,IAAK,KACL,IAAK,cAGD5G,EAAOE,GAASF,EAFd4G,eAOJ,MACF,IAAK,gBACL,IAAK,WAEH,GAAIA,EACF,OAAO,KAIT,GAA2B,IAAvBoG,EAAY3mB,OACd,OAAO,KAGM,kBAAXgP,IACF2K,EAAOC,GAAOD,cAGhBjL,EAAWiY,EACX,MACF,IAAK,MACH,GAAIpG,EACF,OAAO,KAGT5G,EAAOC,GAAOD,UACVgN,EAAY3mB,OAAS,IACvB6lB,EAAMc,GAER,MACF,IAAK,QACL,IAAK,WACH,GAAIpG,EACF,OAAO,KAGT5G,EAAOC,GAAOD,UACdA,EAAOC,GAAOD,WACd,MACF,IAAK,QACL,IAAK,eACH,GAAI4G,EACF,OAAO,KAGT5G,EAAOC,GAAOD,WACd,MACF,IAAK,QACL,IAAK,cACH,GAAI4G,EACF,OAAO,KAGT5G,EAAOC,GAAOD,UACd,MACF,IAAK,gBACH,GAAI4G,EACF,OAAO,KAGT5G,EAAOC,GAAOD,UACdkM,EACE,oFACF,MACF,IAAK,cACH,GAAItF,EACF,OAAO,KAGT5G,EAAOC,GAAOD,UACdkM,EACE,kFACF,MACF,QAAS,CAEP,IAAIgB,EAAqB,EACzB,OAAQ7X,GACN,IAAK,MACH,GAAIuR,EACF,OAAO,KAWT,MACF,IAAK,QACHsG,KACA,MACF,IAAK,QACHA,KACA,MACF,IAAK,SACL,IAAK,oBACHA,KACA,MACF,IAAK,QACHA,MACA,MACF,IAAK,OACL,IAAK,SACHA,MACA,MACF,IAAK,SACHA,MACA,MACF,IAAK,MACL,IAAK,aACHA,OACA,MACF,IAAK,QACL,IAAK,cACHA,OACA,MACF,IAAK,MACL,IAAK,iBACHA,OACA,MACF,IAAK,YACHA,OACA,MACF,IAAK,OACHA,IACA,MACF,IAAK,MACL,IAAK,WACHA,IACA,MACF,QAEE,OAAO,KAIPtG,EACF+F,EAAkBzM,GAASyM,EAAiBO,GAE5CR,EAAkBzM,GAAOyM,EAAiBQ,GAE5C,SAiBR,IAAI9T,EAGJ,GAXE4G,GADsB,IAApB0M,EACMC,EACCA,IAAoBxB,GACrBuB,EAEAA,EAAkBC,EAQ1BE,EAAiBD,GAAoB,GACC,KAAtC9D,EAAKpiB,WAAWkmB,IACwB,KAAxC9D,EAAKpiB,WAAWmmB,EAAiB,GACjC,CAKAzT,EAAS0P,EAAKthB,MAAMolB,EAAkBC,GAGtC,IACET,GACEhT,GACA,GACA,GACA,GAEF,MAAOxF,GACP,OAAO,KAGToM,EAAOC,GAAOD,eACT,CA0BL,GAxBI6M,EAAiB,GAA6C,MAAxC/D,EAAKpiB,WAAWmmB,EAAiB,KACzD7M,EAAOC,GAAOD,YACd6M,GAAkB,GAIlBD,EAAmBC,GACmB,MAAtC/D,EAAKpiB,WAAWkmB,KAGdA,EAAmBC,EAAiB,GACM,MAA1C/D,EAAKpiB,WAAWkmB,EAAmB,IAEnC5M,EAAOC,GAAOD,aACd4M,GAAoB,IAEpB5M,EAAOC,GAAOD,YACd4M,GAAoB,IAOpB7M,GAAOC,aAA6C,CAEtD,IAAImN,EAAiBP,EACrB,KACEO,EAAiBN,IACsC,KA3qB7DjM,GAFuBC,EA6qBCiI,EAAKpiB,WAAWymB,KA3qBzBrM,GAAQD,IAAc,KAAPA,GAA8B,KAAPA,GAA8B,KAAPA,IA6qBtEsM,GAAkB,EAIpB,GAAIA,IAAmBN,EACrB1X,EAAW2T,EAAKthB,MAAMolB,EAAkBC,GACxCD,EAAmBC,MAEd,CAEL1X,EAAW2T,EAAKthB,MAAMolB,EAAkBO,GACxCP,EAAmBO,EACnB,MAAMC,EAAgBtE,EAAKpiB,WAAWymB,GAEhB,KAAlBC,EAIEP,EAAiBD,GAAqB,GACxCA,EAAmBC,EACnB7M,EAAOC,GAAOD,cAEdA,EAAOC,GAAOD,WACdA,EAAOC,GAAOD,aAGhBA,EAAOC,GAAOD,EADa,KAAlBoN,qBAWbP,EAAiBD,EAAmB,GACI,KAAxC9D,EAAKpiB,WAAWmmB,EAAiB,KAEjCA,GAAkB,IAKqC,IAAvD9M,GAAOC,cACP6M,EAAiBD,EAAmB,GACE,KAAtC9D,EAAKpiB,WAAWkmB,KAEhB5M,EAAOE,GAASF,YAChB4M,GAAoB,GAIlB7M,GAAOC,cAEP6M,EAAiBD,GAAqB,GACtCjM,GAAmBmI,EAAM,QAAS8D,IAElC5M,EAAOC,GAAOD,QACdA,EAAOE,GAASF,YAChBA,EAAOE,GAASF,KAChBA,EAAOE,GAASF,KAChB4M,EAAmBC,GAEnBA,EAAiBD,GAAqB,GACtCjM,GAAmBmI,EAAM,UAAW8D,IAEpC5M,EAAOC,GAAOD,KACdA,EAAOE,GAASF,KAChBA,EAAOE,GAASF,YAChB4M,EAAmBC,GAEnBA,EAAiBD,GAAqB,GACtCjM,GAAmBmI,EAAM,WAAY8D,IAErC5M,EAAOC,GAAOD,KACdA,EAAOE,GAASF,KAChBA,EAAOE,GAASF,YAChB4M,EAAmBC,GAEnBA,EAAiBD,GAAqB,GACtCjM,GAAmBmI,EAAM,WAAY8D,KAErC5M,EAAOC,GAAOD,KACdA,EAAOC,GAAOD,KACdA,EAAOE,GAASF,YAChB4M,EAAmBC,IAInBA,EAAiBD,EAAmB,IACtCxT,EAAS0P,EAAKthB,MAAMolB,EAAkBC,GAAgB1Q,cAEtD6D,EAAOqN,GAAerN,WAAqC8B,GAAW1I,KACpB,IAA9C2G,GAAOC,aACTA,EAAOqN,GACLrN,UA0rBZ,SAAsB5G,EAAgB/K,EAAeC,GACnD,MAAMgf,EAAmBlU,EAAOlG,QAAQ,IAAK7E,GAC7C,IAA0B,IAAtBif,GAA2BA,EAAmBhf,EAChD,OAAO,EAGT,MAAMif,EAAkBnU,EAAOlG,QAAQ,IAAK7E,GAC5C,OAA4B,IAArBkf,GAA0BA,EAAkBjf,EA/rBzCkf,CAAapU,EAAQ,EAAGA,EAAO/S,gBAQpBZ,IAAb0P,IACFA,EAAWA,EAASgH,cAChB2F,GAAW3M,KACb6K,EAAOqN,GAAerN,YAAqC,GAC3D7K,EAAW9I,EAAQ8I,KA7xB7B,IAA2B0L,EAkyBvB,OAAO,IAAI4L,GAAc,CACvBP,IAAAA,EACA9S,OAAAA,EACAjE,SAAAA,EACA6K,KAAAA,EACA2I,QAAAA,EACAwD,UAAAA,EACAvD,SAAmB,IAAVzX,EAAiB2X,OAAOrjB,EACjCsP,SAAAA,EACA2C,WAAOjS,IAQJI,mBAAmBkB,GACxB,MAAMiZ,EAAOjZ,EAAOmJ,YACd6W,EAAgBhgB,EAAOsI,WACvB+Z,EAAYrJ,GAAOC,YAMzB,OAAO,IAAIyM,GAAc,CAEvBzM,KAAAA,EAGAkM,IAA6B,IAAP,EAAhBnF,GAA2BhgB,EAAO0mB,qBAAkBhoB,EAC1D2T,OAC0B,IAAP,EAAhB2N,GACGqC,EACEriB,EAAOgK,UACPhK,EAAO2mB,wBACTjoB,EACN0P,SAAkC,IAAP,EAAhB4R,GAA2BhgB,EAAO4mB,0BAAuBloB,EACpEkjB,QAAiC,IAAP,EAAhB5B,GAA2BR,GAAQ+C,YAAYviB,QAAUtB,EACnEmjB,QAAkC,KAAR,GAAhB7B,GAA6BhgB,EAAO6mB,qBAAkBnoB,EAChEsP,SAAmC,KAAR,GAAhBgS,GAA6BhgB,EAAO8mB,0BAAuBpoB,EACtE0mB,UAAoC,KAAR,GAAhBpF,GAA6BR,GAAQ+C,YAAYviB,QAAUtB,EACvEiS,WAAOjS,IAsDJI,mBACL,OAAO,EAEFA,kBACL,OAAO,EAGFA,MAAMioB,GACX,OA+uBJ,SAAsB1U,EAAuB0U,GAG3C,IACwC,IAAtC1U,EAAO2U,aAAaD,EAAQlkB,QACP,IAApBkkB,EAAQ3I,UAA2C,IAAvB/L,EAAO4U,cAChB,IAAnBF,EAAQ5I,SAAyC,IAAtB9L,EAAO6U,aACV,IAAxB7U,EAAO8U,eAAmD,IAAzBJ,EAAQ9I,eACjB,IAAxB5L,EAAO+U,eAAmD,IAAzBL,EAAQ/I,aAE1C,OAAO,EAIT,QACqBtf,IAAnB2T,EAAOuP,UAC4E,IAAnFvP,EAAOuP,QAAQlS,MAAMqX,EAAQjJ,qBAAsBiJ,EAAQhJ,oBAE3D,OAAO,EAIT,QACuBrf,IAArB2T,EAAO+S,YAC4E,IAAnF/S,EAAO+S,UAAU1V,MAAMqX,EAAQM,oBAAqBN,EAAQO,mBAE5D,OAAO,EAGT,OAAO,EA5wBEC,CAAatoB,KAAM8nB,IAgpB9B,SAAsB1U,EAAuB0U,GAC3C,MAAMvX,EAAU6C,EAAOmV,YAEvB,IAAkC,IAA9BnV,EAAOoV,mBAA6B,CAEtC,MAAMC,EAAiBrV,EAAOsV,cAC9B,IAKQ,aA5EVD,EACAtZ,EACAwZ,GAGA,GAA8B,IAA1BF,EAAepoB,OACjB,OAAO,EAIT,GAAIooB,EAAepoB,OAAS8O,EAAS9O,OACnC,OAAO,EAIT,GAAIooB,EAAepoB,SAAW8O,EAAS9O,OACrC,OAAOooB,IAAmBtZ,EAI5B,MAAM+J,EAAa/J,EAASjC,QAAQub,GAGpC,IAAoB,IAAhBvP,EACF,OAAO,EAQT,GAAmB,IAAfA,EACF,OAC2B,IAAzByP,GAC+C,KAA/CxZ,EAASzO,WAAW+nB,EAAepoB,SACsB,KAAzDooB,EAAe/nB,WAAW+nB,EAAepoB,OAAS,GAStD,GAAI8O,EAAS9O,SAAW6Y,EAAauP,EAAepoB,OAClD,OAC0C,KAAxC8O,EAASzO,WAAWwY,EAAa,IACA,KAAjCuP,EAAe/nB,WAAW,GAK9B,SAC4B,IAAzBioB,GACgD,KAA/CxZ,EAASzO,WAAW+nB,EAAepoB,SACsB,KAAzDooB,EAAe/nB,WAAW+nB,EAAepoB,OAAS,IACX,KAAxC8O,EAASzO,WAAWwY,EAAa,IAA8C,KAAjCuP,EAAe/nB,WAAW,IAevEkoB,CACEH,EACAX,EAAQ3Y,cACU1P,IAAlB2T,EAAOA,QAAwD,KAAhCA,EAAOA,OAAO1S,WAAW,IAG1D,OAAO,EAIT,GAAI0S,EAAOyV,UAET,OAAOzV,EACJ0V,WACApiB,KAAKohB,EAAQra,IAAIjM,MAAMsmB,EAAQra,IAAIP,QAAQub,GAAkBA,EAAepoB,SAC1E,GAAI+S,EAAOkT,iBAAmBlT,EAAOiT,eAAgB,CAY1D,OAAO9V,IAPkBuX,EAAQra,IAAIjM,MACnCsmB,EAAQra,IAAIP,QAAQub,GAAkBA,EAAepoB,QAOlD,GAAI+S,EAAOkT,gBAAiB,CAEjC,MAAMyC,EAAkBjB,EAAQ3Y,SAChC,OAA2B,IAAvBiE,EAAO4V,YAMPP,EAAepoB,SAAW0oB,EAAgB1oB,QAC1C0oB,EAAgBjR,SAAS2Q,GAIpBX,EAAQra,IAAIqK,SAASvH,GAEzB,OAAI6C,EAAOiT,eAMT1L,GACLmN,EAAQra,IACR8C,EACAuX,EAAQra,IAAIP,QAAQub,GAAkBA,EAAepoB,SAI9B,IAAvB+S,EAAO4V,cAOR,IADDlB,EAAQra,IAAIP,QAAQqD,EAASuX,EAAQra,IAAIP,QAAQub,GAAkBA,EAAepoB,QAG/E,GAAI+S,EAAOyV,UAEhB,OAAOzV,EAAO0V,WAAWpiB,KAAKohB,EAAQra,KACjC,GAAI2F,EAAOiT,gBAAkBjT,EAAOkT,gBAEzC,OAAOwB,EAAQra,MAAQ8C,EAClB,GAAI6C,EAAOiT,eAEhB,OAAO9L,GAAeuN,EAAQra,IAAK8C,GAC9B,GAAI6C,EAAOkT,gBAEhB,OAAOwB,EAAQra,IAAIqK,SAASvH,GAI9B,IAA2B,IAAvB6C,EAAO4V,YACT,OAAO,EAGT,OAAyC,IAAlClB,EAAQra,IAAIP,QAAQqD,GA5uBa0Y,CAAajpB,KAAM8nB,GAuCpDjoB,UAAUkB,GACfA,EAAOkJ,WAAWjK,KAAKga,MAEvB,MAAMlV,EAAQ/D,EAAOogB,SACrBpgB,EAAOqI,UAAU,GAGjB,IAAI2X,EAAgB,OAEHthB,IAAbO,KAAKkmB,MACPnF,GAAiB,EACjBhgB,EAAOmoB,eAAelpB,KAAKkmB,WAGTzmB,IAAhBO,KAAKoT,SACP2N,GAAiB,EACb/gB,KAAKojB,YACPriB,EAAO+J,SAAS9K,KAAKoT,QAErBrS,EAAOooB,kBAAkBnpB,KAAKoT,cAIZ3T,IAAlBO,KAAKmP,WACP4R,GAAiB,EACjBhgB,EAAOqoB,oBAAoBppB,KAAKmP,gBAGb1P,IAAjBO,KAAK2iB,UACP5B,GAAiB,EACjB/gB,KAAK2iB,QAAQc,UAAU1iB,SAGJtB,IAAjBO,KAAK4iB,UACP7B,GAAiB,GACjBhgB,EAAOsoB,eAAerpB,KAAK4iB,eAGPnjB,IAAlBO,KAAK+O,WACPgS,GAAiB,GACjBhgB,EAAOuoB,oBAAoBtpB,KAAK+O,gBAGXtP,IAAnBO,KAAKmmB,YACPpF,GAAiB,GACjB/gB,KAAKmmB,UAAU1C,UAAU1iB,IAG3BA,EAAOsgB,QAAQvc,EAAOic,GAGjBlhB,kBAAkBsI,GACvB,IAAImZ,EAAmB,EAkCvB,YAhCiB7hB,IAAbO,KAAKkmB,MACP5E,YnC55B2BrgB,EAAakH,GAC5C,OAAuB,IAAhBA,EACHZ,EACEN,IAA0ByD,WAAWrI,kBAAkBpB,IACvD,GAEFuG,EAAYvG,GmCs5BAsoB,CAAiBvpB,KAAKkmB,IAAK/d,SAGrB1I,IAAhBO,KAAKoT,UACkB,IAArBpT,KAAKojB,YACP9B,GAAY7Z,EAAWzH,KAAKoT,QAE5BkO,YnC15B4BrgB,EAAakH,GAC/C,OAAuB,IAAhBA,EACHZ,EACEN,IAA0B0D,cAActI,kBAAkBpB,IAC1D,GAEFuG,EAAYvG,GmCo5BEuoB,CAAoBxpB,KAAKoT,OAAQjL,SAI3B1I,IAAlBO,KAAKmP,WACPmS,YnCj7BgCrgB,EAAakH,GACjD,OAAuB,IAAhBA,EACHZ,EACEN,IAA0BwD,gBAAgBpI,kBAAkBpB,IAC5D,GAEFuG,EAAYvG,GmC26BAwoB,CAAsBzpB,KAAKmP,SAAUhH,SAG9B1I,IAAjBO,KAAK2iB,UACPrB,GAAYthB,KAAK2iB,QAAQiB,0BAGNnkB,IAAjBO,KAAK4iB,UACPtB,YnCr5B2BrgB,EAAakH,GAC5C,OAAuB,IAAhBA,EACHZ,EACEN,IAA0B+D,WAAW3I,kBAAkBmD,EAAOvE,KAC9D,GAEFwG,EAAWxG,GmC+4BCyoB,CAAiB1pB,KAAK4iB,QAASza,SAGvB1I,IAAlBO,KAAK+O,WACPuS,YnCt8BgCrgB,EAAakH,GACjD,OAAuB,IAAhBA,EACHZ,EACEN,IAA0BoD,gBAAgBhI,kBAAkBpB,IAC5D,GAEFuG,EAAYvG,GmCg8BA0oB,CAAsB3pB,KAAK+O,SAAU5G,SAG5B1I,IAAnBO,KAAKmmB,YACP7E,GAAYthB,KAAKmmB,UAAUvC,qBAGtBtC,EAWFzhB,WACL,QAAqBJ,IAAjBO,KAAK4iB,QACP,OAAO5iB,KAAK4iB,QAGd,IAAIxP,EAAS,GAETpT,KAAK4pB,gBACPxW,GAAU,MAGRpT,KAAKwoB,mBACPpV,GAAU,KACDpT,KAAKioB,aAAejoB,KAAKgoB,YAC9BhoB,KAAKioB,WACP7U,GAAU,WAEVA,GAAU,YAEHpT,KAAKqmB,iBACdjT,GAAU,KAGRpT,KAAK6pB,gBACPzW,GAAUpT,KAAK0oB,cACftV,GAAU,KAGRpT,KAAKumB,cACPnT,GAAU,IAAIpT,KAAK8oB,WAAW7X,UACrBjR,KAAK6oB,UACdzV,GAAUpT,KAAK8oB,WAAW7X,OAE1BmC,GAAUpT,KAAKuoB,YAGbvoB,KAAKsmB,kBACPlT,GAAU,KAIZ,MAAMpL,EAAoB,GAE1B,IAAuB,IAAnBhI,KAAK8pB,UAAqB,CAC5B,MAAMC,EAAqBjQ,GAAS9Z,KAAKgqB,cAGzC,GAF+BlQ,GAASqL,IAAY4E,EAEvBA,EAC3B,IAAK,MAAMnmB,KA95BnB,SAAsCwP,GACpC,MAAMzB,EAAuB,GAkD7B,OAhD8B,IAA1ByB,EAAOkS,gBACT3T,EAAM9M,KAAK,aAGc,IAAvBuO,EAAOmS,aACT5T,EAAM9M,KAAK,UAGc,IAAvBuO,EAAOoS,aACT7T,EAAM9M,KAAK,UAGe,IAAxBuO,EAAOqS,cACT9T,EAAM9M,KAAK,WAGc,IAAvBuO,EAAOsS,aACT/T,EAAM9M,KAAK,UAGa,IAAtBuO,EAAOuS,YACThU,EAAM9M,KAAK,SAGe,IAAxBuO,EAAOwS,cACTjU,EAAM9M,KAAK,WAGmB,IAA5BuO,EAAOyS,kBACTlU,EAAM9M,KAAK,eAGoB,IAA7BuO,EAAO0S,mBACTnU,EAAM9M,KAAK,cAGkB,IAA3BuO,EAAO2S,iBACTpU,EAAM9M,KAAK,cAGuB,IAAhCuO,EAAO4S,sBACTrU,EAAM9M,KAAK,QAGa,IAAtBuO,EAAO6S,YACTtU,EAAM9M,KAAK,QAGN8M,EA22BkBsY,CAA6BjqB,MAC9CgI,EAAQnD,KAAK,IAAIjB,UAGnB,IAAK,MAAMA,KAAQyhB,GAAsBrlB,MACvCgI,EAAQnD,KAAKjB,GAwDnB,OAnDI5D,KAAKkqB,eACPliB,EAAQnD,KAAK,aAGX7E,KAAKmqB,iBACPniB,EAAQnD,KAAK,iBAAiB7E,KAAKoqB,iBAC1BpqB,KAAKqqB,cACdriB,EAAQnD,KAAK,YAAY7E,KAAKoqB,iBAG5BpqB,KAAKsqB,SACPtiB,EAAQnD,KAAK,OAAO7E,KAAKkmB,OAGvBlmB,KAAKuqB,cACPviB,EAAQnD,KAAK,YAGX7E,KAAKwqB,kBACPxiB,EAAQnD,KAAK,gBAGX7E,KAAKyqB,iBACPziB,EAAQnD,KAAK,eAGX7E,KAAKkoB,eAAiBloB,KAAKmoB,eACzBnoB,KAAKkoB,cACPlgB,EAAQnD,KAAK,MAEX7E,KAAKmoB,cACPngB,EAAQnD,KAAK,YAIIpF,IAAjBO,KAAK2iB,SACP3a,EAAQnD,KAAK,wBAGQpF,IAAnBO,KAAKmmB,WACPne,EAAQnD,KAAK,sBAGX7E,KAAK0qB,eACP1iB,EAAQnD,KAAK,aAGXmD,EAAQ3H,OAAS,IACnB+S,GAAU,IAAIpL,EAAQ5B,KAAK,QAGtBgN,EAIFvT,wBAKL,OAAOilB,GACL9kB,KAAKkmB,KACO,OAAZlmB,KAAKga,KACLha,KAAKoT,OACLpT,KAAKmP,SACLnP,KAAK2iB,QACL3iB,KAAKmmB,UACLnmB,KAAK+O,UAIFlP,QAYL,YAXgBJ,IAAZO,KAAK0P,KACP1P,KAAK0P,GAAKoV,GACR9kB,KAAKkmB,IACLlmB,KAAKga,KACLha,KAAKoT,OACLpT,KAAKmP,SACLnP,KAAK2iB,QACL3iB,KAAKmmB,UACLnmB,KAAK+O,WAGF/O,KAAK0P,GAGP7P,YACL,YAAuBJ,IAAhBO,KAAKoT,OAGPvT,aACL,YAAwBJ,IAAjBO,KAAK2iB,QAGP9iB,UACL,OAAOG,KAAKga,KAGPna,aACL,OAAOG,KAAK2qB,UAAYxF,GAGnBtlB,aACL,YAAyBJ,IAAlBO,KAAK+O,SAGPlP,iBACL,OAAOka,GAAO/Z,KAAKga,gBAGdna,cACL,OAAOG,KAAK+O,UAAY,GAGnBlP,cACL,YAAyBJ,IAAlBO,KAAKmP,SAGPtP,cACL,OAAOG,KAAKmP,UAAY,GAGnBtP,YACL,OAAOG,KAAKoT,QAAU,GAGjBvT,WAaL,YAZmBJ,IAAfO,KAAK0R,QACP1R,KAAK0R,WACajS,IAAhBO,KAAKoT,QAAwBpT,KAAK6oB,UAC9BzC,GACEpmB,KAAKoT,OACLpT,KAAKqmB,eACLrmB,KAAKsmB,gBACLtmB,KAAKumB,eAEPC,IAGDxmB,KAAK0R,MAGP7R,YAiBL,GAhBA+Z,GAAc+B,aAKKlc,IAAjBO,KAAK2iB,cACsBljB,IAA3BO,KAAK2iB,QAAQlC,gBACahhB,IAA1BO,KAAK2iB,QAAQnC,eACiB/gB,IAA9BO,KAAK2iB,QAAQhC,mBACgBlhB,IAA7BO,KAAK2iB,QAAQjC,aACqB,IAAlC1gB,KAAK2iB,QAAQlC,UAAUpgB,QAEvBuZ,GAAc/U,KAAK7E,KAAK2iB,QAAQlC,UAAU,KAIjB,IAAvBzgB,KAAKumB,cAAyB,CAChC,QAAoB9mB,IAAhBO,KAAKoT,OAAsB,CAC7B,MAAMgI,EAAgBpb,KAAK4qB,YAAc5qB,KAAKsmB,gBACxCnL,GAAkBnb,KAAKqmB,yBPtoCnC9V,EACA4K,EACAC,EACAra,GAEA,MAAMO,EAAM+C,KAAKgX,IAAI9K,EAAQlQ,OAA6B,EAArBU,EAAOua,aAC5C,IAAIC,GAAS,EACTsP,EAAc,EACdxiB,EAAQ,EACRkR,EAAOM,GAEX,IAAK,IAAIzZ,EAAI,EAAGA,EAAIkB,EAAKlB,GAAK,EAAG,CAC/B,MAAMya,EAAKtK,EAAQ7P,WAAWN,IACJ,IAAtB2a,GAAcF,KACD,IAAXU,IACFhC,EAAOM,GACP0B,GAAS,EACTlT,EAAQjI,GAEVmZ,EAAe,GAAPA,EAAasB,KAEN,IAAXU,IACFA,GAAS,EAGPnb,EAAIiI,EAAQ,GACL,KAAPwS,GACgB,KAAhBgQ,KACoB,IAAnB1P,GAAsC,IAAV9S,IAE7BtH,EAAO8D,KAAK0U,IAAS,IAIzBsR,EAAchQ,IAKE,IAAlBO,IACW,IAAXG,GACgB,KAAhBsP,GACAta,EAAQlQ,OAASgI,EAAQ,IACP,IAAlBtH,EAAOya,QAEPza,EAAO8D,KAAK0U,IAAS,GO0lCjBuR,CAA6B9qB,KAAKoT,OAAQ+H,EAAgBC,EAAexB,SAIrDna,IAAlBO,KAAKmP,UACP+L,GACElb,KAAKmP,UACL,OACgB1P,IAAhBO,KAAKoT,QAAsD,KAA9BpT,KAAKoT,OAAO1S,WAAW,GACpDkZ,cAGqBna,IAAhBO,KAAKoT,iBPngCiBhB,EAAkBX,GACrD,IAAInJ,EAAM8J,EAAS/R,OAAS,EACxB+Z,EAAQ,EACRuH,EAAe,EAGnB,KAAOvH,EAAQ9R,EAAK8R,GAAS,EAAG,CAC9B,MAAM5a,EAAO4S,EAAS1R,WAAW0Z,GAKjC,GAAa,MAAT5a,EACF,OAGF,GACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,MAATA,GACU,KAATA,GAAkC,KAATmiB,GAChB,KAATniB,GAAyBsb,GAAQ1I,EAAS1R,WAAW0Z,EAAQ,IAE9D,MAGFuH,EAAOniB,EAKT,IADAmiB,EAAO,EACArZ,GAAO8R,EAAO9R,GAAO,EAAG,CAC7B,MAAM9I,EAAO4S,EAAS1R,WAAW4H,GAKjC,GAAa,MAAT9I,EACF,OAGF,GACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,MAATA,GACU,KAATA,GAA0D,KAAjC4S,EAAS1R,WAAW4H,EAAM,IAC1C,KAAT9I,GAAyBsb,GAAQ6G,GAElC,MAGFA,EAAOniB,EAGT,GAAI8I,EAAM8R,EAAO,CAEf,MAAMe,EAAqD,KAA3B/I,EAAS1R,WAAW,GAC9C0a,EAAsE,KAA7ChJ,EAAS1R,WAAW0R,EAAS/R,OAAS,GACrE6a,GAAgB9I,EAAS5Q,MAAM,EAAG4Q,EAAS/R,OAAS,GAAI8a,EAAgBC,EAAe3J,QAGnF2I,EAAQ,GACVc,GACE9I,EAAS5Q,MAAM,EAAG4Y,GACS,KAA3BhI,EAAS1R,WAAW,IACpB,EACA+Q,GAKAnJ,EAAM8J,EAAS/R,OAAS,GAC1B6a,GACE9I,EAAS5Q,MAAM8G,EAAM,EAAG8J,EAAS/R,OAAS,IAC1C,EAC6C,KAA7C+R,EAAS1R,WAAW0R,EAAS/R,OAAS,GACtCoR,GOk7BFsZ,CAAqB/qB,KAAKoT,OAAQwG,IAKpC,IAC4B,IAA1BA,GAAcoR,cACGvrB,IAAjBO,KAAK2iB,cACsBljB,IAA3BO,KAAK2iB,QAAQlC,gBACahhB,IAA1BO,KAAK2iB,QAAQnC,eACiB/gB,IAA9BO,KAAK2iB,QAAQhC,mBACgBlhB,IAA7BO,KAAK2iB,QAAQjC,YACb,CACA,MAAMvJ,EAAwB,GAC9B,IAAK,MAAMhI,KAAYnP,KAAK2iB,QAAQlC,UAAW,CAC7C,MAAM9e,EAAM,IAAIiF,YAAY,GAC5BjF,EAAI,GAAKwN,EACTgI,EAAOtS,KAAKlD,GAEd,OAAOwV,EAIT,IAA8B,IAA1ByC,GAAcoR,UAAuC,IAAnBhrB,KAAK8pB,UAAqB,CAC9D,MAAMnY,EAAQ0T,GAAsBrlB,MACpC,GAAqB,IAAjB2R,EAAMtR,OAAc,CACtB,MAAM8W,EAAwB,GAC9B,IAAK,MAAMvT,KAAQ+N,EAAO,CACxB,MAAMhQ,EAAM,IAAIiF,YAAY,GAC5BjF,EAAI,GAAKqa,GAAsBpY,GAC/BuT,EAAOtS,KAAKlD,GAEd,OAAOwV,GAWX,OANwB,IAApBnX,KAAKioB,aAA4C,IAArBjoB,KAAKgoB,YACnCpO,GAAc/U,KAAKogB,KACW,IAArBjlB,KAAKgoB,cAA4C,IAApBhoB,KAAKioB,YAC3CrO,GAAc/U,KAAKqgB,IAGd,CAACtL,GAAcpY,SAMjB3B,aAAaorB,GAClB,MAAMjR,EAA2BoL,GAAqB6F,GACtD,YAAaxrB,IAATua,EACKD,GAAO/Z,KAAKga,KAAMA,GAKpBha,KAAK8pB,UAGPjqB,cACL,OAAOka,GAAO/Z,KAAKga,gBAGdna,mBACL,OAAOka,GAAO/Z,KAAKga,gBAGdna,gBACL,OAAOka,GAAO/Z,KAAKga,eAGdna,eACL,OAAOka,GAAO/Z,KAAKga,eAGdna,cACL,OAAOka,GAAO/Z,KAAKga,cAGdna,cACL,OAAOka,GAAO/Z,KAAKga,cAGdna,UACL,OACEka,GAAO/Z,KAAKga,eACZD,GAAO/Z,KAAKga,cAITna,UACL,OAAQG,KAAK6oB,UAGRhpB,QACL,OAAOka,GAAO/Z,KAAKga,aAGdna,aACL,OAAOG,KAAKwqB,kBAAoBxqB,KAAKyqB,gBAGhC5qB,iBACL,OAAOka,GAAO/Z,KAAKga,cAGdna,gBACL,OAAOka,GAAO/Z,KAAKga,aAGdna,cACL,OAAOka,GAAO/Z,KAAKga,aAGdna,YACL,OAAOka,GAAO/Z,KAAKga,eAGdna,UACL,OAAOG,KAAKgqB,eAAiB7E,GAGxBtlB,aACL,OAAOka,GAAO/Z,KAAKga,YAGdna,aACL,OAAOka,GAAO/Z,KAAKga,YAGdna,YACL,OAAOka,GAAO/Z,KAAKga,SAGdna,YACL,OAAOka,GAAO/Z,KAAKga,SAGdna,aACL,OAAOka,GAAO/Z,KAAKga,SAGdna,YACL,OAAOka,GAAO/Z,KAAKga,UAGdna,WACL,OAAOka,GAAO/Z,KAAKga,UAGdna,aACL,OAAOka,GAAO/Z,KAAKga,UAGdna,iBACL,OAAOka,GAAO/Z,KAAKga,WAGdna,eACL,OAAOka,GAAO/Z,KAAKga,QAGdna,kBACL,OAAOka,GAAO/Z,KAAKga,WAGdna,gBACL,OAAOka,GAAO/Z,KAAKga,WAGdna,WACL,OAAOka,GAAO/Z,KAAKga,QAGdna,YACL,OAAOka,GAAO/Z,KAAKga,QAGdna,qBACL,OAAOka,GAAO/Z,KAAKga,WAGdna,WACL,OAAOka,GAAO/Z,KAAKga,SAQvB,SAASqN,GAAerN,EAAchU,EAAWN,GAC/C,OAAc,IAAVA,EACKuU,GAAOD,EAAMhU,GAGfkU,GAASF,EAAMhU,YCl9CRklB,GAAiBpI,GAE/B,GAAoB,IAAhBA,EAAKziB,QAAgC,IAAhByiB,EAAKziB,OAC5B,SAIF,MAAM8qB,EAAwBrI,EAAKpiB,WAAW,GACxC0qB,EAAyBtI,EAAKpiB,WAAW,GAC/C,GACoB,KAAlByqB,GACmB,KAAlBA,GAAkCC,GAAkB,IAClC,KAAlBD,GAAkC5Q,GAAeuI,EAAM,YAExD,SAIF,MAAMzM,EAAuByM,EAAKpiB,WAAWoiB,EAAKziB,OAAS,GAC3D,GACoB,KAAlB8qB,GACkB,KAAlBA,GACkB,KAAlBA,GACkB,KAAlBA,GACkB,KAAlBA,GACkB,KAAlBA,GACkB,KAAlBA,GACkB,KAAlBA,GACkB,KAAlBA,GACkB,KAAlBA,GACkB,KAAlBA,GACkB,MAAlBA,GACiB,MAAjB9U,EAEA,SAKF,MAAMgV,EAAsBvI,EAAK5V,QAAQ,KACzC,IAAqB,IAAjBme,GAAsBA,IAAgBvI,EAAKziB,OAAS,EAAG,CACzD,MAAMirB,EAAmBD,EAAc,EACjCE,EAAsBzI,EAAKpiB,WAAW4qB,GAG5C,GAC0B,KAAxBC,GACyB,KAAxBA,GACC5Q,GAAmBmI,EAAgB,KAAMwI,GAE3C,SAKJ,MAAMvI,EAAqBD,EAAK5V,QAAQ,KACxC,IAAoB,IAAhB6V,GAAqBA,IAAeD,EAAKziB,OAAS,EAAG,CACvD,MAAM2iB,EAAkBD,EAAa,EAC/ByI,EAAqB1I,EAAKpiB,WAAWsiB,GAE3C,GACyB,KAAvBwI,GACwB,KAAvBA,GACC7Q,GAAmBmI,EAAgB,KAAME,GAO3C,SACK,GACmB,KAAvBwI,IACE7Q,GAAmBmI,EAAiB,MAAOE,IAC1CrI,GAAmBmI,EAAiB,MAAOE,KACvB,KAAvBwI,GACC7Q,GAAmBmI,EAAgB,KAAME,IACnB,KAAvBwI,GACC7Q,GAAmBmI,EAAgB,KAAME,IACnB,KAAvBwI,GACC7Q,GAAmBmI,EAAgB,KAAME,GAM3C,SAKJ,kBAGcyI,GAAYrY,GAC1B,MAAMsY,EAAaR,GAAiB9X,GAEpC,WAAIsY,EACKjF,GAAcnS,MAAMlB,GAAQ,OAC1BsY,EACFhJ,GAAepO,MAAMlB,GAAQ,GAG/B,cAOOuY,GACdlY,EACAmY,EAA0B,IAAI1gB,GAE9B0gB,EAAS,IAAI1gB,EAAO0gB,GAEpB,MAAMC,EAAkC,GAClCC,EAAoC,GACpCC,EAAQtY,EAAKjN,MAAM,MAEzB,IAAK,IAAIpG,EAAI,EAAGA,EAAI2rB,EAAM1rB,OAAQD,GAAK,EAAG,CACxC,IAAI0iB,EAAOiJ,EAAM3rB,GAQjB,GALoB,IAAhB0iB,EAAKziB,QAAgByiB,EAAKpiB,WAAW,IAAM,KAC7CoiB,EAAOA,EAAKnQ,QAIVmQ,EAAKziB,OAAS,EAChB,KACED,EAAI2rB,EAAM1rB,OAAS,GACkB,KAArCyiB,EAAKpiB,WAAWoiB,EAAKziB,OAAS,IACO,KAArCyiB,EAAKpiB,WAAWoiB,EAAKziB,OAAS,IAC9B,CACAyiB,EAAOA,EAAKthB,MAAM,GAAI,GAEtB,MAAMwqB,EAAWD,EAAM3rB,EAAI,GAC3B,KACE4rB,EAAS3rB,OAAS,GACS,KAA3B2rB,EAAStrB,WAAW,IACO,KAA3BsrB,EAAStrB,WAAW,IACO,KAA3BsrB,EAAStrB,WAAW,IACO,KAA3BsrB,EAAStrB,WAAW,IACO,KAA3BsrB,EAAStrB,WAAW,IAKpB,MAHAoiB,GAAQkJ,EAASxqB,MAAM,GACvBpB,GAAK,EAQS,IAAhB0iB,EAAKziB,QAAgByiB,EAAKpiB,WAAWoiB,EAAKziB,OAAS,IAAM,KAC3DyiB,EAAOA,EAAKnQ,QAId,MAAM+Y,EAAaR,GAAiBpI,GAEpC,OAAI4I,IAAmE,IAA9BE,EAAO7f,mBAA6B,CAC3E,MAAMqH,EAASqT,GAAcnS,MAAMwO,EAAM8I,EAAOzgB,OACjC,OAAXiI,GACFyY,EAAehnB,KAAKuO,QAEjB,OAAIsY,IAAqE,IAA/BE,EAAOjgB,oBAA8B,CACpF,MAAMyH,EAASsP,GAAepO,MAAMwO,EAAM8I,EAAOzgB,OAClC,OAAXiI,KACyC,IAAvCwY,EAAO9f,8BAAmE,IAA3BsH,EAAOqX,iBACxDqB,EAAgBjnB,KAAKuO,KAM7B,MAAO,CAAEyY,eAAAA,EAAgBC,gBAAAA,GAG3B,SAASG,GAAWxY,EAAcmY,GAChC,MAAMC,eAAEA,EAAcC,gBAAEA,GAAoBH,GAAalY,EAAMmY,GAE/D,MADoD,GACrCM,OAAOL,GAAgBK,OAAOJ,GChNxC,MAAMK,GAAe,mBAEb,CACbC,YAAa,mBACbC,QAAS,CACPF,GACA,OACA,OAEFG,KAAM,gSCTD,MAAMH,GAAe,mBAEb,CACbC,YAAa,mBACbC,QAAS,CACPF,GACA,OACA,OAEFG,KAAM,4DCTD,MAAMH,GAAe,mBAEb,CACbC,YAAaD,GACbE,QAAS,CACPF,GACA,QACA,OACA,OACA,MACA,YACA,aAEFG,KAAM,mBCbD,MAAMH,GAAe,kCAEb,CACbC,YAAa,GAAGD,YAChBE,QAAS,CACPF,GACA,OACA,OAEFG,KAAM,oGCTD,MAAMH,GAAe,oBAEb,CACbC,YAAa,oBACbC,QAAS,CACPF,GACA,OACA,MACA,QACA,QAEFG,KAAM,oJCXD,MAAMH,GAAe,gCAEb,CACbC,YAAaD,GACbE,QAAS,CACPF,GACA,MACA,KACA,aACA,OACA,MACA,aACA,MACA,KACA,UACA,UAEFG,KAAM,ICjBD,MAAMH,GAAe,0BAEb,CACbC,YAAaD,GACbE,QAAS,CACPF,GACA,QACA,QAEFG,KAAM,KCTD,MAAMH,GAAe,oBAEb,CACbC,YAAa,oBACbC,QAAS,CACPF,GACA,OACA,MACA,gBACA,gBAEFG,KAAM,oGCXR,MAAMH,GAAe,mBAGN,CACbC,YAAa,mBACbC,QAAS,CACPF,GACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,cACA,cAEFG,KAAM,48DCtBD,MAAMH,GAAe,yBAEb,CACbC,YAAa,yBACbC,QAAS,CACPF,GACA,OACA,OAEFG,KAAM,oLCTD,MAAMH,GAAe,mBAEb,CACbC,YAAa,mBACbC,QAAS,CACPF,GACA,OACA,OAEFG,KAAM,gGCTD,MAAMH,GAAe,uBAEb,CACbC,YAAaD,GACbE,QAAS,CACPF,GACA,OACA,OAEFG,KAAM,wECTD,MAAMH,GAAe,oBAEb,CACbC,YAAaD,GACbE,QAAS,CACPF,GACA,OACA,MACA,OACA,WACA,YAEFG,KAAM,ICZD,MAAMH,GAAe,mBAEb,CACbC,YAAa,mBACbC,QAAS,CACPF,GACA,OACA,OAEFG,KAAM,gECTD,MAAMH,GAAe,oBAEb,CACbC,YAAa,oBACbC,QAAS,CACPF,GACA,QACA,QAEFG,KAAM,4PCTD,MAAMH,GAAe,oBAEb,CACbC,YAAa,oBACbC,QAAS,CACPF,GACA,QACA,QAEFG,KAAM,wCCTD,MAAMH,GAAe,mBAEb,CACbC,YAAa,mBACbC,QAAS,CACPF,GACA,OACA,OAEFG,KAAM,gtBCoFR,MAAMC,GAAmB,MACvB,MAAMC,EAKF,GACJ,IAAK,MAAMC,IAAQ,CACjBC,GACAC,GACAC,GACAC,GACAC,GACAtI,GACAuI,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,IAEA,IAAK,MAAMC,KAASjB,EAAKJ,QACvBG,EAAUkB,GAASjB,EAIvB,OAAOD,GA/BgB,YAkDTmB,GAAmBC,GACjC,OAAOrB,GAAiBqB,IAhBjBP,SC7FYQ,GAuFnBhuB,aAAYiuB,SAAEA,EAAW,GAAEtJ,GAAEA,EAAK,IAAIjlB,IAAKitB,UAAEA,EAAY,IAAIjtB,KAA8B,IACzFS,KAAK8tB,SAAWA,EAChB9tB,KAAKwkB,GAAKA,EACVxkB,KAAKwsB,UAAYA,EAzFZ3sB,mBAAmBkB,GACxB,MAAM+sB,EAAW/sB,EAAOyJ,WAGlBgiB,EAAmC,IAAIjtB,IACvCwuB,EAAoBhtB,EAAOitB,YACjC,IAAK,IAAI5tB,EAAI,EAAGA,EAAI2tB,EAAmB3tB,GAAK,EAC1CosB,EAAU3rB,IAAIE,EAAOyJ,WAAY,CAC/B4hB,YAAarrB,EAAOyJ,WACpB8hB,KAAMvrB,EAAOyJ,aAKjB,MAAMga,EAA0B,IAAIjlB,IAOpC,OANAitB,EAAUyB,SAAQ,EAAG7B,YAAAA,EAAaE,KAAAA,GAAQnb,KACpB,2BAAhBib,GACF5H,EAAG3jB,IAAIsQ,EAAMmb,MAIV,IAAIuB,GAAU,CACnBC,SAAAA,EACAtJ,GAAAA,EACAgI,UAAAA,IAIG3sB,aAAaquB,GAAcJ,SAAEA,IAClC,MAAMK,EAAmD,IAAI5uB,IAEvD6uB,EAASF,EAAK1nB,MAAM,QAE1B,IAAK,MAAM6nB,KAASD,EAAQ,CAC1B,MAAME,GAJcrtB,EAIUotB,EAJMptB,EAAIsF,QAAQ,aAAc,KAIzBoM,OACrC,GAAwB,IAApB2b,EAASjuB,OAAc,CACzB,MAAMkuB,EAAeD,EAASphB,QAAQ,MAChC1G,EAAQ8nB,EAAS9sB,MAAM,EAAG+sB,GAAc/nB,MAAM,OAC9C2K,EAAO3K,EAAM,GACb5C,EAAO4C,EAAM,GACb8lB,EAAOgC,EAAS9sB,MAAM+sB,EAAe,GAE3C,QAAa9uB,IAAT0R,QAA+B1R,IAATmE,QAA+BnE,IAAT6sB,EAC9C,SAGF,IAAIE,EAAY2B,EAAevtB,IAAIgD,QACjBnE,IAAd+sB,IACFA,EAAY,IAAIjtB,IAChB4uB,EAAettB,IAAI+C,EAAM4oB,IAE3BA,EAAU3rB,IAAIsQ,EAAMmb,IArBH,IAACrrB,EA0BtB,MAAMujB,EAA0B2J,EAAevtB,IAAI,2BAA6B,IAAIrB,IACpF,IAAK,MAAOivB,EAAK9oB,KAAU8e,EAAGiK,UACxBD,EAAI1W,SAAS,QACf0M,EAAG3jB,IAAI2tB,EAAIhtB,MAAM,GAAI,GAAIkE,GAM7B,MAAMgpB,EAAyC,IAAInvB,IAUnD,OATA4uB,EAAeF,SAAQ,CAACzB,EAAWJ,KACjCI,EAAUyB,SAAQ,CAACK,EAAkBnd,KACnCud,EAAgB7tB,IAAIsQ,EAAM,CACxBib,YAAAA,EACAE,KAAMgC,UAKL,IAAIT,GAAU,CACnBC,SAAAA,EACAtJ,GAAAA,EACAgI,UAAWkC,IAcR7uB,YAAYsR,GACjB,MAAMmb,KAAEA,EAAIF,YAAEA,GAAgBpsB,KAAKwsB,UAAU5rB,IAAIuQ,IAASwc,GAAmBxc,GAE7E,IAAIwd,EAtHR,IAAsB5tB,EA6HlB,OALE4tB,GADgC,IAA9BvC,EAAYlf,QAAQ,KACZ,QAAQkf,KAAeE,IAEvB,QAAQF,YA1HFrrB,EA0HqCurB,EAzHrC,oBAATsC,KACFA,KAAK7tB,GACe,oBAAX8tB,OACTA,OAAOle,KAAK5P,GAAQ+tB,SAAS,UAE/B/tB,IAuHE,CAAEurB,KAAAA,EAAMF,YAAAA,EAAauC,QAAAA,GAGvB9uB,oBACL,IAAIkvB,EAAgBvnB,EAAYxH,KAAK8tB,UAAY,EAMjD,OAJA9tB,KAAKwsB,UAAUyB,SAAQ,EAAG7B,YAAAA,EAAaE,KAAAA,GAAQnb,KAC7C4d,GAAiBvnB,EAAY2J,GAAQ3J,EAAY4kB,GAAe5kB,EAAY8kB,MAGvEyC,EAGFlvB,UAAUkB,GAEfA,EAAOuJ,UAAUtK,KAAK8tB,UAGtB/sB,EAAOiuB,WAAWhvB,KAAKwsB,UAAUnf,MACjCrN,KAAKwsB,UAAUyB,SAAQ,EAAG7B,YAAAA,EAAaE,KAAAA,GAAQnb,KAC7CpQ,EAAOuJ,UAAU6G,GACjBpQ,EAAOuJ,UAAU8hB,GACjBrrB,EAAOuJ,UAAUgiB,OC7HvB,MAAM3lB,GAAqB,IAAIC,YAAY,GClB3C,SAASqoB,GAAOrK,GACd,MAAO,MAAMA,EAAEre,QAAQ,wBAAyB,WAGlD,SAAS2oB,GAAqB1gB,EAAkBggB,EAAQ9oB,GACtD,IAAIypB,EAAS3gB,EAAI5N,IAAI4tB,QACN/uB,IAAX0vB,IACFA,EAAS,GACT3gB,EAAI3N,IAAI2tB,EAAKW,IAEfA,EAAOtqB,KAAKa,GAGd,SAAS0pB,GACPC,EACAC,GAEA,MAAMC,EAAwC,IAAIhwB,IAClD,IAAK,MAAM6T,KAAUic,EACnBH,GAAeK,EAASD,EAASlc,GAASA,GAE5C,OAAOoc,MAAM7e,KAAK4e,EAAQE,UAG5B,SAASC,GACPL,EACAM,GAKA,MAAMC,EAA4B,GAC5BC,EAA4B,GAElC,IAAK,MAAMzc,KAAUic,EACfM,EAAUvc,GACZwc,EAAS/qB,KAAKuO,GAEdyc,EAAShrB,KAAKuO,GAIlB,MAAO,CACLyc,SAAAA,EACAD,SAAAA,GAWJ,MAAME,GAAiC,CACrC,CACEC,YAAa,kCACbC,OAASX,GAA6BA,EAAQ,GAC9CY,gBAAkB7c,GAA0B,GAAKA,EAAO8c,QACxDC,OAAQ,KAAM,GAEhB,CACEJ,YAAa,+EACbC,OAASX,IACP,MAAM5O,EAAyB,IAAI9R,IAC7BgS,EAA4B,IAAIhS,IAChC6R,EAAwB,IAAI7R,IAC5B+R,EAA2B,IAAI/R,IAErC,IAAK,MAAMgU,QAAEA,KAAa0M,EACxB,QAAgB5vB,IAAZkjB,EAAuB,CACzB,QAA0BljB,IAAtBkjB,EAAQlC,UACV,IAAK,MAAMlH,KAAQoJ,EAAQlC,UACzBA,EAAU5R,IAAI0K,GAIlB,QAAyB9Z,IAArBkjB,EAAQnC,SACV,IAAK,MAAMjH,KAAQoJ,EAAQnC,SACzBA,EAAS3R,IAAI0K,GAIjB,QAA6B9Z,IAAzBkjB,EAAQhC,aACV,IAAK,MAAMpH,KAAQoJ,EAAQhC,aACzBA,EAAa9R,IAAI0K,GAIrB,QAA4B9Z,IAAxBkjB,EAAQjC,YACV,IAAK,MAAMnH,KAAQoJ,EAAQjC,YACzBA,EAAY7R,IAAI0K,GAMxB,OAAO,IAAIkN,GACTrW,OAAOC,OAAO,GAAIgf,EAAQ,GAAI,CAC5B1M,QAAS,IAAIpC,GAAQ,CACnBE,UAA8B,IAAnBA,EAAUpT,KAAa,IAAIzG,YAAY6Z,GAAWK,YAASrhB,EACtE+gB,SAA4B,IAAlBA,EAASnT,KAAa,IAAIzG,YAAY4Z,GAAUM,YAASrhB,EACnEkhB,aACwB,IAAtBA,EAAatT,KAAa,IAAIzG,YAAY+Z,GAAcG,YAASrhB,EACnEihB,YAAkC,IAArBA,EAAYrT,KAAa,IAAIzG,YAAY8Z,GAAaI,YAASrhB,IAE9EmjB,aACyBnjB,IAAvB4vB,EAAQ,GAAGzM,QACPyM,EAAQ7gB,KAAI,EAAGoU,QAAAA,KAAcA,IAASxc,KAAK,cAC3C3G,MAIZwwB,gBAAkB7c,GAChBA,EAAOsV,cAAgBtV,EAAOmV,YAAcnV,EAAOuX,UAAYvX,EAAOgX,cACxE+F,OAAS/c,IACNA,EAAOkX,cAAgC7qB,IAArB2T,EAAO+S,gBAA8C1mB,IAAnB2T,EAAOuP,SAEhE,CACEoN,YAAa,8CACbC,OAASX,IACP,MAAMe,EAAqB,GAC3B,IAAK,MAAMC,KAAKhB,EACVgB,EAAExH,UACJuH,EAASvrB,KAhIV,MAgI4BwrB,EAAEvH,WAhItB7X,WAiIEof,EAAE/J,gBACX8J,EAASvrB,KAAK,GAAGoqB,GAAOoB,EAAE9H,iBACjB8H,EAAEhK,eACX+J,EAASvrB,KAAK,IAAIoqB,GAAOoB,EAAE9H,gBAE3B6H,EAASvrB,KAAKoqB,GAAOoB,EAAE9H,cAI3B,OAAO,IAAI9B,GACTrW,OAAOC,OAAO,GAAIgf,EAAQ,GAAI,CAC5BrV,KAAMC,GAAOoV,EAAQ,GAAGrV,cACxB4I,aACyBnjB,IAAvB4vB,EAAQ,GAAGzM,QACPyM,EAAQ7gB,KAAI,EAAGoU,QAAAA,KAAcA,IAASxc,KAAK,cAC3C3G,EACNiS,MAAO,IAAIV,OAAOof,EAAShqB,KAAK,UAItC6pB,gBAAkB7c,GAChB,KAAyB,QAAnBA,EAAOuX,WAA2C,SAC1DwF,OAAS/c,QACY3T,IAAnB2T,EAAOuP,cACcljB,IAArB2T,EAAO+S,YACN/S,EAAOoV,qBACPpV,EAAOiX,eACPjX,EAAOkX,mBAOEgG,GAAoBjB,GAClC,OAAOA,WAGOkB,GAAqBlB,GACnC,OAAOA,WAMOmB,GAAgBnB,GAC9B,MAAMoB,EAAyB,GAC/B,IAAIC,EAASrB,EAEb,IAAK,MAAMc,OAAEA,EAAMH,OAAEA,EAAMC,gBAAEA,KAAqBH,GAAe,CAC/D,MAAMF,SAAEA,EAAQC,SAAEA,GAAaH,GAAQgB,EAAQP,GAC/CO,EAASb,EAET,MAAM9e,EAASqe,GAAQQ,EAAUK,GACjC,IAAK,MAAMU,KAAS5f,EACd4f,EAAMtwB,OAAS,EACjBowB,EAAM5rB,KAAKmrB,EAAOW,IAElBD,EAAO7rB,KAAK8rB,EAAM,IAKxB,IAAK,MAAMvd,KAAUsd,EACnBD,EAAM5rB,KAAKuO,GAGb,OAAOqd,ECrMT,SAASG,GAASC,GAQhB,OAPAA,IACAA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,KACVA,EASF,IAAIC,GAAM,EAeV,MAAMC,GAAuBhoB,OAAOioB,mBAAqB,QAiDpCC,GAoGnBpxB,aAAYyjB,YACVA,EAAW+L,QACXA,EAAO6B,SACPA,EAAQtF,OACRA,IAlCM5rB,kBAA4B2G,EAC5B3G,uBAA4B,EAC5BA,qBAA0B,EAC1BA,uBAAiC2G,EAOxB3G,WAAgC,IAAIT,IA+BnDS,KAAK4J,KAAOhC,EAAeojB,MAAMY,GACjC5rB,KAAKmxB,kBAAoB7N,EACzBtjB,KAAKkxB,SAAWA,EAChBlxB,KAAK4rB,OAASA,EAES,IAAnByD,EAAQhvB,QACVL,KAAKoxB,OAAO/B,OAAS5vB,GApHlBI,mBACLkB,EACAuiB,EACA4N,EACAtF,GAEA,MAAMyF,EAAwBtwB,EAAOmJ,YAC/BonB,EAAmBvwB,EAAOmJ,YAC1BqnB,EAAkBxwB,EAAOmJ,YAMzBN,EAAOhC,EAAeK,eAAelH,EAAOwJ,UAAS,GAAmBqhB,GACxE4F,EAAoB5nB,EAAK6nB,mBAAmBJ,GAC5CK,EAAe9nB,EAAK6nB,mBAAmBH,GACvCK,EAAoB/nB,EAAK7B,IAG/B,OAFA6B,EAAKhB,WAEE,IAAIqoB,GAAa,CACtBrF,OAAAA,EACAtI,YAAAA,EACA+L,QAAS,GACT6B,SAAAA,IACCU,gBAAgB,CACjBF,aAAAA,EACAC,kBAAAA,EACAJ,gBAAAA,EACAC,kBAAAA,EACA5nB,KAAAA,IA+FG/J,aACL,MAAMwvB,EAAe,GAErB,GAA6B,IAAzBrvB,KAAKuxB,gBACP,OAAOlC,EAITrvB,KAAK4J,KAAKioB,OAAO7xB,KAAK2xB,mBAEtB,IAAK,IAAIvxB,EAAI,EAAGA,EAAIJ,KAAKuxB,gBAAiBnxB,GAAK,EAC7CivB,EAAQxqB,KAAK7E,KAAKmxB,kBAAkBnxB,KAAK4J,OAG3C,OAAOylB,EAMFxvB,YACL,MAAM4R,EAAsB,IAAI9C,IAEhC,IAAK,IAAIvO,EAAI,EAAGA,EAAIJ,KAAK0xB,aAAarxB,OAAQD,GAAK,EACjDqR,EAAO5C,IAAI7O,KAAK0xB,aAAatxB,IAG/B,OAAO,IAAIwG,YAAY6K,GAMlB5R,oBAEL,OAAO,GAAKuH,EAAYpH,KAAK4J,KAAK7I,QAAQ,GAMrClB,UAAUkB,GACfA,EAAOkJ,WAAWjK,KAAKwxB,kBAAkBnxB,QACzCU,EAAOkJ,WAAWjK,KAAK0xB,aAAarxB,QACpCU,EAAOkJ,WAAWjK,KAAKuxB,iBAGvBxwB,EAAOqJ,UAAUpK,KAAK4J,KAAK7I,QAAQ,GAY9BlB,oBAAoB4R,EAAqBrF,GAK9C,MAAMoS,EA7PV,WACE,MAAM9O,EAAKohB,GAEX,OADAA,IAAOA,GAAM,GAAK,IACXphB,EA0PaoiB,GAElB,IAAK,MAAMlgB,KAASH,EAClB,IAA8C,IAA1CzR,KAAK+xB,WAAWngB,EAAO4M,EAAWpS,GACpC,OAKJpM,KAAK+xB,WAAW,EAAGvT,EAAWpS,GASzBvM,OAAOmyB,EAAiBC,GAEL,IAApBjyB,KAAKkyB,MAAM7kB,MACbrN,KAAKkyB,MAAMC,QAGb,MAAMhqB,EAAcnI,KAAK4rB,OAAO/jB,kBAChC,IAAIuqB,EAAsB,EACtBC,EAA8B,EAClC,MAAMC,EAAiC,GAKvC,IAAIhB,EAAmB,EAKnBiB,EAAsBvyB,KAAK4J,KAAK7I,OAAOa,WAAa5B,KAAK2xB,kBAMzDtC,EAAervB,KAAKisB,aACxB,GAAuB,IAAnBoD,EAAQhvB,OAAc,MAIDZ,IAAnBwyB,GAAwD,IAAxBA,EAAe5kB,OACjDgiB,EAAUA,EAAQjc,QAAQid,IACpB4B,EAAerjB,IAAIyhB,EAAEH,WACvBqC,GAAuBlC,EAAEzM,kBAAkBzb,IACpC,MAQb,IAAK,MAAMiL,KAAU4e,EACnBO,GAAuBnf,EAAOwQ,kBAAkBzb,GAChDknB,EAAQxqB,KAAKuO,OAEV,CAILic,EAAU2C,EACV,IAAK,MAAM5e,KAAU4e,EACnBO,GAAuBnf,EAAOwQ,kBAAkBzb,GAKpD,GAAuB,IAAnBknB,EAAQhvB,OAQV,YAPAL,KAAK4xB,gBAAgB,CACnBF,aAAc/qB,EACdgrB,kBAAmB,EACnBJ,gBAAiB,EACjBC,kBAAmB7qB,EACnBiD,KAAMhC,EAAeojB,MAAMhrB,KAAK4rB,WAQV,IAAtB5rB,KAAK4rB,OAAOzgB,OACdkkB,EAAQvO,MAAK,CAAC0R,EAAOC,IAAkBD,EAAGtC,QAAUuC,EAAGvC,UAGzD,MAAMwC,EAAY,IAAI9rB,YAAYvC,KAAKsuB,IAAI/B,GAAS,EAAIvB,EAAQhvB,QAAS,MAIzE,IAAK,MAAM+S,KAAUic,EAAS,CAG5B,MAAMuD,EAAcxf,EAAOyf,YAC3BP,EAAcztB,KAAK+tB,GAInBtB,GAAoB,EAAIsB,EAAYvyB,OACpCgyB,GAA+BO,EAAYvyB,OAK3C,IAAK,MAAMoR,KAAUmhB,EAAa,CAChCR,GAAuB3gB,EAAOpR,OAC9B,IAAK,MAAMuR,KAASH,EAClBihB,EAAU9gB,EAAQ8gB,EAAUryB,SAAW,GAM7CkyB,GAA0C,EAAnBjB,EAGvB,MAAMD,EAAgChtB,KAAKsuB,IAAI,EAAG/B,GAASyB,IACrDrY,EAAeqX,EAAwB,EACvCyB,EAAiC,GACvC,IAAK,IAAI1yB,EAAI,EAAGA,EAAIixB,EAAuBjxB,GAAK,EAC9C0yB,EAASjuB,KAAK,IAIhB0tB,GAA+C,EAAxBlB,EAKvB,MAAMtwB,EAAS6G,EAAemrB,SAASR,EAAqBvyB,KAAK4rB,QAC3D4F,EAAoBzwB,EAAO0wB,mBAAmBJ,GAC9CK,EAAe3wB,EAAO0wB,mBAAmBH,GACzCK,EAAoB5wB,EAAOogB,SAMjC,IAAK,IAAI/gB,EAAI,EAAGA,EAAIkyB,EAAcjyB,OAAQD,GAAK,EAAG,CAChD,MAAMgT,EAAYic,EAAQjvB,GACpBwyB,EAA6BN,EAAclyB,GAI3C4yB,EAAcjyB,EAAOgH,IAC3BqL,EAAOqQ,UAAU1iB,GAGjB,IAAK,MAAM0Q,KAAUmhB,EAAa,CAEhC,IAAIK,EAAoB,EACpBC,EAAmBd,EAAsB,EAC7C,IAAK,MAAMxgB,KAASH,EAAQ,CAC1B,MAAM0hB,EAAqBT,EAAU9gB,EAAQ8gB,EAAUryB,QACvD,GAAI8yB,EAAaD,IACfA,EAAWC,EACXF,EAAYrhB,EAIK,IAAbshB,GACF,MAONJ,EAASG,EAAYjZ,GAAMnV,KAAK,CAACouB,EAAWD,KAKhD,IAAII,EAAsB,EAC1B,IAAK,IAAIhzB,EAAI,EAAGA,EAAIixB,EAAuBjxB,GAAK,EAAG,CACjD,MAAMizB,EAAqCP,EAAS1yB,GACpDoxB,EAAkBpxB,GAAKgzB,EACvB,IAAK,MAAOxhB,EAAOohB,KAAgBK,EACjC3B,EAAa0B,KAAyBxhB,EACtC8f,EAAa0B,KAAyBJ,EAK1CjyB,EAAO6H,WACP5I,KAAK4xB,gBAAgB,CACnBF,aAAAA,EACAC,kBAAAA,EACAJ,gBAAiBe,EAAcjyB,OAC/BmxB,kBAAAA,EACA5nB,KAAM7I,IAIFlB,iBAAgB6xB,aACtBA,EAAYC,kBACZA,EAAiBJ,gBACjBA,EAAeC,kBACfA,EAAiB5nB,KACjBA,IAaA,OALA5J,KAAK0xB,aAAeA,EACpB1xB,KAAK2xB,kBAAoBA,EACzB3xB,KAAKuxB,gBAAkBA,EACvBvxB,KAAKwxB,kBAAoBA,EACzBxxB,KAAK4J,KAAOA,EACL5J,KAQDH,WAAW+R,EAAe4M,EAAmBpS,GACnD,IAAI+iB,GACkC,IAApCnvB,KAAK4rB,OAAOvgB,oBAA+BrL,KAAKkyB,MAAMtxB,IAAIgR,QAASnS,EAKrE,QAAeA,IAAX0vB,EAAsB,CACxB,MAAM3c,EAASZ,EAAS5R,KAAKwxB,kBAAkBnxB,OAAS,EAClDizB,EAAgBtzB,KAAKwxB,kBAAkBhf,GAG7C,GAAI8gB,IAAkBvC,GACpB,OAAO,EAOT,MAAMwC,EACJ/gB,IAAWxS,KAAKwxB,kBAAkBnxB,OAAS,EACvCL,KAAK0xB,aAAarxB,OAClBL,KAAKwxB,kBAAkBhf,EAAS,GAGhCghB,EAA2B,GACjC,IAAK,IAAIpzB,EAAIkzB,EAAelzB,EAAImzB,EAAanzB,GAAK,EAAG,CAC9BJ,KAAK0xB,aAAatxB,KAClBwR,GACnB4hB,EAAe3uB,KAAK7E,KAAK0xB,aAAatxB,EAAI,IAK9C,GAA8B,IAA1BozB,EAAenzB,OACjB,OAAO,EAKT,MAAMgvB,EAAe,GACfzlB,EAAO5J,KAAK4J,KAClB,IAAK,IAAIxJ,EAAI,EAAGA,EAAIozB,EAAenzB,OAAQD,GAAK,EAC9CwJ,EAAKioB,OAAO2B,EAAepzB,IAC3BivB,EAAQxqB,KAAK7E,KAAKmxB,kBAAkBvnB,IAKtCulB,EAAS,CACPE,QAASA,EAAQhvB,OAAS,EAAIL,KAAKkxB,SAAS7B,GAAWA,EACvDoE,iBAAkB,IAGoB,IAApCzzB,KAAK4rB,OAAOvgB,qBACdrL,KAAKkyB,MAAMrxB,IAAI+Q,EAAOud,GAK1B,GAAIA,EAAOsE,kBAAoBjV,EAAW,CACxC2Q,EAAOsE,gBAAkBjV,EACzB,MAAM6Q,EAAUF,EAAOE,QACvB,IAAK,IAAIjvB,EAAI,EAAGA,EAAIivB,EAAQhvB,OAAQD,GAAK,EAEvC,IAAuB,IAAnBgM,EAAGijB,EAAQjvB,IAAe,CAK5B,GAAIA,EAAI,EAAG,CACT,MAAMgT,EAASic,EAAQjvB,GACvBivB,EAAQjvB,GAAKivB,EAAQjvB,EAAI,GACzBivB,EAAQjvB,EAAI,GAAKgT,EAGnB,OAAO,GAKb,OAAO,GCjkBX,MAAMsgB,GAAgB,IAAI/zB,WAAW,SAQhBg0B,GAkBnB9zB,aAAY+rB,OACVA,EAAMtI,YACNA,EAAW+L,QACXA,IAMArvB,KAAKsjB,YAAcA,EACnBtjB,KAAKqvB,QAAUqE,GACf1zB,KAAK4rB,OAASA,EAES,IAAnByD,EAAQhvB,QACVL,KAAKoxB,OAAO/B,OAAS5vB,GA/BlBI,mBACLkB,EACAuiB,EACAsI,GAEA,MAAMgI,EAAY,IAAID,GAAiB,CAAErQ,YAAAA,EAAasI,OAAAA,EAAQyD,QAAS,KAEvE,OADAuE,EAAUvE,QAAUtuB,EAAOwJ,WACpBqpB,EA+BF/zB,OAAOmyB,EAAiBC,GAK7B,IAAI4B,EAA+B7zB,KAAKqvB,QAAQztB,WAC5CkyB,EAAgB,GACpB,MAAM3rB,EAAcnI,KAAK4rB,OAAO/jB,kBAG1BksB,EAAiB/zB,KAAKisB,aAC5B,GAA8B,IAA1B8H,EAAe1zB,OAIjB,QAAuBZ,IAAnBwyB,GAAwD,IAAxBA,EAAe5kB,KACjDymB,EAAWC,OAIX,IAAK,MAAM3gB,KAAU2gB,GACwB,IAAvC9B,EAAerjB,IAAIwE,EAAO8c,SAC5B4D,EAASjvB,KAAKuO,GAEdygB,GAAwBzgB,EAAOwQ,kBAAkBzb,GAOzD,MAAM6rB,EAAuBF,EAASzzB,SAAW0zB,EAAe1zB,OAG1D4zB,EAAkCH,EAASzzB,OACjD,IAAK,MAAM+S,KAAU4e,EACnB6B,GAAwBzgB,EAAOwQ,kBAAkBzb,GACjD2rB,EAASjvB,KAAKuO,GAIhB,MAAM8gB,EAA8BJ,EAASzzB,OAAS4zB,EAGtD,GAAwB,IAApBH,EAASzzB,OACXL,KAAKqvB,QAAUqE,QACV,IAA2B,IAAvBQ,IAAwD,IAAzBF,EAA+B,CAEvE,MAAMjzB,EAAS6G,EAAemrB,SAASc,EAAsB7zB,KAAK4rB,QAClE7qB,EAAOkJ,WAAW6pB,EAASzzB,SAKD,IAAtBL,KAAK4rB,OAAOzgB,OACd2oB,EAAShT,MAAK,CAAC0R,EAAOC,IAAkBD,EAAGtC,QAAUuC,EAAGvC,UAG1D,IAAK,MAAM9c,KAAU0gB,EACnB1gB,EAAOqQ,UAAU1iB,GAInBf,KAAKqvB,QAAUtuB,EAAOA,QAInBlB,oBACL,OAAOuH,EAAYpH,KAAKqvB,SAAS,GAG5BxvB,UAAUkB,GACfA,EAAOqJ,UAAUpK,KAAKqvB,SAGjBxvB,aAEL,GAAIG,KAAKqvB,QAAQztB,YAAc,EAC7B,MAAO,GAIT,MAAMytB,EAAe,GACftuB,EAAS6G,EAAeK,eAAejI,KAAKqvB,QAASrvB,KAAK4rB,QAC1D2F,EAAkBxwB,EAAOmJ,YAC/B,IAAK,IAAI9J,EAAI,EAAGA,EAAImxB,EAAiBnxB,GAAK,EACxCivB,EAAQxqB,KAAK7E,KAAKsjB,YAAYviB,IAGhC,OAAOsuB,YC3HK8E,GAAiBC,EAAiBvR,GAChD,GAAqB,IAAjBuR,EAAM/zB,OACR,MAAO,GAGT,MAAMg0B,EAA2B,KAC3BjlB,EAAkB,GAClBklB,EAAmB,MAAMzR,MAE/B,IAAK,IAAIziB,EAAI,EAAGA,EAAIg0B,EAAM/zB,OAAQD,GAAKi0B,EAA0B,CAI/D,IAAIjiB,EAAWgiB,EAAMh0B,GACrB,IACE,IAAII,EAAIJ,EAAI,EAAGkI,EAAMjE,KAAKgX,IAAI+Y,EAAM/zB,OAAQD,EAAIi0B,GAChD7zB,EAAI8H,EACJ9H,GAAK,EAEL4R,GAAY,MAAQgiB,EAAM5zB,GAO5B,GAHA4R,GAAYkiB,EAGRF,EAAM/zB,OAASg0B,EACjB,OAAOjiB,EAIThD,EAAMvK,KAAKuN,GAIb,OAAOhD,EAAMhJ,KAAK,MAQpB,SAASmuB,GAA0CH,GACjD,MAAMI,EAA2C,IAAIj1B,IAErD,IAAK,MAAMiiB,KAAQ4S,EAAO,CACxB,MAAMvR,EAAQrB,EAAKuD,WACbpR,EAAY6gB,EAAkB5zB,IAAIiiB,QACtBpjB,IAAdkU,EACF6gB,EAAkB3zB,IAAIgiB,EAAO,CAACrB,EAAK6C,gBAEnC1Q,EAAU9O,KAAK2c,EAAK6C,eAIxB,MAAMoQ,EAAwB,GACxBC,EAAyBlF,MAAM7e,KAAK6jB,EAAkB/F,WAC5D,IAAK,MAAO5L,EAAOlP,KAAc+gB,EAC/BD,EAAY5vB,KAAKsvB,GAAiBxgB,EAAWkP,IAG/C,OAAO4R,EAAYruB,KAAK,QAS1B,SAASuuB,GAA0BP,GACjC,MAAMzgB,EAAsB,GAC5B,IAAK,MAAM6N,KAAQ4S,EAAO,CACxB,GAAI5S,EAAKoT,iBACP,OAAOL,GAA0CH,GAGnDzgB,EAAU9O,KAAK2c,EAAKpP,UAGtB,OAAO+hB,GAAiBxgB,EAAWsO,IAGrC,SAAS4S,GAAmB1lB,EAAkByI,GAC5C,MAAMkd,EAAkBxW,GAAoCnP,EAAUyI,GAChEmd,EAAiB7W,GAAkC/O,EAAUyI,GAC7DnG,EAAS,IAAI7K,YAAYkuB,EAAgBz0B,OAAS00B,EAAe10B,QAEvE,IAAIyE,EAAQ,EAEZ,IAAK,MAAMyU,KAAQub,EACjBrjB,EAAO3M,KAAWyU,EAGpB,IAAK,MAAMA,KAAQwb,EACjBtjB,EAAO3M,KAAWyU,EAGpB,OAAO9H,QAQYujB,GAyEnBn1B,aAAYwvB,QAAEA,EAAU,GAAEzD,OAAEA,IAC1B5rB,KAAKi1B,aAAe,IAAItB,GAAiB,CACvC/H,OAAAA,EACAtI,YAAaZ,GAAeY,YAC5B+L,QAAS,KAGXrvB,KAAKk1B,aAAe,IAAIjE,GAAa,CACnCrF,OAAAA,EACAtI,YAAaZ,GAAeY,YAC5B+L,QAAS,GACT6B,SAAUX,KAGZvwB,KAAKm1B,cAAgB,IAAIlE,GAAa,CACpCrF,OAAAA,EACAtI,YAAaZ,GAAeY,YAC5B+L,QAAS,GACT6B,SAAUX,KAGZvwB,KAAKo1B,WAAa,IAAInE,GAAa,CACjCrF,OAAAA,EACAtI,YAAaZ,GAAeY,YAC5B+L,QAAS,GACT6B,SAAUX,KAGZvwB,KAAKq1B,UAAY,IAAIpE,GAAa,CAChCrF,OAAAA,EACAtI,YAAaZ,GAAeY,YAC5B+L,QAAS,GACT6B,SAAUX,KAGZvwB,KAAKs1B,SAAW,IAAIrE,GAAa,CAC/BrF,OAAAA,EACAtI,YAAaZ,GAAeY,YAC5B+L,QAAS,GACT6B,SAAUX,KAGZvwB,KAAKu1B,YAAc,IAAItE,GAAa,CAClCrF,OAAAA,EACAtI,YAAaZ,GAAeY,YAC5B+L,QAAS,GACT6B,SAAUX,KAIZvwB,KAAKw1B,eAAiB,KACtBx1B,KAAKy1B,kBAAoB,KAEF,IAAnBpG,EAAQhvB,QACVL,KAAKoxB,OAAO/B,OAAS5vB,EAAWmsB,GA9H7B/rB,mBAAmBkB,EAAwB6qB,GAChD,MAAMuD,EAAS,IAAI6F,GAAqB,CAAEpJ,OAAAA,IA8C1C,OA5CAuD,EAAO8F,aAAetB,GAAiBrQ,YAAYviB,EAAQ2hB,GAAeY,YAAasI,GAEvFuD,EAAO+F,aAAejE,GAAa3N,YACjCviB,EACA2hB,GAAeY,YACfiN,GACA3E,GAGFuD,EAAOgG,cAAgBlE,GAAa3N,YAClCviB,EACA2hB,GAAeY,YACfiN,GACA3E,GAGFuD,EAAOiG,WAAanE,GAAa3N,YAC/BviB,EACA2hB,GAAeY,YACfiN,GACA3E,GAGFuD,EAAOkG,UAAYpE,GAAa3N,YAC9BviB,EACA2hB,GAAeY,YACfiN,GACA3E,GAGFuD,EAAOmG,SAAWrE,GAAa3N,YAC7BviB,EACA2hB,GAAeY,YACfiN,GACA3E,GAGFuD,EAAOoG,YAActE,GAAa3N,YAChCviB,EACA2hB,GAAeY,YACfiN,GACA3E,GAGKuD,EAmFFtvB,aAEL,MADkC,GACnBqsB,OACblsB,KAAKi1B,aAAahJ,aAClBjsB,KAAKk1B,aAAajJ,aAClBjsB,KAAKm1B,cAAclJ,aACnBjsB,KAAKo1B,WAAWnJ,aAChBjsB,KAAKq1B,UAAUpJ,aACfjsB,KAAKs1B,SAASrJ,aACdjsB,KAAKu1B,YAAYtJ,cAIdpsB,OACLmyB,EACAC,EACArG,GAEA,MAAM8J,EAAmC,GACnCC,EAAqC,GACrCC,EAA0C,GAC1CC,EAAkC,GAClCC,EAA8B,GAC9BC,EAAgC,GAChCC,EAAgC,GAEtC,IAAK,MAAMxU,KAAQwQ,EACbxQ,EAAKsC,WACPkS,EAAYnxB,KAAK2c,GACRA,EAAKyU,kBACdH,EAAUjxB,KAAK2c,GACNA,EAAKiJ,gBACVjJ,EAAK0C,kBACPwR,EAAe7wB,KAAK2c,GACXA,EAAKyC,eACd8R,EAAYlxB,KAAK2c,GACRA,EAAK4C,iBACdyR,EAAchxB,KAAK2c,GAEnBmU,EAAiB9wB,KAAK2c,IAEO,IAAtBA,EAAK0U,eAA2D,IAAjCtK,EAAO/f,uBAC/C+pB,EAAsB/wB,KAAK2c,GAI/BxhB,KAAKi1B,aAAa7D,OAAOuE,EAAkB1D,GAC3CjyB,KAAKk1B,aAAa9D,OAAOsE,EAAgBzD,GACzCjyB,KAAKm1B,cAAc/D,OAAOwE,EAAuB3D,GACjDjyB,KAAKo1B,WAAWhE,OAAOyE,EAAe5D,GACtCjyB,KAAKq1B,UAAUjE,OAAO0E,EAAW7D,GACjCjyB,KAAKs1B,SAASlE,OAAO2E,EAAa9D,GAClCjyB,KAAKu1B,YAAYnE,OAAO4E,EAAa/D,GAGhCpyB,oBACL,OACEG,KAAKi1B,aAAarR,oBAClB5jB,KAAKk1B,aAAatR,oBAClB5jB,KAAKm1B,cAAcvR,oBACnB5jB,KAAKo1B,WAAWxR,oBAChB5jB,KAAKq1B,UAAUzR,oBACf5jB,KAAKs1B,SAAS1R,oBACd5jB,KAAKu1B,YAAY3R,oBAId/jB,UAAUkB,GACff,KAAKi1B,aAAaxR,UAAU1iB,GAC5Bf,KAAKk1B,aAAazR,UAAU1iB,GAC5Bf,KAAKm1B,cAAc1R,UAAU1iB,GAC7Bf,KAAKo1B,WAAW3R,UAAU1iB,GAC1Bf,KAAKq1B,UAAU5R,UAAU1iB,GACzBf,KAAKs1B,SAAS7R,UAAU1iB,GACxBf,KAAKu1B,YAAY9R,UAAU1iB,GAGtBlB,cAAa+X,OAClBA,EAAMzI,SACNA,IAOA,MAAMgnB,EAAiBtB,GAAmB1lB,EAAUyI,GAC9Cwc,EAA0B,GAChCp0B,KAAKq1B,UAAUe,oBAAoBD,GAAiB3U,IAC9CA,EAAK/Q,MAAMtB,EAAUyI,IACvBwc,EAAMvvB,KAAK2c,IAEN,KAIT,MAAM6U,EAA6B,IAAI1nB,IAWvC,OAVqB,IAAjBylB,EAAM/zB,QACRL,KAAKu1B,YAAYa,oBAAoBD,GAAiB3U,IAChDA,EAAK/Q,MAAMtB,EAAUyI,IACvBye,EAAcxnB,IAAI2S,EAAK6C,gBAGlB,KAIJ+P,EAAMhhB,QACVoO,GAAgC,IAAvB6U,EAAchpB,OAAwD,IAA1CgpB,EAAcznB,IAAI4S,EAAK6C,iBAO1DxkB,qBAAoB+X,OACzBA,EAAMzI,SACNA,EAAQmnB,QAERA,EAAU,GAAEC,MACZA,EAAQ,GAAEC,IACVA,EAAM,GAAEC,kBAERA,GAAoB,EAAIC,mBACxBA,GAAqB,EAAIC,aAGzBA,GAAe,EAAIC,kBACnBA,GAAoB,EAAIC,iBACxBA,GAAmB,EAAIC,gBACvBA,GAAkB,EAAIC,qBACtBA,GAAuB,IAwBvB,MAAMZ,EAAiBtB,GAAmB1lB,EAAUyI,GAC9Cwc,EAA0B,GA2BhC,IArB6B,IAAzB2C,GACF/2B,KAAKm1B,cAAciB,oBAAoBD,GAAiB3U,KAK5B,IAAvBkV,IAAyD,IAA1BlV,EAAKuC,mBACrCvC,EAAK/Q,MAAMtB,EAAUyI,IAErBwc,EAAMvvB,KAAK2c,IAEN,MAUe,IAAtBiV,IAAuD,IAAzBM,EAA+B,CAC/D,MAAM9B,EAAej1B,KAAKg3B,kBAC1B,IAAK,MAAMxV,KAAQyT,GACoB,IAAjCzT,EAAK/Q,MAAMtB,EAAUyI,IACvBwc,EAAMvvB,KAAK2c,IAQS,IAAtBiV,IAAkD,IAApBK,GAA+C,IAAnBR,EAAQj2B,QACpEL,KAAKk1B,aAAakB,oBAAoB9b,GAAYgc,IAAW9U,IACvDA,EAAK/Q,MAAMtB,EAAUyI,IACvBwc,EAAMvvB,KAAK2c,IAEN,MAOe,IAAtBiV,IAAkD,IAApBK,GAA2C,IAAfN,EAAIn2B,QAChEL,KAAKs1B,SAASc,oBAAoB9b,GAAYkc,IAAOhV,IAC/CA,EAAK/Q,MAAMtB,EAAUyI,IACvBwc,EAAMvvB,KAAK2c,IAEN,MAOe,IAAtBiV,IAAkD,IAApBK,GAA6C,IAAjBP,EAAMl2B,QAClEL,KAAKo1B,WAAWgB,6BJ9dQ3kB,GAC5B,MAAMwlB,EAASxlB,EAAOqP,OACtB,IAAItQ,EAAY,EAChB,IAAK,IAAIpQ,EAAI,EAAGA,EAAI62B,EAAO52B,OAAQD,GAAK,EAClC62B,EAAOzmB,EAAY,KAAOymB,EAAO72B,KACnC62B,EAAOzmB,KAAeymB,EAAO72B,IAIjC,OAAO62B,EAAOtuB,SAAS,EAAG6H,GIsdpB0mB,UJlc0BC,GAChC,GAAsB,IAAlBA,EAAO92B,OACT,OAAOsG,GAGT,GAAsB,IAAlBwwB,EAAO92B,OACT,OAAO82B,EAAO,GAGhB,IAAIC,EAAY,EAChB,IAAK,IAAIh3B,EAAI,EAAGA,EAAI+2B,EAAO92B,OAAQD,GAAK,EACtCg3B,GAAaD,EAAO/2B,GAAGC,OAGzB,MAAM8W,EAAS,IAAIvQ,YAAYwwB,GAC/B,IAAItyB,EAAQ,EACZ,IAAK,IAAI1E,EAAI,EAAGA,EAAI+2B,EAAO92B,OAAQD,GAAK,EAAG,CACzC,MAAMiH,EAAQ8vB,EAAO/2B,GACrB,IAAK,IAAII,EAAI,EAAGA,EAAI6G,EAAMhH,OAAQG,GAAK,EACrC2W,EAAOrS,KAAWuC,EAAM7G,GAI5B,OAAO2W,EI2aakgB,CAAkBd,EAAM/nB,KAAK8oB,GAAS5b,GAAe4b,QAClE9V,IACKA,EAAK/Q,MAAMtB,EAAUyI,IACvBwc,EAAMvvB,KAAK2c,IAEN,KAKb,MAAM+V,EAA6B,GAC7BC,EAA+B,GAC/BC,EAA2B,GAKjC,GAAqB,IAAjBrD,EAAM/zB,OAAc,CAMtB,IAAIq3B,GAAqB,EACzB,MAAMrB,EAA6B,IAAI1nB,IACvC3O,KAAKu1B,YAAYa,oBAAoBD,GAAiB3U,IAChDA,EAAK/Q,MAAMtB,EAAUyI,KACvBye,EAAcxnB,IAAI2S,EAAK6C,gBAIK,IAA1B7C,EAAKuC,mBACe,IAApBvC,EAAKsC,YACyB,IAA9BtC,EAAK6C,cAAchkB,SAEnBq3B,GAAqB,KAIlB,KAIT,IAAK,MAAMlW,KAAQ4S,EAEU,IAAvBiC,EAAchpB,MAAcgpB,EAAcznB,IAAI4S,EAAK6C,kBAKzB,IAA1B7C,EAAKuC,kBACmB,IAAtB6S,IAAqD,IAAvBc,GAChCF,EAAW3yB,KAAK2c,GAETA,EAAK0U,cACW,IAArBW,GACFU,EAAS1yB,KAAK2c,GAGhBiW,EAAO5yB,KAAK2c,IAMlB,IAAInE,GACe,IAAjBsZ,IAAgD,IAAtBF,EAA8B,GAAKz2B,KAAK23B,oBAE9C,IAAlBF,EAAOp3B,SACiB,IAAtBgd,EAAWhd,SACbgd,GAAc,QAGhBA,GAAcsX,GAA0B8C,IAG1C,MAAMG,EAAwD,GAC9D,GAAwB,IAApBL,EAASl3B,OAAc,CACzB,MAAMw3B,EAAsC,IAAIt4B,IAChD,IAAK,MAAMiiB,KAAQ+V,EAAU,CAC3B,MAAM/iB,EAAMgN,EAAKsW,iBACjB,QAAYr4B,IAAR+U,EAAmB,CACrB,MAAM/E,EAAY+R,EAAKuW,gBAAat4B,EAAY+hB,EAAKwW,6BAEnCv4B,IAAdgQ,GACFooB,EAAeh3B,IAAI2gB,EAAKuD,WAAYtV,GAGtCmoB,EAAkB/yB,KAAK,CACrB2P,IAAAA,EACAyjB,OAAQzW,EAAKuW,WACbtoB,UAAAA,KAKsB,IAAxBooB,EAAexqB,OACS,IAAtBgQ,EAAWhd,SACbgd,GAAc,QAGhBA,GAAc,IAAIwa,EAAepJ,WAC9BjgB,KAAI,EAAEqU,EAAOpT,KAAe,IAAIA,QAAgBoT,QAChDzc,KAAK,SAIZ,MAAO,CACLmxB,SAAUK,EACVJ,WAAAA,EACAna,WAAAA,GAQIxd,kBACN,OAA+B,OAA3BG,KAAKy1B,kBACAz1B,KAAKk4B,gCAAgCjD,aAEvCj1B,KAAKy1B,kBAUN51B,oBACN,OAA4B,OAAxBG,KAAKw1B,eACAx1B,KAAKk4B,gCAAgC1C,eAEvCx1B,KAAKw1B,eAUN31B,gCAIN,GAA4B,OAAxBG,KAAKw1B,gBAAsD,OAA3Bx1B,KAAKy1B,kBAA4B,CAEnE,MAAMO,EAAch2B,KAAKu1B,YAAYtJ,aAC/BkM,EAAoC,IAAIxpB,IAC9C,IAAK,MAAM6S,KAAQwU,EACjBmC,EAAqBtpB,IAAI2S,EAAK6C,eAUhC,MAAM4Q,EAAej1B,KAAKi1B,aAAahJ,aACjCmM,EAAwC,GACxCC,EAAqC,GAC3C,IAAK,MAAM7W,KAAQyT,EAEfzT,EAAKoT,kBACLpT,EAAKuC,kBACLvC,EAAKwC,yBACLmU,EAAqBvpB,IAAI4S,EAAK6C,eAE9BgU,EAAiBxzB,KAAK2c,GAEtB4W,EAAoBvzB,KAAK2c,GAI7BxhB,KAAKw1B,eAAiBb,GAA0ByD,GAChDp4B,KAAKy1B,kBAAoB4C,EAG3B,MAAO,CACL7C,eAAgBx1B,KAAKw1B,eACrBP,aAAcj1B,KAAKy1B,0BC/oBJ6C,GA4BnBz4B,aAAYwvB,QAAEA,EAAU,GAAEzD,OAAEA,IAC1B5rB,KAAK8E,MAAQ,IAAImsB,GAAa,CAC5BrF,OAAAA,EACAtI,YAAamD,GAAcnD,YAC3B+L,QAAS,GACT6B,SAAUtF,EAAOrgB,oBAAsBilB,GAAkBF,KAG3DtwB,KAAKu4B,cAAgB,KACrBv4B,KAAKw4B,WAAa,IAAI7E,GAAiB,CACrC/H,OAAAA,EACAtI,YAAamD,GAAcnD,YAC3B+L,QAAS,KAGY,IAAnBA,EAAQhvB,QACVL,KAAKoxB,OAAO/B,OAAS5vB,GA3ClBI,mBAAmBkB,EAAwB6qB,GAChD,MAAMuD,EAAS,IAAImJ,GAAoB,CAAE1M,OAAAA,IAWzC,OATAuD,EAAOrqB,MAAQmsB,GAAa3N,YAC1BviB,EACA0lB,GAAcnD,YACdsI,EAAOrgB,oBAAsBilB,GAAkBF,GAC/C1E,GAGFuD,EAAOqJ,WAAa7E,GAAiBrQ,YAAYviB,EAAQ0lB,GAAcnD,YAAasI,GAE7EuD,EAmCFtvB,aAEL,MADiC,GAClBqsB,OAAOlsB,KAAKw4B,WAAWvM,aAAcjsB,KAAK8E,MAAMmnB,cAG1DpsB,OAAOmyB,EAA6BC,GACzC,MAAMuG,EAA8B,GAC9Bld,EAA6B,GACnC,IAAK,MAAMlI,KAAU4e,EACf5e,EAAOsX,cACT8N,EAAW3zB,KAAKuO,GAEhBkI,EAAUzW,KAAKuO,GAInBpT,KAAKw4B,WAAWpH,OAAOoH,EAAYvG,GACnCjyB,KAAK8E,MAAMssB,OAAO9V,EAAW2W,GAC7BjyB,KAAKu4B,cAAgB,KAGhB14B,oBACL,OAAOG,KAAKw4B,WAAW5U,oBAAsB5jB,KAAK8E,MAAM8e,oBAGnD/jB,UAAUkB,GACff,KAAK8E,MAAM2e,UAAU1iB,GACrBf,KAAKw4B,WAAW/U,UAAU1iB,GAGrBlB,SAASioB,GACd,MAAMuH,EAA2B,GASjC,OAPArvB,KAAK8E,MAAMsxB,oBAAoBtO,EAAQ+K,aAAczf,IAC/CA,EAAO3C,MAAMqX,KAA8C,IAAlC9nB,KAAKy4B,iBAAiBrlB,IACjDic,EAAQxqB,KAAKuO,IAER,KAGFic,EAGFxvB,MAAMioB,GACX,IAAIrX,EAUJ,OARAzQ,KAAK8E,MAAMsxB,oBAAoBtO,EAAQ+K,aAAczf,IAC/CA,EAAO3C,MAAMqX,KAA8C,IAAlC9nB,KAAKy4B,iBAAiBrlB,KACjD3C,EAAQ2C,GACD,KAKJ3C,EAMD5Q,iBAAiBuT,GAKvB,GAA2B,OAAvBpT,KAAKu4B,cAAwB,CAC/B,MAAMC,EAAax4B,KAAKw4B,WAAWvM,aAGnC,GAA0B,IAAtBuM,EAAWn4B,OACb,OAAO,EAIT,MAAMk4B,EAA6B,IAAI5pB,IACvC,IAAK,MAAM+pB,KAAaF,EACtBD,EAAc1pB,IAAI6pB,EAAUC,yBAE9B34B,KAAKu4B,cAAgBA,EAGvB,OAAOv4B,KAAKu4B,cAAc3pB,IAAIwE,EAAO8c,gBCrH5B0I,GAAiB,IAE9B,SAASC,GAAyBxJ,GAChC,GAAuB,IAAnBA,EAAQhvB,OACV,OAAO,EAKT,IAAIy4B,EACAC,EAAe,EACnB,IAAK,MAAM3lB,KAAUic,EAAS,CAK5B,MAAM2J,GAAiB5lB,EAAO8W,cAAgB,EAAI,IAAM9W,EAAOwW,cAAgB,EAAI,GAG/EoP,GAASD,IACXA,EAAeC,EACfF,EAAoB1lB,GAIxB,YAA0B3T,IAAtBq5B,GAKGA,EAAkBlP,cC9B3B,MAAMqP,GAAQ,IAAIthEE,cACUG,mBAA4C,IAAIT,IAChDS,iBAA0C,IAAIT,IAK/CM,GAAG+M,EAAmBC,GAC3BF,EAAiBC,EAAOC,EAAU7M,KAAKk5B,aAOlCr5B,KAAK+M,EAAmBC,GAC7BF,EAAiBC,EAAOC,EAAU7M,KAAKm5B,eAMlCt5B,YAAY+M,EAAmBC,GACpCG,EAAmBJ,EAAOC,EAAU7M,KAAKk5B,aACzClsB,EAAmBJ,EAAOC,EAAU7M,KAAKm5B,eAMpCt5B,KAAK+M,KAAsBQ,GAChCD,EAAgBP,EAAOQ,EAAMpN,KAAKk5B,cACuB,IAArD/rB,EAAgBP,EAAOQ,EAAMpN,KAAKm5B,gBACpCn5B,KAAKm5B,cAAcC,OAAOxsB,K2D4J9B/M,aAAYisB,gBAEVA,EAAkB,GAAED,eACpBA,EAAiB,GAAED,OAEnBA,EAAS,IAAI1gB,EAAQmuB,MACrBA,EAAQ,IAAI95B,KAMV,IACF+5B,QAEAt5B,KAAK4rB,OAAS,IAAI1gB,EAAO0gB,GAGzB5rB,KAAKq5B,MAAQA,EAGbr5B,KAAKkmB,IAAM,IAAIoS,GAAoB,CAAE1M,OAAQ5rB,KAAK4rB,SAIlD5rB,KAAKu5B,eAAiB,IAAIjB,GAAoB,CAAE1M,OAAQ5rB,KAAK4rB,SAE7D5rB,KAAKw5B,WAAa,IAAIlB,GAAoB,CAAE1M,OAAQ5rB,KAAK4rB,SAEzD5rB,KAAKy5B,WAAa,IAAInB,GAAoB,CAAE1M,OAAQ5rB,KAAK4rB,SAEzD5rB,KAAK05B,UAAY,IAAIpB,GAAoB,CAAE1M,OAAQ5rB,KAAK4rB,SAExD5rB,KAAKqvB,QAAU,IAAIiJ,GAAoB,CAAE1M,OAAQ5rB,KAAK4rB,SAEtD5rB,KAAK25B,UAAY,IAAI3E,GAAqB,CAAEpJ,OAAQ5rB,KAAK4rB,SAGzD5rB,KAAKwsB,UAAY,IAAIqB,GAES,IAA1BhC,EAAexrB,QAA2C,IAA3ByrB,EAAgBzrB,QACjDL,KAAKoxB,OAAO,CACVwI,mBAAoB9N,EACpB+N,kBAAmBhO,IApOjBhsB,kBAENi6B,EACAC,GAEA,QAAgBt6B,IAAZs6B,EACF,OAAOD,IAGT,MAAME,KAAEA,EAAIC,KAAEA,EAAIC,MAAEA,GAAUH,EAC9B,OAAOE,EAAKD,GACTztB,MAAMxL,GAAWf,KAAKsjB,YAAYviB,KAClCyL,OAAM,IAAMstB,IAAOvtB,MAAM4tB,GAAWD,EAAMF,EAAMG,EAAO1W,aAAalX,MAAK,IAAM4tB,QAG7Et6B,aAEL+rB,EAA0B,IAE1B,OAAO,IAAI5rB,KAAK,CAAE4rB,OAAAA,IAWb/rB,iBAEL2N,EACAc,EACAsd,EAA0B,GAC1BmO,GAEA,OAAO/5B,KAAKo6B,YAAW,KACrB,MAAMC,EAAgBhsB,EAAWb,EAAOc,GAClCgsB,EAAmB7rB,EAAejB,GAExC,OAAOnB,QAAQkC,IAAI,CAAC8rB,EAAeC,IAAmB/tB,MAAK,EAAE8sB,EAAO7M,MAClE,MAAM2N,EAASn6B,KAAKsU,MAAM+kB,EAAMjzB,KAAK,MAAOwlB,GAK5C,YAJkBnsB,IAAd+sB,GACF2N,EAAOI,gBAAgB/N,EAAW,GAAKA,EAAUnsB,QAG5C85B,OAERJ,GAWEl6B,2BAEL26B,EAAmBhtB,MACnBusB,GAEA,OAAO/5B,KAAKy6B,UAAUD,EAAWtsB,EAAU,GAAI6rB,GAO1Cl6B,kCAEL26B,EAAmBhtB,MACnBusB,GAEA,OAAO/5B,KAAKy6B,UAAUD,EAAWrsB,EAAqB,GAAI4rB,GAOrDl6B,wBAEL26B,EAAmBhtB,MACnBusB,GAEA,OAAO/5B,KAAKy6B,UAAUD,EAAWpsB,EAAW,GAAI2rB,GAG3Cl6B,aAELwvB,EACArnB,EAA2B,IAE3B,MAAM4jB,EAAS,IAAI1gB,EAAOlD,GAC1B,OAAO,IAAIhI,oCACN2rB,GAAa0D,EAASzD,KACzBA,OAAAA,KAIG/rB,mBAEL66B,GAEA,MAAM35B,EAAS6G,EAAeK,eAAeyyB,EAAY,CACvD7yB,mBAAmB,IAMf8yB,EAA0B55B,EAAOitB,YACvC,GAAI4K,KAAmB+B,EACrB,MAAM,IAAI7yB,MACR,4DAA0E6yB,KAK9E,MAAM/O,EAAS1gB,EAAOoY,YAAYviB,GAUlC,GAPI6qB,EAAO/jB,mBACT9G,EAAO8G,oBAML+jB,EAAOngB,eAAgB,CACzB,MAAMmvB,EAAa75B,EAAOgH,IAC1BhH,EAAOgH,IAAM2yB,EAAWr6B,OAAS,EACjC,MAAMytB,EAAW/sB,EAAO+sB,WAClB+M,EAAW95B,EAAOmJ,YACxB,GAAI4jB,IAAa+M,EACf,MAAM,IAAI/yB,MACR,iDAAiD+yB,aAAoB/M,KAGzE/sB,EAAOgH,IAAM6yB,EAGf,MAAMT,EAAS,IAAIn6B,KAAK,CAAE4rB,OAAAA,IAG1BuO,EAAO3N,UAAYqB,GAAUvK,YAAYviB,GAGzC,MAAMs4B,EAAQ,IAAI95B,IACZu7B,EAAgB/5B,EAAOitB,YAC7B,IAAK,IAAI5tB,EAAI,EAAGA,EAAI06B,EAAe16B,GAAK,EACtCi5B,EAAMx4B,IAAIE,EAAOyJ,WAAYzJ,EAAOyJ,YActC,OAZA2vB,EAAOd,MAAQA,EAGfc,EAAOV,WAAanB,GAAoBhV,YAAYviB,EAAQ6qB,GAC5DuO,EAAOT,UAAYpB,GAAoBhV,YAAYviB,EAAQ6qB,GAC3DuO,EAAO9K,QAAUiJ,GAAoBhV,YAAYviB,EAAQ6qB,GACzDuO,EAAOX,WAAalB,GAAoBhV,YAAYviB,EAAQ6qB,GAE5DuO,EAAOjU,IAAMoS,GAAoBhV,YAAYviB,EAAQ6qB,GACrDuO,EAAOR,UAAY3E,GAAqB1R,YAAYviB,EAAQ6qB,GAC5DuO,EAAOZ,eAAiBjB,GAAoBhV,YAAYviB,EAAQ6qB,GAEzDuO,EA4EFt6B,oBACL,IAAIkvB,E9D7SC,E8D+SH/uB,KAAK4rB,OAAOhI,oBACZ5jB,KAAKwsB,UAAU5I,oBACf5jB,KAAKqvB,QAAQzL,oBACb5jB,KAAKw5B,WAAW5V,oBAChB5jB,KAAKy5B,WAAW7V,oBAChB5jB,KAAK05B,UAAU9V,oBACf5jB,KAAKkmB,IAAItC,oBACT5jB,KAAK25B,UAAU/V,oBACf5jB,KAAKu5B,eAAe3V,oBACpB,EAGF,IAAK,MAAOzS,EAAM2c,KAAa9tB,KAAKq5B,MAClCtK,GAAiBvnB,EAAY2J,GAAQ3J,EAAYsmB,GAGnD,OAAOiB,EAQFlvB,UAAUwH,GACf,MAAMtG,EAAS6G,EAAeK,eAC5BZ,GAAS,IAAI1H,WAAWK,KAAK4jB,qBAC7B5jB,KAAK4rB,QAGP7qB,EAAOiuB,WAAW4J,IAGlB54B,KAAK4rB,OAAOnI,UAAU1iB,GAGtBf,KAAKwsB,UAAU/I,UAAU1iB,GAGzBA,EAAOiuB,WAAWhvB,KAAKq5B,MAAMhsB,MAC7B,IAAK,MAAO8D,EAAMzL,KAAU8pB,MAAM7e,KAAK3Q,KAAKq5B,MAAM5K,WAAW3N,OAC3D/f,EAAOuJ,UAAU6G,GACjBpQ,EAAOuJ,UAAU5E,GAkBnB,OAdA1F,KAAKy5B,WAAWhW,UAAU1iB,GAC1Bf,KAAK05B,UAAUjW,UAAU1iB,GACzBf,KAAKqvB,QAAQ5L,UAAU1iB,GACvBf,KAAKw5B,WAAW/V,UAAU1iB,GAE1Bf,KAAKkmB,IAAIzC,UAAU1iB,GACnBf,KAAK25B,UAAUlW,UAAU1iB,GACzBf,KAAKu5B,eAAe9V,UAAU1iB,GAG1Bf,KAAK4rB,OAAOngB,gBACd1K,EAAOkJ,WAAWlJ,EAAO+sB,YAGpB/sB,EAAO4H,WAMT9I,cACL,OAAO2vB,MAAM7e,KAAK3Q,KAAKq5B,MAAM0B,QAGxBl7B,QAAQsR,EAAc2c,GAC3B,OAAO9tB,KAAKq5B,MAAMzqB,IAAIuC,IAASnR,KAAKq5B,MAAMz4B,IAAIuQ,KAAU2c,EAMnDjuB,gBAAgBquB,EAAcJ,GACnC,OAAI9tB,KAAKwsB,UAAUsB,WAAaA,IAIhC9tB,KAAKwsB,UAAYqB,GAAUvZ,MAAM4Z,EAAM,CAAEJ,SAAAA,KAClC,GAGFjuB,aAIL,MAAO,CACLisB,gBAJwC,GAIPI,OAAOlsB,KAAK25B,UAAU1N,cACvDJ,eAJsC,GAIPK,OAC7BlsB,KAAKqvB,QAAQpD,aACbjsB,KAAKw5B,WAAWvN,aAChBjsB,KAAKy5B,WAAWxN,aAChBjsB,KAAK05B,UAAUzN,aACfjsB,KAAKkmB,IAAI+F,aACTjsB,KAAKu5B,eAAetN,eAQnBpsB,QAAOg6B,kBACZA,EAAoB,GAAED,mBACtBA,EAAqB,GAAEoB,uBACvBA,EAAyB,GAAEC,sBAC3BA,EAAwB,KAExB,IAAIC,GAAmB,EAgBvB,IAZEl7B,KAAK4rB,OAAOjgB,qBACmB,IAA9BiuB,EAAmBv5B,QAAkD,IAAlC26B,EAAuB36B,SAE3D66B,GAAU,EACVl7B,KAAK25B,UAAUvI,OACbwI,EACkC,IAAlCoB,EAAuB36B,YAAeZ,EAAY,IAAIkP,IAAIqsB,GAC1Dh7B,KAAK4rB,SAMP5rB,KAAK4rB,OAAO7f,qBACkB,IAA7B8tB,EAAkBx5B,QAAiD,IAAjC46B,EAAsB56B,QACzD,CACA66B,GAAU,EACV,MAAM7L,EAA2B,GAC3BnJ,EAAuB,GACvBsT,EAA8B,GAC9BC,EAA8B,GAC9BC,EAA6B,GAC7BH,EAAkC,GAExC,IAAK,MAAMnmB,KAAUymB,EAKfzmB,EAAOkX,QACTpE,EAAIrhB,KAAKuO,GACAA,EAAOqX,iBAAmBrX,EAAOoX,iBAC1C+O,EAAe10B,KAAKuO,GACXA,EAAOwW,cAChB4P,EAAW30B,KAAKuO,GACPA,EAAO8W,cAChBuP,EAAW50B,KAAKuO,GACPA,EAAOiX,aAChBqP,EAAU70B,KAAKuO,GAEfic,EAAQxqB,KAAKuO,GAIjB,MAAM+nB,EAC6B,IAAjCF,EAAsB56B,YAAeZ,EAAY,IAAIkP,IAAIssB,GAG3Dj7B,KAAKy5B,WAAWrI,OAAOqI,EAAY0B,GACnCn7B,KAAK05B,UAAUtI,OAAOsI,EAAWyB,GACjCn7B,KAAKqvB,QAAQ+B,OAAO/B,EAAS8L,IAEY,IAArCn7B,KAAK4rB,OAAOhgB,sBACd5L,KAAKw5B,WAAWpI,OAAOoI,EAAY2B,IAGF,IAA/Bn7B,KAAK4rB,OAAOlgB,gBACd1L,KAAKkmB,IAAIkL,OAAOlL,EAAKiV,GAGvBn7B,KAAKu5B,eAAenI,OAAOmI,EAAgB4B,GAG7C,OAAOD,EAGFr7B,gBAAeu7B,MAAEA,EAAKC,QAAEA,IAC7B,MAAMzB,EAAuC,GACvCC,EAAqC,GACrCmB,EAA2C,GAC3CC,EAAyC,GAE/C,QAAgBx7B,IAAZ47B,GAA4C,IAAnBA,EAAQh7B,OAAc,CACjD,MAAMwrB,eAAEA,EAAcC,gBAAEA,GAAoBH,GAAa0P,EAAQj1B,KAAK,MAAOpG,KAAK4rB,QAClF4D,MAAM8L,UAAUz2B,KAAKU,MAAMy1B,EAAwBlP,GACnD0D,MAAM8L,UAAUz2B,KAAKU,MAAM01B,EAAuBpP,GAGpD,QAAcpsB,IAAV27B,GAAwC,IAAjBA,EAAM/6B,OAAc,CAC7C,MAAMwrB,eAAEA,EAAcC,gBAAEA,GAAoBH,GAAayP,EAAMh1B,KAAK,MAAOpG,KAAK4rB,QAChF4D,MAAM8L,UAAUz2B,KAAKU,MAAMq0B,EAAoB9N,GAC/C0D,MAAM8L,UAAUz2B,KAAKU,MAAMs0B,EAAmBhO,GAGhD,OAAO7rB,KAAKoxB,OAAO,CACjBwI,mBAAAA,EACAC,kBAAAA,EACAmB,uBAAwBA,EAAuBxsB,KAAK6hB,GAAMA,EAAEH,UAC5D+K,sBAAuBA,EAAsBzsB,KAAK6hB,GAAMA,EAAEH,YAOvDrwB,gBAAe4N,IAEpBA,EAAG0B,SACHA,EAAQyI,OACRA,IAMA,MAAM2jB,EAAgC,GAEtC,IAAwC,IAApCv7B,KAAK4rB,OAAOxgB,sBAAqE,IAApCpL,KAAK4rB,OAAOjgB,oBAC3D,OAAO4vB,EAGT,MAAMnH,EAAQp0B,KAAK25B,UAAU6B,aAAa,CACxC5jB,OAAQA,GAAU,GAClBzI,SAAAA,IAGF,IAAK,MAAMqS,KAAQ4S,EAAO,CACxB,MAAMmD,EAAW/V,EAAKia,2BACLh8B,IAAb83B,GACFgE,EAAc12B,KAAK0yB,GAQvB,OAJ6B,IAAzBgE,EAAcl7B,QAChBL,KAAK07B,KAAK,gBAAiBH,EAAe9tB,GAGrC8tB,EAOF17B,qBAAoB4N,IAEzBA,EAAG0B,SACHA,EAAQyI,OACRA,EAAM0e,QAGNA,EAAOC,MACPA,EAAKC,IACLA,EAAGG,aAGHA,GAAe,EAAIC,kBACnBA,GAAoB,EAAIC,iBACxBA,GAAmB,EAAIC,gBACvBA,GAAkB,EAAIC,qBACtBA,GAAuB,IAgBvB,IAAwC,IAApC/2B,KAAK4rB,OAAOjgB,oBACd,MAAO,CACLgwB,QAAQ,EACRpE,SAAU,GACVqE,QAAS,GACTnE,OAAQ,IAIZ,IAAIhB,GAAoB,EACpBC,GAAqB,EAEzB,MAAM8C,EAAax5B,KAAKu5B,eAAesC,SACrCtd,GAAQud,eAAe,CACrBlkB,OAAQA,GAAU,GAClBzI,SAAAA,EACA1B,IAAAA,EAEAiR,aAAc,GACdC,eAAgB,GAChBU,UAAW,MAIT0c,EAAgC,GAChCC,EAAiC,GACvC,IAAK,MAAM5oB,KAAUomB,EAAY,CAC/B,GAAIpmB,EAAOmX,aAAc,CACvBkM,GAAoB,EACpBC,GAAqB,EACrB,MAGEtjB,EAAOoX,iBACTwR,EAAcn3B,KAAKuO,GACVA,EAAOqX,iBAChBsR,EAAal3B,KAAKuO,IAII,IAAtBqjB,IACFA,GAA+D,IAA3CoC,GAAyBkD,KAGpB,IAAvBrF,IACFA,GAAiE,IAA5CmC,GAAyBmD,IAIhD,MAAMxE,WAAEA,EAAUna,WAAEA,EAAUka,SAAEA,GAAav3B,KAAK25B,UAAUsC,oBAAoB,CAC9ErkB,OAAQA,GAAU,GAClBzI,SAAAA,EAEAmnB,QAAAA,EACAC,MAAAA,EACAC,IAAAA,EAEAC,kBAAAA,EACAC,mBAAAA,EAEAC,aAAAA,EACAC,kBAAAA,EACAC,iBAAAA,EACAC,gBAAAA,EACAC,qBAAAA,IAII6E,EAAoB,GAC1B,IAAK,MAAMM,KAAa1E,EAAY,CAClC,MAAMta,EAASgf,EAAUC,UAAUn8B,KAAKwsB,UAAUhI,SACnC/kB,IAAXyd,IACFld,KAAK07B,KAAK,kBAAmBxe,EAAQzP,GACrCmuB,EAAQ/2B,KAAKqY,IASjB,OAJ0B,IAAtBG,EAAWhd,QACbL,KAAK07B,KAAK,iBAAkBre,EAAY5P,GAGnC,CACLkuB,QAAQ,EACRpE,SAAAA,EACAqE,QAAAA,EACAnE,OAAQpa,GAOLxd,SAASioB,GACd,MAAMuH,EAA2B,GAUjC,OATIvH,EAAQ7I,cACVuQ,MAAM8L,UAAUz2B,KAAKU,MAAM8pB,EAASrvB,KAAKy5B,WAAWoC,SAAS/T,IAC7D0H,MAAM8L,UAAUz2B,KAAKU,MAAM8pB,EAASrvB,KAAKqvB,QAAQwM,SAAS/T,IAC1D0H,MAAM8L,UAAUz2B,KAAKU,MAAM8pB,EAASrvB,KAAKw5B,WAAWqC,SAAS/T,IAC7D0H,MAAM8L,UAAUz2B,KAAKU,MAAM8pB,EAASrvB,KAAKkmB,IAAI2V,SAAS/T,IACtD0H,MAAM8L,UAAUz2B,KAAKU,MAAM8pB,EAASrvB,KAAKu5B,eAAesC,SAAS/T,IACjE0H,MAAM8L,UAAUz2B,KAAKU,MAAM8pB,EAASrvB,KAAK05B,UAAUmC,SAAS/T,KAGvD,IAAInZ,IAAI0gB,GAOVxvB,iBAAiBioB,GACtB,IAAK9nB,KAAK4rB,OAAO7f,mBACf,OAGF,IAA4B,IAAxB+b,EAAQ7I,cAAkD,IAA1B6I,EAAQsU,cAC1C,OAGF,MAAM5Z,EAAUxiB,KAAKkmB,IAAI2V,SAAS/T,GAGlC,GAAuB,IAAnBtF,EAAQniB,OACV,OAIF,MAAMg8B,EAAc,IAAI1tB,IAClB2tB,EAAa,IAAI3tB,IACvB,IAAK,MAAMyE,KAAUoP,EACnB,GAAIpP,EAAOwW,cAAe,CACxB,QAAmBnqB,IAAf2T,EAAO8S,IAET,OAEFmW,EAAYxtB,IAAIuE,EAAO8S,UAEvBoW,EAAWztB,IAAIuE,EAAO8S,KAK1B,MAAMqW,EACJ/M,MAAM7e,KAAK2rB,GACRlpB,QAAQ8S,IAASmW,EAAYztB,IAAIsX,KACjC9f,KAAK,YAAS3G,EAOnB,YAJaA,IAAT88B,GACFv8B,KAAK07B,KAAK,eAAgBa,EAAMzU,GAG3ByU,EAOF18B,MAAMioB,GACX,MAAM3Q,EAA2B,CAC/BqlB,eAAW/8B,EACX2T,YAAQ3T,EACRgR,OAAO,EACP1B,cAAUtP,GAGZ,IAAKO,KAAK4rB,OAAO7f,mBACf,OAAOoL,EAGT,GAAI2Q,EAAQ7I,YAAa,CAQvB,IAAIwd,EACAC,EAUJ,GAbAvlB,EAAO/D,OAASpT,KAAKy5B,WAAWhpB,MAAMqX,QAahBroB,IAAlB0X,EAAO/D,OAAsB,CAC/B,MAAMsmB,EAAY15B,KAAK05B,UAAUmC,SAAS/T,GAC1C,GAAyB,IAArB4R,EAAUr5B,OACZ,IAAK,MAAM+S,KAAUsmB,EACU,SAAzBtmB,EAAOgX,cACTqS,EAAerpB,EACNA,EAAO+W,iBAChBuS,EAAetpB,EAEf+D,EAAO/D,OAASA,OAQA3T,IAAlB0X,EAAO/D,SACT+D,EAAO/D,OAASpT,KAAKqvB,QAAQ5e,MAAMqX,QAKdroB,IAAjBi9B,QAAgDj9B,IAAlB0X,EAAO/D,SACvC+D,EAAO/D,OAASspB,SAMEj9B,IAAlB0X,EAAO/D,SACT+D,EAAOqlB,UAAYx8B,KAAKw5B,WAAW/oB,MAAMqX,SAUzBroB,IAAlB0X,EAAO/D,aACc3T,IAArB0X,EAAOqlB,WACPrlB,EAAO/D,OAAOiX,oBAEO5qB,IAAjBg9B,EACFtlB,EAAOqlB,UAAYC,EAEnBtlB,EAAOpI,SAAW/O,KAAKwsB,UAAUmQ,YAAYxlB,EAAO/D,OAAOgX,gBAkBjE,OAbAjT,EAAO1G,WAA6BhR,IAArB0X,EAAOqlB,gBAA6C/8B,IAAlB0X,EAAO/D,YAG/B3T,IAArB0X,EAAOqlB,UACTx8B,KAAK07B,KAAK,sBAAuB5T,EAAS3Q,QACb1X,IAApB0X,EAAOpI,SAChB/O,KAAK07B,KAAK,qBAAsB5T,EAAS3Q,QACd1X,IAAlB0X,EAAO/D,OAChBpT,KAAK07B,KAAK,kBAAmB5T,EAAS3Q,GAEtCnX,KAAK07B,KAAK,kBAAmB5T,EAAS3Q,GAGjCA,EAGFtX,eAIL,OAHAG,KAAK48B,eAAe,CAClBxB,MAAO,CAAC9rB,IAAQssB,UAAUiB,WAAW,cAAc/N,cAE9C9uB,KAGFH,cAIL,OAHAG,KAAK48B,eAAe,CAClBxB,MAAO,CAAC9rB,IAAQwtB,SAASD,WAAW,OAAO/N,cAEtC9uB,KAGFH,cAIL,OAHAG,KAAK48B,eAAe,CAClBxB,MAAO,CAAC9rB,IAAQytB,SAASF,WAAW,OAAO/N,cAEtC9uB,KAGFH,cAIL,OAHAG,KAAK48B,eAAe,CAClBxB,MAAO,CAAC9rB,IAAQ0tB,SAASH,WAAW,QAAQ/N,cAEvC9uB,KAGFH,aAIL,OAHAG,KAAK48B,eAAe,CAClBxB,MAAO,CAAC9rB,IAAQ2tB,QAAQnO,cAEnB9uB,KAGFH,cAIL,OAHAG,KAAK48B,eAAe,CAClBxB,MAAO,CAAC9rB,IAAQmoB,SAAS3I,cAEpB9uB,oG7BxrBTH,YAAY8T,GACV3T,KAAKe,OAAS,GACdf,KAAKowB,kBA1FiChd,GACxC,MAAMgd,EAAmC,GAEzC,IAAK,MAAO8M,EAAGvpB,KAAcP,EAAQ,CACnC,MAAM0O,EAA0B,GAC1BC,EAA2B,GAEjC,IAAK,MAAM3P,KAAYuB,EACU,KAA3BvB,EAAS1R,WAAW,GAClB0R,EAAS0F,SAAS,KACpBiK,EAAeld,KAAK,IAAImM,OAAOoB,EAAS5Q,MAAM,GAAI,KACzC4Q,EAAS0F,SAAS,OAC3BiK,EAAeld,KAAK,IAAImM,OAAOoB,EAAS5Q,MAAM,GAAI,GAAI,MAGxDsgB,EAAcjd,KAAKuN,GAIM,IAAzB0P,EAAczhB,QAA0C,IAA1B0hB,EAAe1hB,QAC/C+vB,EAASvrB,KAAK,CAACid,EAAeC,IAIlC,OAAOqO,EAkEW+M,CAA0BxpB,GAGrC9T,QACL,OAAOG,KAAKe,OAGPlB,MAAMwuB,GAEX,GAA6B,IAAzBruB,KAAKowB,SAAS/vB,OAChB,OAAOguB,EAIT,GAAqB,IAAjBA,EAAMhuB,OACR,OAAOguB,EAITruB,KAAKe,QAAUstB,EAGf,MAAO+O,EAAM9d,EAAQ+d,YA/LvBzQ,EACA/K,GAEA,MAAMub,EAA2B,GAC3BnuB,EAAS,IAAI4S,IACb3S,EAAS,KAAK2S,KAGpB,IAAI/c,EAAQ8nB,EAAK1f,QAAQ+B,GAErBquB,EAAe,EAEnB,MAAkB,IAAXx4B,GAAc,CAInB,MAAMy4B,EAAgB3Q,EAAK1f,QAAQ,IAAKpI,EAAQmK,EAAO5O,QACvD,IAAuB,IAAnBk9B,EACF,MAAO,CAACH,EAAMxQ,EAAKprB,MAAM,EAAGsD,GAAQ8nB,EAAKprB,MAAMsD,IAIjD,GAA2C,KAAvC8nB,EAAKlsB,WAAW68B,EAAgB,GAClCD,EAAeC,EAAgB,EAC/BH,EAAKv4B,KAAK,CAACC,EAAO8nB,EAAKprB,MAAMsD,EAAOw4B,SAC/B,CAIL,MAAME,EAAoB5Q,EAAK1f,QAAQgC,EAAQquB,GAC/C,IAA2B,IAAvBC,EACF,MAAO,CAACJ,EAAMxQ,EAAKprB,MAAM,EAAGsD,GAAQ8nB,EAAKprB,MAAMsD,IAGjDs4B,EAAKv4B,KAAK,CAACC,EAAO8nB,EAAKprB,MAAMsD,EAAO04B,EAAoBtuB,EAAO7O,UAC/Di9B,EAAeE,EAAoBtuB,EAAO7O,OAG5CyE,EAAQ8nB,EAAK1f,QAAQ+B,EAAQquB,GAa/B,IAAIG,EAAsB7Q,EAAKhoB,YAAY,MACd,IAAzB64B,IACFA,EAAsBH,GAGxB,MAAMI,EAAiB9Q,EAAK1f,QAAQ,IAAKuwB,GAIzC,OAAwB,IAApBC,GAQF9Q,EAAKvsB,OAASq9B,GAAkBzuB,EAAO5O,SACW,IAAlD4O,EAAOsG,WAAWqX,EAAKprB,MAAMk8B,IARtB,CAACN,EAAMxQ,EAAM,IAaf,CAACwQ,EAAMxQ,EAAKprB,MAAM,EAAGk8B,GAAiB9Q,EAAKprB,MAAMk8B,IAqHzBC,CAAoB39B,KAAKe,OAAQ,UAI9D,OAHAf,KAAKe,OAASs8B,EAGM,IAAhBD,EAAK/8B,OACAif,WA/CsBsN,EAAcgR,GAC/C,GAAwB,IAApBA,EAASv9B,OACX,OAAOusB,EAGT,IAAIiR,EAAejR,EACnBgR,EAASE,UACT,IAAK,MAAOh5B,EAAO+c,KAAQ+b,EACzBC,EAAeA,EAAar8B,MAAM,EAAGsD,GAAS+4B,EAAar8B,MAAMsD,EAAQ+c,EAAIxhB,QAG/E,OAAOw9B,EAwCEE,CAAmBze,WApE5B8Q,EACAgN,GAEA,MAAMQ,EAA+B,GAErC,IAAK,MAAM/b,KAAOub,EAChB,IAAK,MAAOtb,EAAeC,KAAmBqO,EAC5C,GAAIxO,GAAmBC,EAAI,GAAIC,EAAeC,GAAiB,CAC7D6b,EAAS/4B,KAAKgd,GACd,MAKN,OAAO+b,EAsD6BI,CAAmBh+B,KAAKowB,SAAUgN,8EGhItDl9B,GAChB,OAAOurB,GAAYvrB,EAAQ,gGAkH3B+9B,EACAC,EACAtS,EAA0B,IAAI1gB,GAG9B,MAAMizB,EAAc,IAAIjzB,EAAOkF,OAAOC,OAAO,GAAIub,EAAQ,CAAEzgB,OAAO,KAE5DizB,EAAsBnS,GAAWgS,EAAcE,GAC/CE,EAAkB,IAAI1vB,IAAIyvB,EAAoB5vB,KAAK4E,GAAWA,EAAO8c,WAErEoO,EAAqBrS,GAAWiS,EAAaC,GAC7CI,EAAiB,IAAI5vB,IAAI2vB,EAAmB9vB,KAAK4E,GAAWA,EAAO8c,WAGnEkL,EAAqB,IAAIzsB,IAC/B,IAAK,MAAMyE,KAAUkrB,EACdD,EAAgBzvB,IAAIwE,EAAO8c,UAC9BkL,EAAMvsB,IAAIuE,EAAOwP,SAKrB,MAAMyY,EAAuB,IAAI1sB,IACjC,IAAK,MAAMyE,KAAUgrB,EACdG,EAAe3vB,IAAIwE,EAAO8c,UAC7BmL,EAAQxsB,IAAIuE,EAAOwP,SAIvB,MAAO,CAAEwY,MAAO5L,MAAM7e,KAAKyqB,GAAQC,QAAS7L,MAAM7e,KAAK0qB,6EA9CvD5nB,EACAmY,EAA0B,IAAI1gB,GAG9B,OAAO,IAAIyD,IACTsd,GAAWxY,EAAM,IAAIvI,EAAOkF,OAAOC,OAAO,GAAIub,EAAQ,CAAEzgB,OAAO,MAAUqD,KACvE,EAAGoU,QAAAA,KAAcA,wC2B7KAtZ,GACrB,GAAqB,IAAjBA,EAAMjJ,OACR,OAAO,EAGT,IAAuB,IAnBzB,SAAiBiJ,GACf,GAAqB,IAAjBA,EAAMjJ,OACR,OAAO,EAGT,IAAK,IAAID,EAAI,EAAGA,EAAIkJ,EAAMjJ,OAAQD,GAAK,EACrC,GAAIkJ,EAAMlJ,GAAK,IACb,OAAO,EAIX,OAAO,EAQHo+B,CAAQl1B,GACV,OAAO,EAGT,IAAIm1B,EAAgB,EACpB,IAAK,IAAIr+B,EAAI,EAAGA,EAAIkJ,EAAMjJ,OAAQD,GAAK,EAAG,CACxC,MAAMwD,EAAOq1B,GAAM3vB,EAAMlJ,IAEzB,GADAq+B,EAAQxF,GAAM,IAAc,GAARwF,EAAa76B,GACnB,IAAV66B,QAAyBh/B,IAAVg/B,EACjB,OAAO,EAIX,OAAO,0BlCqWmBC,GAC1B,OAAOngB,GAAQud,eAAe4C,0BO5JLC,GACzB,MAAMC,EAA0B,IAAIjwB,IAC9BkwB,EAA4B,IAAIlwB,IAEtC,IAAK,MAAMysB,MAAEA,EAAKC,QAAEA,KAAasD,EAAO,CACtC,QAAcl/B,IAAV27B,EACF,IAAK,MAAMn6B,KAAOm6B,EACZyD,EAAajwB,IAAI3N,IACnB49B,EAAazF,OAAOn4B,GAEtB29B,EAAW/vB,IAAI5N,GAInB,QAAgBxB,IAAZ47B,EACF,IAAK,MAAMp6B,KAAOo6B,EACZuD,EAAWhwB,IAAI3N,IACjB29B,EAAWxF,OAAOn4B,GAEpB49B,EAAahwB,IAAI5N,GAKvB,MAAO,CACLm6B,MAAO5L,MAAM7e,KAAKiuB,GAClBvD,QAAS7L,MAAM7e,KAAKkuB"}